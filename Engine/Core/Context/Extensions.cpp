#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include "Extensions.hpp"

#if defined( OS_WINDOWS )
	WGLCREATECONTEXTATTRIBSARB wglCreateContextAttribsARB;
	WGLCHOOSEPIXELFORMATARB wglChoosePixelFormatARB;
	WGLSWAPINTERVALEXT wglSwapIntervalEXT;
#elif defined( OS_LINUX )
	GLXCREATECONTEXTATTRIBSARB glXCreateContextAttribsARB;
	GLXSWAPINTERVALSGI glXSwapIntervalSGI;
#endif

bool extensionsLoaded = false;

static void* get_proc(const char *namez);

#if defined(_WIN32) || defined(__CYGWIN__)
#include <windows.h>
static HMODULE libGL;

typedef void* (APIENTRYP PFNWGLGETPROCADDRESSPROC_PRIVATE)(const char*);
static PFNWGLGETPROCADDRESSPROC_PRIVATE GetProcAddressPtr;

#ifdef _MSC_VER
#ifdef __has_include
#if __has_include(<winapifamily.h>)
#define HAVE_WINAPIFAMILY 1
#endif
#elif _MSC_VER >= 1700 && !_USING_V110_SDK71_
#define HAVE_WINAPIFAMILY 1
#endif
#endif

#ifdef HAVE_WINAPIFAMILY
#include <winapifamily.h>
#if !WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP) && WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP)
#define IS_UWP 1
#endif
#endif

static
int open_gl(void) {
#ifndef IS_UWP
	libGL = LoadLibraryW(L"opengl32.dll");
	if (libGL != NULL) {
		void(*tmp)(void);
		tmp = (void(*)(void)) GetProcAddress(libGL, "wglGetProcAddress");
		GetProcAddressPtr = (PFNWGLGETPROCADDRESSPROC_PRIVATE)tmp;
		return GetProcAddressPtr != NULL;
	}
#endif

	return 0;
}

static
void close_gl(void) {
	if (libGL != NULL) {
		FreeLibrary((HMODULE)libGL);
		libGL = NULL;
	}
}
#else
#include <dlfcn.h>
static void* libGL;

#if !defined(__APPLE__) && !defined(__HAIKU__)
	typedef void* (APIENTRYP PFNGLXGETPROCADDRESSPROC_PRIVATE)(const char*);
	static PFNGLXGETPROCADDRESSPROC_PRIVATE GetProcAddressPtr;
#endif

static
int open_gl(void) {
#ifdef __APPLE__
	static const char *NAMES[] = {
		"../Frameworks/OpenGL.framework/OpenGL",
		"/Library/Frameworks/OpenGL.framework/OpenGL",
		"/System/Library/Frameworks/OpenGL.framework/OpenGL",
		"/System/Library/Frameworks/OpenGL.framework/Versions/Current/OpenGL"
	};
#else
	static const char *NAMES[] = { "libGL.so.1", "libGL.so" };
#endif

	unsigned int index = 0;
	for (index = 0; index < (sizeof(NAMES) / sizeof(NAMES[0])); index++) {
		libGL = dlopen(NAMES[index], RTLD_NOW | RTLD_GLOBAL);

		if (libGL != NULL) {
#if defined(__APPLE__) || defined(__HAIKU__)
			return 1;
#else
			GetProcAddressPtr = (PFNGLXGETPROCADDRESSPROC_PRIVATE)dlsym(libGL,
				"glXGetProcAddressARB");
			return GetProcAddressPtr != NULL;
#endif
		}
	}

	return 0;
}

static
void close_gl(void) {
	if (libGL != NULL) {
		dlclose(libGL);
		libGL = NULL;
	}
}
#endif

static void* get_proc(const char *namez) {
    void* result = NULL;
    if(libGL == NULL) return NULL;

#if !defined(__APPLE__) && !defined(__HAIKU__)
    if(GetProcAddressPtr != NULL) {
        result = GetProcAddressPtr(namez);
    }
#endif
    if(result == NULL) {
#if defined(_WIN32) || defined(__CYGWIN__)
        result = (void*)GetProcAddress((HMODULE) libGL, namez);
#else
        result = dlsym(libGL, namez);
#endif
/*#ifdef OS_LINUX
		result =  (void*)glXGetProcAddressARB((const GLubyte*)namez);
#endif*/
    }
    return result;
}

int LoadGL(void) {
	int status = 0;

	if (open_gl()) {
		status = LoadGLLoader(&get_proc);
		close_gl();
	}

	return status;
}

struct GLversionStruct GLVersion = { 0, 0 };

#if defined(GL_ES_VERSION_3_0) || defined(GL_VERSION_3_0)
#define __IS_SOME_NEW_VERSION 1
#endif

static int max_loaded_major;
static int max_loaded_minor;

static const char *exts = NULL;
static int num_exts_i = 0;
static char **exts_i = NULL;

static int get_exts(void) {
#ifdef __IS_SOME_NEW_VERSION
	if (max_loaded_major < 3) {
#endif
		exts = (const char *)glGetString(GL_EXTENSIONS);
#ifdef __IS_SOME_NEW_VERSION
	}
	else {
		unsigned int index;

		num_exts_i = 0;
		glGetIntegerv(GL_NUM_EXTENSIONS, &num_exts_i);
		if (num_exts_i > 0) {
			char **tmp_exts_i = (char **)realloc((void *)exts_i, (size_t)num_exts_i * (sizeof *exts_i));
			if (tmp_exts_i == NULL) {
				return 0;
			}
			exts_i = tmp_exts_i;
		}

		if (exts_i == NULL) {
			return 0;
		}

		for (index = 0; index < (unsigned)num_exts_i; index++) {
			const char *gl_str_tmp = (const char*)glGetStringi(GL_EXTENSIONS, index);
			size_t len = strlen(gl_str_tmp);

			char *local_str = (char*)malloc((len + 1) * sizeof(char));
			if (local_str != NULL) {
				memcpy(local_str, gl_str_tmp, (len + 1) * sizeof(char));
			}
			exts_i[index] = local_str;
		}
	}
#endif
	return 1;
}

static void free_exts(void) {
	if (exts_i != NULL) {
		int index;
		for (index = 0; index < num_exts_i; index++) {
			free((char *)exts_i[index]);
		}
		free((void *)exts_i);
		exts_i = NULL;
	}
}

static int has_ext(const char *ext) {
#ifdef __IS_SOME_NEW_VERSION
	if (max_loaded_major < 3) {
#endif
		const char *extensions;
		const char *loc;
		const char *terminator;
		extensions = exts;
		if (extensions == NULL || ext == NULL) {
			return 0;
		}

		while (1) {
			loc = strstr(extensions, ext);
			if (loc == NULL) {
				return 0;
			}

			terminator = loc + strlen(ext);
			if ((loc == extensions || *(loc - 1) == ' ') &&
				(*terminator == ' ' || *terminator == '\0')) {
				return 1;
			}
			extensions = terminator;
		}
#ifdef __IS_SOME_NEW_VERSION
	}
	else {
		int index;
		if (exts_i == NULL) return 0;
		for (index = 0; index < num_exts_i; index++) {
			const char *e = exts_i[index];

			if (exts_i[index] != NULL && strcmp(e, ext) == 0) {
				return 1;
			}
		}
	}
#endif

	return 0;
}

int _GL_VERSION_1_0 = 0;
int _GL_VERSION_1_1 = 0;
int _GL_VERSION_1_2 = 0;
int _GL_VERSION_1_3 = 0;
int _GL_VERSION_1_4 = 0;
int _GL_VERSION_1_5 = 0;
int _GL_VERSION_2_0 = 0;
int _GL_VERSION_2_1 = 0;
int _GL_VERSION_3_0 = 0;
int _GL_VERSION_3_1 = 0;
int _GL_VERSION_3_2 = 0;
int _GL_VERSION_3_3 = 0;
int _GL_VERSION_4_0 = 0;
int _GL_VERSION_4_1 = 0;
int _GL_VERSION_4_2 = 0;
int _GL_VERSION_4_3 = 0;
int _GL_VERSION_4_4 = 0;
PFNGLACCUMPROC _glAccum = NULL;
PFNGLACTIVESHADERPROGRAMPROC _glActiveShaderProgram = NULL;
PFNGLACTIVETEXTUREPROC _glActiveTexture = NULL;
PFNGLALPHAFUNCPROC _glAlphaFunc = NULL;
PFNGLARETEXTURESRESIDENTPROC _glAreTexturesResident = NULL;
PFNGLARRAYELEMENTPROC _glArrayElement = NULL;
PFNGLATTACHSHADERPROC _glAttachShader = NULL;
PFNGLBEGINPROC _glBegin = NULL;
PFNGLBEGINCONDITIONALRENDERPROC _glBeginConditionalRender = NULL;
PFNGLBEGINQUERYPROC _glBeginQuery = NULL;
PFNGLBEGINQUERYINDEXEDPROC _glBeginQueryIndexed = NULL;
PFNGLBEGINTRANSFORMFEEDBACKPROC _glBeginTransformFeedback = NULL;
PFNGLBINDATTRIBLOCATIONPROC _glBindAttribLocation = NULL;
PFNGLBINDBUFFERPROC _glBindBuffer = NULL;
PFNGLBINDBUFFERBASEPROC _glBindBufferBase = NULL;
PFNGLBINDBUFFERRANGEPROC _glBindBufferRange = NULL;
PFNGLBINDBUFFERSBASEPROC _glBindBuffersBase = NULL;
PFNGLBINDBUFFERSRANGEPROC _glBindBuffersRange = NULL;
PFNGLBINDFRAGDATALOCATIONPROC _glBindFragDataLocation = NULL;
PFNGLBINDFRAGDATALOCATIONINDEXEDPROC _glBindFragDataLocationIndexed = NULL;
PFNGLBINDFRAMEBUFFERPROC _glBindFramebuffer = NULL;
PFNGLBINDIMAGETEXTUREPROC _glBindImageTexture = NULL;
PFNGLBINDIMAGETEXTURESPROC _glBindImageTextures = NULL;
PFNGLBINDPROGRAMPIPELINEPROC _glBindProgramPipeline = NULL;
PFNGLBINDRENDERBUFFERPROC _glBindRenderbuffer = NULL;
PFNGLBINDSAMPLERPROC _glBindSampler = NULL;
PFNGLBINDSAMPLERSPROC _glBindSamplers = NULL;
PFNGLBINDTEXTUREPROC _glBindTexture = NULL;
PFNGLBINDTEXTURESPROC _glBindTextures = NULL;
PFNGLBINDTRANSFORMFEEDBACKPROC _glBindTransformFeedback = NULL;
PFNGLBINDVERTEXARRAYPROC _glBindVertexArray = NULL;
PFNGLBINDVERTEXBUFFERPROC _glBindVertexBuffer = NULL;
PFNGLBINDVERTEXBUFFERSPROC _glBindVertexBuffers = NULL;
PFNGLBITMAPPROC _glBitmap = NULL;
PFNGLBLENDCOLORPROC _glBlendColor = NULL;
PFNGLBLENDEQUATIONPROC _glBlendEquation = NULL;
PFNGLBLENDEQUATIONSEPARATEPROC _glBlendEquationSeparate = NULL;
PFNGLBLENDEQUATIONSEPARATEIPROC _glBlendEquationSeparatei = NULL;
PFNGLBLENDEQUATIONIPROC _glBlendEquationi = NULL;
PFNGLBLENDFUNCPROC _glBlendFunc = NULL;
PFNGLBLENDFUNCSEPARATEPROC _glBlendFuncSeparate = NULL;
PFNGLBLENDFUNCSEPARATEIPROC _glBlendFuncSeparatei = NULL;
PFNGLBLENDFUNCIPROC _glBlendFunci = NULL;
PFNGLBLITFRAMEBUFFERPROC _glBlitFramebuffer = NULL;
PFNGLBUFFERDATAPROC _glBufferData = NULL;
PFNGLBUFFERSTORAGEPROC _glBufferStorage = NULL;
PFNGLBUFFERSUBDATAPROC _glBufferSubData = NULL;
PFNGLCALLLISTPROC _glCallList = NULL;
PFNGLCALLLISTSPROC _glCallLists = NULL;
PFNGLCHECKFRAMEBUFFERSTATUSPROC _glCheckFramebufferStatus = NULL;
PFNGLCLAMPCOLORPROC _glClampColor = NULL;
PFNGLCLEARPROC _glClear = NULL;
PFNGLCLEARACCUMPROC _glClearAccum = NULL;
PFNGLCLEARBUFFERDATAPROC _glClearBufferData = NULL;
PFNGLCLEARBUFFERSUBDATAPROC _glClearBufferSubData = NULL;
PFNGLCLEARBUFFERFIPROC _glClearBufferfi = NULL;
PFNGLCLEARBUFFERFVPROC _glClearBufferfv = NULL;
PFNGLCLEARBUFFERIVPROC _glClearBufferiv = NULL;
PFNGLCLEARBUFFERUIVPROC _glClearBufferuiv = NULL;
PFNGLCLEARCOLORPROC _glClearColor = NULL;
PFNGLCLEARDEPTHPROC _glClearDepth = NULL;
PFNGLCLEARDEPTHFPROC _glClearDepthf = NULL;
PFNGLCLEARINDEXPROC _glClearIndex = NULL;
PFNGLCLEARSTENCILPROC _glClearStencil = NULL;
PFNGLCLEARTEXIMAGEPROC _glClearTexImage = NULL;
PFNGLCLEARTEXSUBIMAGEPROC _glClearTexSubImage = NULL;
PFNGLCLIENTACTIVETEXTUREPROC _glClientActiveTexture = NULL;
PFNGLCLIENTWAITSYNCPROC _glClientWaitSync = NULL;
PFNGLCLIPPLANEPROC _glClipPlane = NULL;
PFNGLCOLOR3BPROC _glColor3b = NULL;
PFNGLCOLOR3BVPROC _glColor3bv = NULL;
PFNGLCOLOR3DPROC _glColor3d = NULL;
PFNGLCOLOR3DVPROC _glColor3dv = NULL;
PFNGLCOLOR3FPROC _glColor3f = NULL;
PFNGLCOLOR3FVPROC _glColor3fv = NULL;
PFNGLCOLOR3IPROC _glColor3i = NULL;
PFNGLCOLOR3IVPROC _glColor3iv = NULL;
PFNGLCOLOR3SPROC _glColor3s = NULL;
PFNGLCOLOR3SVPROC _glColor3sv = NULL;
PFNGLCOLOR3UBPROC _glColor3ub = NULL;
PFNGLCOLOR3UBVPROC _glColor3ubv = NULL;
PFNGLCOLOR3UIPROC _glColor3ui = NULL;
PFNGLCOLOR3UIVPROC _glColor3uiv = NULL;
PFNGLCOLOR3USPROC _glColor3us = NULL;
PFNGLCOLOR3USVPROC _glColor3usv = NULL;
PFNGLCOLOR4BPROC _glColor4b = NULL;
PFNGLCOLOR4BVPROC _glColor4bv = NULL;
PFNGLCOLOR4DPROC _glColor4d = NULL;
PFNGLCOLOR4DVPROC _glColor4dv = NULL;
PFNGLCOLOR4FPROC _glColor4f = NULL;
PFNGLCOLOR4FVPROC _glColor4fv = NULL;
PFNGLCOLOR4IPROC _glColor4i = NULL;
PFNGLCOLOR4IVPROC _glColor4iv = NULL;
PFNGLCOLOR4SPROC _glColor4s = NULL;
PFNGLCOLOR4SVPROC _glColor4sv = NULL;
PFNGLCOLOR4UBPROC _glColor4ub = NULL;
PFNGLCOLOR4UBVPROC _glColor4ubv = NULL;
PFNGLCOLOR4UIPROC _glColor4ui = NULL;
PFNGLCOLOR4UIVPROC _glColor4uiv = NULL;
PFNGLCOLOR4USPROC _glColor4us = NULL;
PFNGLCOLOR4USVPROC _glColor4usv = NULL;
PFNGLCOLORMASKPROC _glColorMask = NULL;
PFNGLCOLORMASKIPROC _glColorMaski = NULL;
PFNGLCOLORMATERIALPROC _glColorMaterial = NULL;
PFNGLCOLORP3UIPROC _glColorP3ui = NULL;
PFNGLCOLORP3UIVPROC _glColorP3uiv = NULL;
PFNGLCOLORP4UIPROC _glColorP4ui = NULL;
PFNGLCOLORP4UIVPROC _glColorP4uiv = NULL;
PFNGLCOLORPOINTERPROC _glColorPointer = NULL;
PFNGLCOMPILESHADERPROC _glCompileShader = NULL;
PFNGLCOMPRESSEDTEXIMAGE1DPROC _glCompressedTexImage1D = NULL;
PFNGLCOMPRESSEDTEXIMAGE2DPROC _glCompressedTexImage2D = NULL;
PFNGLCOMPRESSEDTEXIMAGE3DPROC _glCompressedTexImage3D = NULL;
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC _glCompressedTexSubImage1D = NULL;
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC _glCompressedTexSubImage2D = NULL;
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC _glCompressedTexSubImage3D = NULL;
PFNGLCOPYBUFFERSUBDATAPROC _glCopyBufferSubData = NULL;
PFNGLCOPYIMAGESUBDATAPROC _glCopyImageSubData = NULL;
PFNGLCOPYPIXELSPROC _glCopyPixels = NULL;
PFNGLCOPYTEXIMAGE1DPROC _glCopyTexImage1D = NULL;
PFNGLCOPYTEXIMAGE2DPROC _glCopyTexImage2D = NULL;
PFNGLCOPYTEXSUBIMAGE1DPROC _glCopyTexSubImage1D = NULL;
PFNGLCOPYTEXSUBIMAGE2DPROC _glCopyTexSubImage2D = NULL;
PFNGLCOPYTEXSUBIMAGE3DPROC _glCopyTexSubImage3D = NULL;
PFNGLCREATEPROGRAMPROC _glCreateProgram = NULL;
PFNGLCREATESHADERPROC _glCreateShader = NULL;
PFNGLCREATESHADERPROGRAMVPROC _glCreateShaderProgramv = NULL;
PFNGLCULLFACEPROC _glCullFace = NULL;
PFNGLDEBUGMESSAGECALLBACKPROC _glDebugMessageCallback = NULL;
PFNGLDEBUGMESSAGECONTROLPROC _glDebugMessageControl = NULL;
PFNGLDEBUGMESSAGEINSERTPROC _glDebugMessageInsert = NULL;
PFNGLDELETEBUFFERSPROC _glDeleteBuffers = NULL;
PFNGLDELETEFRAMEBUFFERSPROC _glDeleteFramebuffers = NULL;
PFNGLDELETELISTSPROC _glDeleteLists = NULL;
PFNGLDELETEPROGRAMPROC _glDeleteProgram = NULL;
PFNGLDELETEPROGRAMPIPELINESPROC _glDeleteProgramPipelines = NULL;
PFNGLDELETEQUERIESPROC _glDeleteQueries = NULL;
PFNGLDELETERENDERBUFFERSPROC _glDeleteRenderbuffers = NULL;
PFNGLDELETESAMPLERSPROC _glDeleteSamplers = NULL;
PFNGLDELETESHADERPROC _glDeleteShader = NULL;
PFNGLDELETESYNCPROC _glDeleteSync = NULL;
PFNGLDELETETEXTURESPROC _glDeleteTextures = NULL;
PFNGLDELETETRANSFORMFEEDBACKSPROC _glDeleteTransformFeedbacks = NULL;
PFNGLDELETEVERTEXARRAYSPROC _glDeleteVertexArrays = NULL;
PFNGLDEPTHFUNCPROC _glDepthFunc = NULL;
PFNGLDEPTHMASKPROC _glDepthMask = NULL;
PFNGLDEPTHRANGEPROC _glDepthRange = NULL;
PFNGLDEPTHRANGEARRAYVPROC _glDepthRangeArrayv = NULL;
PFNGLDEPTHRANGEINDEXEDPROC _glDepthRangeIndexed = NULL;
PFNGLDEPTHRANGEFPROC _glDepthRangef = NULL;
PFNGLDETACHSHADERPROC _glDetachShader = NULL;
PFNGLDISABLEPROC _glDisable = NULL;
PFNGLDISABLECLIENTSTATEPROC _glDisableClientState = NULL;
PFNGLDISABLEVERTEXATTRIBARRAYPROC _glDisableVertexAttribArray = NULL;
PFNGLDISABLEIPROC _glDisablei = NULL;
PFNGLDISPATCHCOMPUTEPROC _glDispatchCompute = NULL;
PFNGLDISPATCHCOMPUTEINDIRECTPROC _glDispatchComputeIndirect = NULL;
PFNGLDRAWARRAYSPROC _glDrawArrays = NULL;
PFNGLDRAWARRAYSINDIRECTPROC _glDrawArraysIndirect = NULL;
PFNGLDRAWARRAYSINSTANCEDPROC _glDrawArraysInstanced = NULL;
PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC _glDrawArraysInstancedBaseInstance = NULL;
PFNGLDRAWBUFFERPROC _glDrawBuffer = NULL;
PFNGLDRAWBUFFERSPROC _glDrawBuffers = NULL;
PFNGLDRAWELEMENTSPROC _glDrawElements = NULL;
PFNGLDRAWELEMENTSBASEVERTEXPROC _glDrawElementsBaseVertex = NULL;
PFNGLDRAWELEMENTSINDIRECTPROC _glDrawElementsIndirect = NULL;
PFNGLDRAWELEMENTSINSTANCEDPROC _glDrawElementsInstanced = NULL;
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC _glDrawElementsInstancedBaseInstance = NULL;
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC _glDrawElementsInstancedBaseVertex = NULL;
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC _glDrawElementsInstancedBaseVertexBaseInstance = NULL;
PFNGLDRAWPIXELSPROC _glDrawPixels = NULL;
PFNGLDRAWRANGEELEMENTSPROC _glDrawRangeElements = NULL;
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC _glDrawRangeElementsBaseVertex = NULL;
PFNGLDRAWTRANSFORMFEEDBACKPROC _glDrawTransformFeedback = NULL;
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC _glDrawTransformFeedbackInstanced = NULL;
PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC _glDrawTransformFeedbackStream = NULL;
PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC _glDrawTransformFeedbackStreamInstanced = NULL;
PFNGLEDGEFLAGPROC _glEdgeFlag = NULL;
PFNGLEDGEFLAGPOINTERPROC _glEdgeFlagPointer = NULL;
PFNGLEDGEFLAGVPROC _glEdgeFlagv = NULL;
PFNGLENABLEPROC _glEnable = NULL;
PFNGLENABLECLIENTSTATEPROC _glEnableClientState = NULL;
PFNGLENABLEVERTEXATTRIBARRAYPROC _glEnableVertexAttribArray = NULL;
PFNGLENABLEIPROC _glEnablei = NULL;
PFNGLENDPROC _glEnd = NULL;
PFNGLENDCONDITIONALRENDERPROC _glEndConditionalRender = NULL;
PFNGLENDLISTPROC _glEndList = NULL;
PFNGLENDQUERYPROC _glEndQuery = NULL;
PFNGLENDQUERYINDEXEDPROC _glEndQueryIndexed = NULL;
PFNGLENDTRANSFORMFEEDBACKPROC _glEndTransformFeedback = NULL;
PFNGLEVALCOORD1DPROC _glEvalCoord1d = NULL;
PFNGLEVALCOORD1DVPROC _glEvalCoord1dv = NULL;
PFNGLEVALCOORD1FPROC _glEvalCoord1f = NULL;
PFNGLEVALCOORD1FVPROC _glEvalCoord1fv = NULL;
PFNGLEVALCOORD2DPROC _glEvalCoord2d = NULL;
PFNGLEVALCOORD2DVPROC _glEvalCoord2dv = NULL;
PFNGLEVALCOORD2FPROC _glEvalCoord2f = NULL;
PFNGLEVALCOORD2FVPROC _glEvalCoord2fv = NULL;
PFNGLEVALMESH1PROC _glEvalMesh1 = NULL;
PFNGLEVALMESH2PROC _glEvalMesh2 = NULL;
PFNGLEVALPOINT1PROC _glEvalPoint1 = NULL;
PFNGLEVALPOINT2PROC _glEvalPoint2 = NULL;
PFNGLFEEDBACKBUFFERPROC _glFeedbackBuffer = NULL;
PFNGLFENCESYNCPROC _glFenceSync = NULL;
PFNGLFINISHPROC _glFinish = NULL;
PFNGLFLUSHPROC _glFlush = NULL;
PFNGLFLUSHMAPPEDBUFFERRANGEPROC _glFlushMappedBufferRange = NULL;
PFNGLFOGCOORDPOINTERPROC _glFogCoordPointer = NULL;
PFNGLFOGCOORDDPROC _glFogCoordd = NULL;
PFNGLFOGCOORDDVPROC _glFogCoorddv = NULL;
PFNGLFOGCOORDFPROC _glFogCoordf = NULL;
PFNGLFOGCOORDFVPROC _glFogCoordfv = NULL;
PFNGLFOGFPROC _glFogf = NULL;
PFNGLFOGFVPROC _glFogfv = NULL;
PFNGLFOGIPROC _glFogi = NULL;
PFNGLFOGIVPROC _glFogiv = NULL;
PFNGLFRAMEBUFFERPARAMETERIPROC _glFramebufferParameteri = NULL;
PFNGLFRAMEBUFFERRENDERBUFFERPROC _glFramebufferRenderbuffer = NULL;
PFNGLFRAMEBUFFERTEXTUREPROC _glFramebufferTexture = NULL;
PFNGLFRAMEBUFFERTEXTURE1DPROC _glFramebufferTexture1D = NULL;
PFNGLFRAMEBUFFERTEXTURE2DPROC _glFramebufferTexture2D = NULL;
PFNGLFRAMEBUFFERTEXTURE3DPROC _glFramebufferTexture3D = NULL;
PFNGLFRAMEBUFFERTEXTURELAYERPROC _glFramebufferTextureLayer = NULL;
PFNGLFRONTFACEPROC _glFrontFace = NULL;
PFNGLFRUSTUMPROC _glFrustum = NULL;
PFNGLGENBUFFERSPROC _glGenBuffers = NULL;
PFNGLGENFRAMEBUFFERSPROC _glGenFramebuffers = NULL;
PFNGLGENLISTSPROC _glGenLists = NULL;
PFNGLGENPROGRAMPIPELINESPROC _glGenProgramPipelines = NULL;
PFNGLGENQUERIESPROC _glGenQueries = NULL;
PFNGLGENRENDERBUFFERSPROC _glGenRenderbuffers = NULL;
PFNGLGENSAMPLERSPROC _glGenSamplers = NULL;
PFNGLGENTEXTURESPROC _glGenTextures = NULL;
PFNGLGENTRANSFORMFEEDBACKSPROC _glGenTransformFeedbacks = NULL;
PFNGLGENVERTEXARRAYSPROC _glGenVertexArrays = NULL;
PFNGLGENERATEMIPMAPPROC _glGenerateMipmap = NULL;
PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC _glGetActiveAtomicCounterBufferiv = NULL;
PFNGLGETACTIVEATTRIBPROC _glGetActiveAttrib = NULL;
PFNGLGETACTIVESUBROUTINENAMEPROC _glGetActiveSubroutineName = NULL;
PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC _glGetActiveSubroutineUniformName = NULL;
PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC _glGetActiveSubroutineUniformiv = NULL;
PFNGLGETACTIVEUNIFORMPROC _glGetActiveUniform = NULL;
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC _glGetActiveUniformBlockName = NULL;
PFNGLGETACTIVEUNIFORMBLOCKIVPROC _glGetActiveUniformBlockiv = NULL;
PFNGLGETACTIVEUNIFORMNAMEPROC _glGetActiveUniformName = NULL;
PFNGLGETACTIVEUNIFORMSIVPROC _glGetActiveUniformsiv = NULL;
PFNGLGETATTACHEDSHADERSPROC _glGetAttachedShaders = NULL;
PFNGLGETATTRIBLOCATIONPROC _glGetAttribLocation = NULL;
PFNGLGETBOOLEANI_VPROC _glGetBooleani_v = NULL;
PFNGLGETBOOLEANVPROC _glGetBooleanv = NULL;
PFNGLGETBUFFERPARAMETERI64VPROC _glGetBufferParameteri64v = NULL;
PFNGLGETBUFFERPARAMETERIVPROC _glGetBufferParameteriv = NULL;
PFNGLGETBUFFERPOINTERVPROC _glGetBufferPointerv = NULL;
PFNGLGETBUFFERSUBDATAPROC _glGetBufferSubData = NULL;
PFNGLGETCLIPPLANEPROC _glGetClipPlane = NULL;
PFNGLGETCOMPRESSEDTEXIMAGEPROC _glGetCompressedTexImage = NULL;
PFNGLGETDEBUGMESSAGELOGPROC _glGetDebugMessageLog = NULL;
PFNGLGETDOUBLEI_VPROC _glGetDoublei_v = NULL;
PFNGLGETDOUBLEVPROC _glGetDoublev = NULL;
PFNGLGETERRORPROC _glGetError = NULL;
PFNGLGETFLOATI_VPROC _glGetFloati_v = NULL;
PFNGLGETFLOATVPROC _glGetFloatv = NULL;
PFNGLGETFRAGDATAINDEXPROC _glGetFragDataIndex = NULL;
PFNGLGETFRAGDATALOCATIONPROC _glGetFragDataLocation = NULL;
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC _glGetFramebufferAttachmentParameteriv = NULL;
PFNGLGETFRAMEBUFFERPARAMETERIVPROC _glGetFramebufferParameteriv = NULL;
PFNGLGETINTEGER64I_VPROC _glGetInteger64i_v = NULL;
PFNGLGETINTEGER64VPROC _glGetInteger64v = NULL;
PFNGLGETINTEGERI_VPROC _glGetIntegeri_v = NULL;
PFNGLGETINTEGERVPROC _glGetIntegerv = NULL;
PFNGLGETINTERNALFORMATI64VPROC _glGetInternalformati64v = NULL;
PFNGLGETINTERNALFORMATIVPROC _glGetInternalformativ = NULL;
PFNGLGETLIGHTFVPROC _glGetLightfv = NULL;
PFNGLGETLIGHTIVPROC _glGetLightiv = NULL;
PFNGLGETMAPDVPROC _glGetMapdv = NULL;
PFNGLGETMAPFVPROC _glGetMapfv = NULL;
PFNGLGETMAPIVPROC _glGetMapiv = NULL;
PFNGLGETMATERIALFVPROC _glGetMaterialfv = NULL;
PFNGLGETMATERIALIVPROC _glGetMaterialiv = NULL;
PFNGLGETMULTISAMPLEFVPROC _glGetMultisamplefv = NULL;
PFNGLGETOBJECTLABELPROC _glGetObjectLabel = NULL;
PFNGLGETOBJECTPTRLABELPROC _glGetObjectPtrLabel = NULL;
PFNGLGETPIXELMAPFVPROC _glGetPixelMapfv = NULL;
PFNGLGETPIXELMAPUIVPROC _glGetPixelMapuiv = NULL;
PFNGLGETPIXELMAPUSVPROC _glGetPixelMapusv = NULL;
PFNGLGETPOINTERVPROC _glGetPointerv = NULL;
PFNGLGETPOLYGONSTIPPLEPROC _glGetPolygonStipple = NULL;
PFNGLGETPROGRAMBINARYPROC _glGetProgramBinary = NULL;
PFNGLGETPROGRAMINFOLOGPROC _glGetProgramInfoLog = NULL;
PFNGLGETPROGRAMINTERFACEIVPROC _glGetProgramInterfaceiv = NULL;
PFNGLGETPROGRAMPIPELINEINFOLOGPROC _glGetProgramPipelineInfoLog = NULL;
PFNGLGETPROGRAMPIPELINEIVPROC _glGetProgramPipelineiv = NULL;
PFNGLGETPROGRAMRESOURCEINDEXPROC _glGetProgramResourceIndex = NULL;
PFNGLGETPROGRAMRESOURCELOCATIONPROC _glGetProgramResourceLocation = NULL;
PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC _glGetProgramResourceLocationIndex = NULL;
PFNGLGETPROGRAMRESOURCENAMEPROC _glGetProgramResourceName = NULL;
PFNGLGETPROGRAMRESOURCEIVPROC _glGetProgramResourceiv = NULL;
PFNGLGETPROGRAMSTAGEIVPROC _glGetProgramStageiv = NULL;
PFNGLGETPROGRAMIVPROC _glGetProgramiv = NULL;
PFNGLGETQUERYINDEXEDIVPROC _glGetQueryIndexediv = NULL;
PFNGLGETQUERYOBJECTI64VPROC _glGetQueryObjecti64v = NULL;
PFNGLGETQUERYOBJECTIVPROC _glGetQueryObjectiv = NULL;
PFNGLGETQUERYOBJECTUI64VPROC _glGetQueryObjectui64v = NULL;
PFNGLGETQUERYOBJECTUIVPROC _glGetQueryObjectuiv = NULL;
PFNGLGETQUERYIVPROC _glGetQueryiv = NULL;
PFNGLGETRENDERBUFFERPARAMETERIVPROC _glGetRenderbufferParameteriv = NULL;
PFNGLGETSAMPLERPARAMETERIIVPROC _glGetSamplerParameterIiv = NULL;
PFNGLGETSAMPLERPARAMETERIUIVPROC _glGetSamplerParameterIuiv = NULL;
PFNGLGETSAMPLERPARAMETERFVPROC _glGetSamplerParameterfv = NULL;
PFNGLGETSAMPLERPARAMETERIVPROC _glGetSamplerParameteriv = NULL;
PFNGLGETSHADERINFOLOGPROC _glGetShaderInfoLog = NULL;
PFNGLGETSHADERPRECISIONFORMATPROC _glGetShaderPrecisionFormat = NULL;
PFNGLGETSHADERSOURCEPROC _glGetShaderSource = NULL;
PFNGLGETSHADERIVPROC _glGetShaderiv = NULL;
PFNGLGETSTRINGPROC _glGetString = NULL;
PFNGLGETSTRINGIPROC _glGetStringi = NULL;
PFNGLGETSUBROUTINEINDEXPROC _glGetSubroutineIndex = NULL;
PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC _glGetSubroutineUniformLocation = NULL;
PFNGLGETSYNCIVPROC _glGetSynciv = NULL;
PFNGLGETTEXENVFVPROC _glGetTexEnvfv = NULL;
PFNGLGETTEXENVIVPROC _glGetTexEnviv = NULL;
PFNGLGETTEXGENDVPROC _glGetTexGendv = NULL;
PFNGLGETTEXGENFVPROC _glGetTexGenfv = NULL;
PFNGLGETTEXGENIVPROC _glGetTexGeniv = NULL;
PFNGLGETTEXIMAGEPROC _glGetTexImage = NULL;
PFNGLGETTEXLEVELPARAMETERFVPROC _glGetTexLevelParameterfv = NULL;
PFNGLGETTEXLEVELPARAMETERIVPROC _glGetTexLevelParameteriv = NULL;
PFNGLGETTEXPARAMETERIIVPROC _glGetTexParameterIiv = NULL;
PFNGLGETTEXPARAMETERIUIVPROC _glGetTexParameterIuiv = NULL;
PFNGLGETTEXPARAMETERFVPROC _glGetTexParameterfv = NULL;
PFNGLGETTEXPARAMETERIVPROC _glGetTexParameteriv = NULL;
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC _glGetTransformFeedbackVarying = NULL;
PFNGLGETUNIFORMBLOCKINDEXPROC _glGetUniformBlockIndex = NULL;
PFNGLGETUNIFORMINDICESPROC _glGetUniformIndices = NULL;
PFNGLGETUNIFORMLOCATIONPROC _glGetUniformLocation = NULL;
PFNGLGETUNIFORMSUBROUTINEUIVPROC _glGetUniformSubroutineuiv = NULL;
PFNGLGETUNIFORMDVPROC _glGetUniformdv = NULL;
PFNGLGETUNIFORMFVPROC _glGetUniformfv = NULL;
PFNGLGETUNIFORMIVPROC _glGetUniformiv = NULL;
PFNGLGETUNIFORMUIVPROC _glGetUniformuiv = NULL;
PFNGLGETVERTEXATTRIBIIVPROC _glGetVertexAttribIiv = NULL;
PFNGLGETVERTEXATTRIBIUIVPROC _glGetVertexAttribIuiv = NULL;
PFNGLGETVERTEXATTRIBLDVPROC _glGetVertexAttribLdv = NULL;
PFNGLGETVERTEXATTRIBPOINTERVPROC _glGetVertexAttribPointerv = NULL;
PFNGLGETVERTEXATTRIBDVPROC _glGetVertexAttribdv = NULL;
PFNGLGETVERTEXATTRIBFVPROC _glGetVertexAttribfv = NULL;
PFNGLGETVERTEXATTRIBIVPROC _glGetVertexAttribiv = NULL;
PFNGLHINTPROC _glHint = NULL;
PFNGLINDEXMASKPROC _glIndexMask = NULL;
PFNGLINDEXPOINTERPROC _glIndexPointer = NULL;
PFNGLINDEXDPROC _glIndexd = NULL;
PFNGLINDEXDVPROC _glIndexdv = NULL;
PFNGLINDEXFPROC _glIndexf = NULL;
PFNGLINDEXFVPROC _glIndexfv = NULL;
PFNGLINDEXIPROC _glIndexi = NULL;
PFNGLINDEXIVPROC _glIndexiv = NULL;
PFNGLINDEXSPROC _glIndexs = NULL;
PFNGLINDEXSVPROC _glIndexsv = NULL;
PFNGLINDEXUBPROC _glIndexub = NULL;
PFNGLINDEXUBVPROC _glIndexubv = NULL;
PFNGLINITNAMESPROC _glInitNames = NULL;
PFNGLINTERLEAVEDARRAYSPROC _glInterleavedArrays = NULL;
PFNGLINVALIDATEBUFFERDATAPROC _glInvalidateBufferData = NULL;
PFNGLINVALIDATEBUFFERSUBDATAPROC _glInvalidateBufferSubData = NULL;
PFNGLINVALIDATEFRAMEBUFFERPROC _glInvalidateFramebuffer = NULL;
PFNGLINVALIDATESUBFRAMEBUFFERPROC _glInvalidateSubFramebuffer = NULL;
PFNGLINVALIDATETEXIMAGEPROC _glInvalidateTexImage = NULL;
PFNGLINVALIDATETEXSUBIMAGEPROC _glInvalidateTexSubImage = NULL;
PFNGLISBUFFERPROC _glIsBuffer = NULL;
PFNGLISENABLEDPROC _glIsEnabled = NULL;
PFNGLISENABLEDIPROC _glIsEnabledi = NULL;
PFNGLISFRAMEBUFFERPROC _glIsFramebuffer = NULL;
PFNGLISLISTPROC _glIsList = NULL;
PFNGLISPROGRAMPROC _glIsProgram = NULL;
PFNGLISPROGRAMPIPELINEPROC _glIsProgramPipeline = NULL;
PFNGLISQUERYPROC _glIsQuery = NULL;
PFNGLISRENDERBUFFERPROC _glIsRenderbuffer = NULL;
PFNGLISSAMPLERPROC _glIsSampler = NULL;
PFNGLISSHADERPROC _glIsShader = NULL;
PFNGLISSYNCPROC _glIsSync = NULL;
PFNGLISTEXTUREPROC _glIsTexture = NULL;
PFNGLISTRANSFORMFEEDBACKPROC _glIsTransformFeedback = NULL;
PFNGLISVERTEXARRAYPROC _glIsVertexArray = NULL;
PFNGLLIGHTMODELFPROC _glLightModelf = NULL;
PFNGLLIGHTMODELFVPROC _glLightModelfv = NULL;
PFNGLLIGHTMODELIPROC _glLightModeli = NULL;
PFNGLLIGHTMODELIVPROC _glLightModeliv = NULL;
PFNGLLIGHTFPROC _glLightf = NULL;
PFNGLLIGHTFVPROC _glLightfv = NULL;
PFNGLLIGHTIPROC _glLighti = NULL;
PFNGLLIGHTIVPROC _glLightiv = NULL;
PFNGLLINESTIPPLEPROC _glLineStipple = NULL;
PFNGLLINEWIDTHPROC _glLineWidth = NULL;
PFNGLLINKPROGRAMPROC _glLinkProgram = NULL;
PFNGLLISTBASEPROC _glListBase = NULL;
PFNGLLOADIDENTITYPROC _glLoadIdentity = NULL;
PFNGLLOADMATRIXDPROC _glLoadMatrixd = NULL;
PFNGLLOADMATRIXFPROC _glLoadMatrixf = NULL;
PFNGLLOADNAMEPROC _glLoadName = NULL;
PFNGLLOADTRANSPOSEMATRIXDPROC _glLoadTransposeMatrixd = NULL;
PFNGLLOADTRANSPOSEMATRIXFPROC _glLoadTransposeMatrixf = NULL;
PFNGLLOGICOPPROC _glLogicOp = NULL;
PFNGLMAP1DPROC _glMap1d = NULL;
PFNGLMAP1FPROC _glMap1f = NULL;
PFNGLMAP2DPROC _glMap2d = NULL;
PFNGLMAP2FPROC _glMap2f = NULL;
PFNGLMAPBUFFERPROC _glMapBuffer = NULL;
PFNGLMAPBUFFERRANGEPROC _glMapBufferRange = NULL;
PFNGLMAPGRID1DPROC _glMapGrid1d = NULL;
PFNGLMAPGRID1FPROC _glMapGrid1f = NULL;
PFNGLMAPGRID2DPROC _glMapGrid2d = NULL;
PFNGLMAPGRID2FPROC _glMapGrid2f = NULL;
PFNGLMATERIALFPROC _glMaterialf = NULL;
PFNGLMATERIALFVPROC _glMaterialfv = NULL;
PFNGLMATERIALIPROC _glMateriali = NULL;
PFNGLMATERIALIVPROC _glMaterialiv = NULL;
PFNGLMATRIXMODEPROC _glMatrixMode = NULL;
PFNGLMEMORYBARRIERPROC _glMemoryBarrier = NULL;
PFNGLMINSAMPLESHADINGPROC _glMinSampleShading = NULL;
PFNGLMULTMATRIXDPROC _glMultMatrixd = NULL;
PFNGLMULTMATRIXFPROC _glMultMatrixf = NULL;
PFNGLMULTTRANSPOSEMATRIXDPROC _glMultTransposeMatrixd = NULL;
PFNGLMULTTRANSPOSEMATRIXFPROC _glMultTransposeMatrixf = NULL;
PFNGLMULTIDRAWARRAYSPROC _glMultiDrawArrays = NULL;
PFNGLMULTIDRAWARRAYSINDIRECTPROC _glMultiDrawArraysIndirect = NULL;
PFNGLMULTIDRAWELEMENTSPROC _glMultiDrawElements = NULL;
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC _glMultiDrawElementsBaseVertex = NULL;
PFNGLMULTIDRAWELEMENTSINDIRECTPROC _glMultiDrawElementsIndirect = NULL;
PFNGLMULTITEXCOORD1DPROC _glMultiTexCoord1d = NULL;
PFNGLMULTITEXCOORD1DVPROC _glMultiTexCoord1dv = NULL;
PFNGLMULTITEXCOORD1FPROC _glMultiTexCoord1f = NULL;
PFNGLMULTITEXCOORD1FVPROC _glMultiTexCoord1fv = NULL;
PFNGLMULTITEXCOORD1IPROC _glMultiTexCoord1i = NULL;
PFNGLMULTITEXCOORD1IVPROC _glMultiTexCoord1iv = NULL;
PFNGLMULTITEXCOORD1SPROC _glMultiTexCoord1s = NULL;
PFNGLMULTITEXCOORD1SVPROC _glMultiTexCoord1sv = NULL;
PFNGLMULTITEXCOORD2DPROC _glMultiTexCoord2d = NULL;
PFNGLMULTITEXCOORD2DVPROC _glMultiTexCoord2dv = NULL;
PFNGLMULTITEXCOORD2FPROC _glMultiTexCoord2f = NULL;
PFNGLMULTITEXCOORD2FVPROC _glMultiTexCoord2fv = NULL;
PFNGLMULTITEXCOORD2IPROC _glMultiTexCoord2i = NULL;
PFNGLMULTITEXCOORD2IVPROC _glMultiTexCoord2iv = NULL;
PFNGLMULTITEXCOORD2SPROC _glMultiTexCoord2s = NULL;
PFNGLMULTITEXCOORD2SVPROC _glMultiTexCoord2sv = NULL;
PFNGLMULTITEXCOORD3DPROC _glMultiTexCoord3d = NULL;
PFNGLMULTITEXCOORD3DVPROC _glMultiTexCoord3dv = NULL;
PFNGLMULTITEXCOORD3FPROC _glMultiTexCoord3f = NULL;
PFNGLMULTITEXCOORD3FVPROC _glMultiTexCoord3fv = NULL;
PFNGLMULTITEXCOORD3IPROC _glMultiTexCoord3i = NULL;
PFNGLMULTITEXCOORD3IVPROC _glMultiTexCoord3iv = NULL;
PFNGLMULTITEXCOORD3SPROC _glMultiTexCoord3s = NULL;
PFNGLMULTITEXCOORD3SVPROC _glMultiTexCoord3sv = NULL;
PFNGLMULTITEXCOORD4DPROC _glMultiTexCoord4d = NULL;
PFNGLMULTITEXCOORD4DVPROC _glMultiTexCoord4dv = NULL;
PFNGLMULTITEXCOORD4FPROC _glMultiTexCoord4f = NULL;
PFNGLMULTITEXCOORD4FVPROC _glMultiTexCoord4fv = NULL;
PFNGLMULTITEXCOORD4IPROC _glMultiTexCoord4i = NULL;
PFNGLMULTITEXCOORD4IVPROC _glMultiTexCoord4iv = NULL;
PFNGLMULTITEXCOORD4SPROC _glMultiTexCoord4s = NULL;
PFNGLMULTITEXCOORD4SVPROC _glMultiTexCoord4sv = NULL;
PFNGLMULTITEXCOORDP1UIPROC _glMultiTexCoordP1ui = NULL;
PFNGLMULTITEXCOORDP1UIVPROC _glMultiTexCoordP1uiv = NULL;
PFNGLMULTITEXCOORDP2UIPROC _glMultiTexCoordP2ui = NULL;
PFNGLMULTITEXCOORDP2UIVPROC _glMultiTexCoordP2uiv = NULL;
PFNGLMULTITEXCOORDP3UIPROC _glMultiTexCoordP3ui = NULL;
PFNGLMULTITEXCOORDP3UIVPROC _glMultiTexCoordP3uiv = NULL;
PFNGLMULTITEXCOORDP4UIPROC _glMultiTexCoordP4ui = NULL;
PFNGLMULTITEXCOORDP4UIVPROC _glMultiTexCoordP4uiv = NULL;
PFNGLNEWLISTPROC _glNewList = NULL;
PFNGLNORMAL3BPROC _glNormal3b = NULL;
PFNGLNORMAL3BVPROC _glNormal3bv = NULL;
PFNGLNORMAL3DPROC _glNormal3d = NULL;
PFNGLNORMAL3DVPROC _glNormal3dv = NULL;
PFNGLNORMAL3FPROC _glNormal3f = NULL;
PFNGLNORMAL3FVPROC _glNormal3fv = NULL;
PFNGLNORMAL3IPROC _glNormal3i = NULL;
PFNGLNORMAL3IVPROC _glNormal3iv = NULL;
PFNGLNORMAL3SPROC _glNormal3s = NULL;
PFNGLNORMAL3SVPROC _glNormal3sv = NULL;
PFNGLNORMALP3UIPROC _glNormalP3ui = NULL;
PFNGLNORMALP3UIVPROC _glNormalP3uiv = NULL;
PFNGLNORMALPOINTERPROC _glNormalPointer = NULL;
PFNGLOBJECTLABELPROC _glObjectLabel = NULL;
PFNGLOBJECTPTRLABELPROC _glObjectPtrLabel = NULL;
PFNGLORTHOPROC _glOrtho = NULL;
PFNGLPASSTHROUGHPROC _glPassThrough = NULL;
PFNGLPATCHPARAMETERFVPROC _glPatchParameterfv = NULL;
PFNGLPATCHPARAMETERIPROC _glPatchParameteri = NULL;
PFNGLPAUSETRANSFORMFEEDBACKPROC _glPauseTransformFeedback = NULL;
PFNGLPIXELMAPFVPROC _glPixelMapfv = NULL;
PFNGLPIXELMAPUIVPROC _glPixelMapuiv = NULL;
PFNGLPIXELMAPUSVPROC _glPixelMapusv = NULL;
PFNGLPIXELSTOREFPROC _glPixelStoref = NULL;
PFNGLPIXELSTOREIPROC _glPixelStorei = NULL;
PFNGLPIXELTRANSFERFPROC _glPixelTransferf = NULL;
PFNGLPIXELTRANSFERIPROC _glPixelTransferi = NULL;
PFNGLPIXELZOOMPROC _glPixelZoom = NULL;
PFNGLPOINTPARAMETERFPROC _glPointParameterf = NULL;
PFNGLPOINTPARAMETERFVPROC _glPointParameterfv = NULL;
PFNGLPOINTPARAMETERIPROC _glPointParameteri = NULL;
PFNGLPOINTPARAMETERIVPROC _glPointParameteriv = NULL;
PFNGLPOINTSIZEPROC _glPointSize = NULL;
PFNGLPOLYGONMODEPROC _glPolygonMode = NULL;
PFNGLPOLYGONOFFSETPROC _glPolygonOffset = NULL;
PFNGLPOLYGONSTIPPLEPROC _glPolygonStipple = NULL;
PFNGLPOPATTRIBPROC _glPopAttrib = NULL;
PFNGLPOPCLIENTATTRIBPROC _glPopClientAttrib = NULL;
PFNGLPOPDEBUGGROUPPROC _glPopDebugGroup = NULL;
PFNGLPOPMATRIXPROC _glPopMatrix = NULL;
PFNGLPOPNAMEPROC _glPopName = NULL;
PFNGLPRIMITIVERESTARTINDEXPROC _glPrimitiveRestartIndex = NULL;
PFNGLPRIORITIZETEXTURESPROC _glPrioritizeTextures = NULL;
PFNGLPROGRAMBINARYPROC _glProgramBinary = NULL;
PFNGLPROGRAMPARAMETERIPROC _glProgramParameteri = NULL;
PFNGLPROGRAMUNIFORM1DPROC _glProgramUniform1d = NULL;
PFNGLPROGRAMUNIFORM1DVPROC _glProgramUniform1dv = NULL;
PFNGLPROGRAMUNIFORM1FPROC _glProgramUniform1f = NULL;
PFNGLPROGRAMUNIFORM1FVPROC _glProgramUniform1fv = NULL;
PFNGLPROGRAMUNIFORM1IPROC _glProgramUniform1i = NULL;
PFNGLPROGRAMUNIFORM1IVPROC _glProgramUniform1iv = NULL;
PFNGLPROGRAMUNIFORM1UIPROC _glProgramUniform1ui = NULL;
PFNGLPROGRAMUNIFORM1UIVPROC _glProgramUniform1uiv = NULL;
PFNGLPROGRAMUNIFORM2DPROC _glProgramUniform2d = NULL;
PFNGLPROGRAMUNIFORM2DVPROC _glProgramUniform2dv = NULL;
PFNGLPROGRAMUNIFORM2FPROC _glProgramUniform2f = NULL;
PFNGLPROGRAMUNIFORM2FVPROC _glProgramUniform2fv = NULL;
PFNGLPROGRAMUNIFORM2IPROC _glProgramUniform2i = NULL;
PFNGLPROGRAMUNIFORM2IVPROC _glProgramUniform2iv = NULL;
PFNGLPROGRAMUNIFORM2UIPROC _glProgramUniform2ui = NULL;
PFNGLPROGRAMUNIFORM2UIVPROC _glProgramUniform2uiv = NULL;
PFNGLPROGRAMUNIFORM3DPROC _glProgramUniform3d = NULL;
PFNGLPROGRAMUNIFORM3DVPROC _glProgramUniform3dv = NULL;
PFNGLPROGRAMUNIFORM3FPROC _glProgramUniform3f = NULL;
PFNGLPROGRAMUNIFORM3FVPROC _glProgramUniform3fv = NULL;
PFNGLPROGRAMUNIFORM3IPROC _glProgramUniform3i = NULL;
PFNGLPROGRAMUNIFORM3IVPROC _glProgramUniform3iv = NULL;
PFNGLPROGRAMUNIFORM3UIPROC _glProgramUniform3ui = NULL;
PFNGLPROGRAMUNIFORM3UIVPROC _glProgramUniform3uiv = NULL;
PFNGLPROGRAMUNIFORM4DPROC _glProgramUniform4d = NULL;
PFNGLPROGRAMUNIFORM4DVPROC _glProgramUniform4dv = NULL;
PFNGLPROGRAMUNIFORM4FPROC _glProgramUniform4f = NULL;
PFNGLPROGRAMUNIFORM4FVPROC _glProgramUniform4fv = NULL;
PFNGLPROGRAMUNIFORM4IPROC _glProgramUniform4i = NULL;
PFNGLPROGRAMUNIFORM4IVPROC _glProgramUniform4iv = NULL;
PFNGLPROGRAMUNIFORM4UIPROC _glProgramUniform4ui = NULL;
PFNGLPROGRAMUNIFORM4UIVPROC _glProgramUniform4uiv = NULL;
PFNGLPROGRAMUNIFORMMATRIX2DVPROC _glProgramUniformMatrix2dv = NULL;
PFNGLPROGRAMUNIFORMMATRIX2FVPROC _glProgramUniformMatrix2fv = NULL;
PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC _glProgramUniformMatrix2x3dv = NULL;
PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC _glProgramUniformMatrix2x3fv = NULL;
PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC _glProgramUniformMatrix2x4dv = NULL;
PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC _glProgramUniformMatrix2x4fv = NULL;
PFNGLPROGRAMUNIFORMMATRIX3DVPROC _glProgramUniformMatrix3dv = NULL;
PFNGLPROGRAMUNIFORMMATRIX3FVPROC _glProgramUniformMatrix3fv = NULL;
PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC _glProgramUniformMatrix3x2dv = NULL;
PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC _glProgramUniformMatrix3x2fv = NULL;
PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC _glProgramUniformMatrix3x4dv = NULL;
PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC _glProgramUniformMatrix3x4fv = NULL;
PFNGLPROGRAMUNIFORMMATRIX4DVPROC _glProgramUniformMatrix4dv = NULL;
PFNGLPROGRAMUNIFORMMATRIX4FVPROC _glProgramUniformMatrix4fv = NULL;
PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC _glProgramUniformMatrix4x2dv = NULL;
PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC _glProgramUniformMatrix4x2fv = NULL;
PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC _glProgramUniformMatrix4x3dv = NULL;
PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC _glProgramUniformMatrix4x3fv = NULL;
PFNGLPROVOKINGVERTEXPROC _glProvokingVertex = NULL;
PFNGLPUSHATTRIBPROC _glPushAttrib = NULL;
PFNGLPUSHCLIENTATTRIBPROC _glPushClientAttrib = NULL;
PFNGLPUSHDEBUGGROUPPROC _glPushDebugGroup = NULL;
PFNGLPUSHMATRIXPROC _glPushMatrix = NULL;
PFNGLPUSHNAMEPROC _glPushName = NULL;
PFNGLQUERYCOUNTERPROC _glQueryCounter = NULL;
PFNGLRASTERPOS2DPROC _glRasterPos2d = NULL;
PFNGLRASTERPOS2DVPROC _glRasterPos2dv = NULL;
PFNGLRASTERPOS2FPROC _glRasterPos2f = NULL;
PFNGLRASTERPOS2FVPROC _glRasterPos2fv = NULL;
PFNGLRASTERPOS2IPROC _glRasterPos2i = NULL;
PFNGLRASTERPOS2IVPROC _glRasterPos2iv = NULL;
PFNGLRASTERPOS2SPROC _glRasterPos2s = NULL;
PFNGLRASTERPOS2SVPROC _glRasterPos2sv = NULL;
PFNGLRASTERPOS3DPROC _glRasterPos3d = NULL;
PFNGLRASTERPOS3DVPROC _glRasterPos3dv = NULL;
PFNGLRASTERPOS3FPROC _glRasterPos3f = NULL;
PFNGLRASTERPOS3FVPROC _glRasterPos3fv = NULL;
PFNGLRASTERPOS3IPROC _glRasterPos3i = NULL;
PFNGLRASTERPOS3IVPROC _glRasterPos3iv = NULL;
PFNGLRASTERPOS3SPROC _glRasterPos3s = NULL;
PFNGLRASTERPOS3SVPROC _glRasterPos3sv = NULL;
PFNGLRASTERPOS4DPROC _glRasterPos4d = NULL;
PFNGLRASTERPOS4DVPROC _glRasterPos4dv = NULL;
PFNGLRASTERPOS4FPROC _glRasterPos4f = NULL;
PFNGLRASTERPOS4FVPROC _glRasterPos4fv = NULL;
PFNGLRASTERPOS4IPROC _glRasterPos4i = NULL;
PFNGLRASTERPOS4IVPROC _glRasterPos4iv = NULL;
PFNGLRASTERPOS4SPROC _glRasterPos4s = NULL;
PFNGLRASTERPOS4SVPROC _glRasterPos4sv = NULL;
PFNGLREADBUFFERPROC _glReadBuffer = NULL;
PFNGLREADPIXELSPROC _glReadPixels = NULL;
PFNGLRECTDPROC _glRectd = NULL;
PFNGLRECTDVPROC _glRectdv = NULL;
PFNGLRECTFPROC _glRectf = NULL;
PFNGLRECTFVPROC _glRectfv = NULL;
PFNGLRECTIPROC _glRecti = NULL;
PFNGLRECTIVPROC _glRectiv = NULL;
PFNGLRECTSPROC _glRects = NULL;
PFNGLRECTSVPROC _glRectsv = NULL;
PFNGLRELEASESHADERCOMPILERPROC _glReleaseShaderCompiler = NULL;
PFNGLRENDERMODEPROC _glRenderMode = NULL;
PFNGLRENDERBUFFERSTORAGEPROC _glRenderbufferStorage = NULL;
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC _glRenderbufferStorageMultisample = NULL;
PFNGLRESUMETRANSFORMFEEDBACKPROC _glResumeTransformFeedback = NULL;
PFNGLROTATEDPROC _glRotated = NULL;
PFNGLROTATEFPROC _glRotatef = NULL;
PFNGLSAMPLECOVERAGEPROC _glSampleCoverage = NULL;
PFNGLSAMPLEMASKIPROC _glSampleMaski = NULL;
PFNGLSAMPLERPARAMETERIIVPROC _glSamplerParameterIiv = NULL;
PFNGLSAMPLERPARAMETERIUIVPROC _glSamplerParameterIuiv = NULL;
PFNGLSAMPLERPARAMETERFPROC _glSamplerParameterf = NULL;
PFNGLSAMPLERPARAMETERFVPROC _glSamplerParameterfv = NULL;
PFNGLSAMPLERPARAMETERIPROC _glSamplerParameteri = NULL;
PFNGLSAMPLERPARAMETERIVPROC _glSamplerParameteriv = NULL;
PFNGLSCALEDPROC _glScaled = NULL;
PFNGLSCALEFPROC _glScalef = NULL;
PFNGLSCISSORPROC _glScissor = NULL;
PFNGLSCISSORARRAYVPROC _glScissorArrayv = NULL;
PFNGLSCISSORINDEXEDPROC _glScissorIndexed = NULL;
PFNGLSCISSORINDEXEDVPROC _glScissorIndexedv = NULL;
PFNGLSECONDARYCOLOR3BPROC _glSecondaryColor3b = NULL;
PFNGLSECONDARYCOLOR3BVPROC _glSecondaryColor3bv = NULL;
PFNGLSECONDARYCOLOR3DPROC _glSecondaryColor3d = NULL;
PFNGLSECONDARYCOLOR3DVPROC _glSecondaryColor3dv = NULL;
PFNGLSECONDARYCOLOR3FPROC _glSecondaryColor3f = NULL;
PFNGLSECONDARYCOLOR3FVPROC _glSecondaryColor3fv = NULL;
PFNGLSECONDARYCOLOR3IPROC _glSecondaryColor3i = NULL;
PFNGLSECONDARYCOLOR3IVPROC _glSecondaryColor3iv = NULL;
PFNGLSECONDARYCOLOR3SPROC _glSecondaryColor3s = NULL;
PFNGLSECONDARYCOLOR3SVPROC _glSecondaryColor3sv = NULL;
PFNGLSECONDARYCOLOR3UBPROC _glSecondaryColor3ub = NULL;
PFNGLSECONDARYCOLOR3UBVPROC _glSecondaryColor3ubv = NULL;
PFNGLSECONDARYCOLOR3UIPROC _glSecondaryColor3ui = NULL;
PFNGLSECONDARYCOLOR3UIVPROC _glSecondaryColor3uiv = NULL;
PFNGLSECONDARYCOLOR3USPROC _glSecondaryColor3us = NULL;
PFNGLSECONDARYCOLOR3USVPROC _glSecondaryColor3usv = NULL;
PFNGLSECONDARYCOLORP3UIPROC _glSecondaryColorP3ui = NULL;
PFNGLSECONDARYCOLORP3UIVPROC _glSecondaryColorP3uiv = NULL;
PFNGLSECONDARYCOLORPOINTERPROC _glSecondaryColorPointer = NULL;
PFNGLSELECTBUFFERPROC _glSelectBuffer = NULL;
PFNGLSHADEMODELPROC _glShadeModel = NULL;
PFNGLSHADERBINARYPROC _glShaderBinary = NULL;
PFNGLSHADERSOURCEPROC _glShaderSource = NULL;
PFNGLSHADERSTORAGEBLOCKBINDINGPROC _glShaderStorageBlockBinding = NULL;
PFNGLSTENCILFUNCPROC _glStencilFunc = NULL;
PFNGLSTENCILFUNCSEPARATEPROC _glStencilFuncSeparate = NULL;
PFNGLSTENCILMASKPROC _glStencilMask = NULL;
PFNGLSTENCILMASKSEPARATEPROC _glStencilMaskSeparate = NULL;
PFNGLSTENCILOPPROC _glStencilOp = NULL;
PFNGLSTENCILOPSEPARATEPROC _glStencilOpSeparate = NULL;
PFNGLTEXBUFFERPROC _glTexBuffer = NULL;
PFNGLTEXBUFFERRANGEPROC _glTexBufferRange = NULL;
PFNGLTEXCOORD1DPROC _glTexCoord1d = NULL;
PFNGLTEXCOORD1DVPROC _glTexCoord1dv = NULL;
PFNGLTEXCOORD1FPROC _glTexCoord1f = NULL;
PFNGLTEXCOORD1FVPROC _glTexCoord1fv = NULL;
PFNGLTEXCOORD1IPROC _glTexCoord1i = NULL;
PFNGLTEXCOORD1IVPROC _glTexCoord1iv = NULL;
PFNGLTEXCOORD1SPROC _glTexCoord1s = NULL;
PFNGLTEXCOORD1SVPROC _glTexCoord1sv = NULL;
PFNGLTEXCOORD2DPROC _glTexCoord2d = NULL;
PFNGLTEXCOORD2DVPROC _glTexCoord2dv = NULL;
PFNGLTEXCOORD2FPROC _glTexCoord2f = NULL;
PFNGLTEXCOORD2FVPROC _glTexCoord2fv = NULL;
PFNGLTEXCOORD2IPROC _glTexCoord2i = NULL;
PFNGLTEXCOORD2IVPROC _glTexCoord2iv = NULL;
PFNGLTEXCOORD2SPROC _glTexCoord2s = NULL;
PFNGLTEXCOORD2SVPROC _glTexCoord2sv = NULL;
PFNGLTEXCOORD3DPROC _glTexCoord3d = NULL;
PFNGLTEXCOORD3DVPROC _glTexCoord3dv = NULL;
PFNGLTEXCOORD3FPROC _glTexCoord3f = NULL;
PFNGLTEXCOORD3FVPROC _glTexCoord3fv = NULL;
PFNGLTEXCOORD3IPROC _glTexCoord3i = NULL;
PFNGLTEXCOORD3IVPROC _glTexCoord3iv = NULL;
PFNGLTEXCOORD3SPROC _glTexCoord3s = NULL;
PFNGLTEXCOORD3SVPROC _glTexCoord3sv = NULL;
PFNGLTEXCOORD4DPROC _glTexCoord4d = NULL;
PFNGLTEXCOORD4DVPROC _glTexCoord4dv = NULL;
PFNGLTEXCOORD4FPROC _glTexCoord4f = NULL;
PFNGLTEXCOORD4FVPROC _glTexCoord4fv = NULL;
PFNGLTEXCOORD4IPROC _glTexCoord4i = NULL;
PFNGLTEXCOORD4IVPROC _glTexCoord4iv = NULL;
PFNGLTEXCOORD4SPROC _glTexCoord4s = NULL;
PFNGLTEXCOORD4SVPROC _glTexCoord4sv = NULL;
PFNGLTEXCOORDP1UIPROC _glTexCoordP1ui = NULL;
PFNGLTEXCOORDP1UIVPROC _glTexCoordP1uiv = NULL;
PFNGLTEXCOORDP2UIPROC _glTexCoordP2ui = NULL;
PFNGLTEXCOORDP2UIVPROC _glTexCoordP2uiv = NULL;
PFNGLTEXCOORDP3UIPROC _glTexCoordP3ui = NULL;
PFNGLTEXCOORDP3UIVPROC _glTexCoordP3uiv = NULL;
PFNGLTEXCOORDP4UIPROC _glTexCoordP4ui = NULL;
PFNGLTEXCOORDP4UIVPROC _glTexCoordP4uiv = NULL;
PFNGLTEXCOORDPOINTERPROC _glTexCoordPointer = NULL;
PFNGLTEXENVFPROC _glTexEnvf = NULL;
PFNGLTEXENVFVPROC _glTexEnvfv = NULL;
PFNGLTEXENVIPROC _glTexEnvi = NULL;
PFNGLTEXENVIVPROC _glTexEnviv = NULL;
PFNGLTEXGENDPROC _glTexGend = NULL;
PFNGLTEXGENDVPROC _glTexGendv = NULL;
PFNGLTEXGENFPROC _glTexGenf = NULL;
PFNGLTEXGENFVPROC _glTexGenfv = NULL;
PFNGLTEXGENIPROC _glTexGeni = NULL;
PFNGLTEXGENIVPROC _glTexGeniv = NULL;
PFNGLTEXIMAGE1DPROC _glTexImage1D = NULL;
PFNGLTEXIMAGE2DPROC _glTexImage2D = NULL;
PFNGLTEXIMAGE2DMULTISAMPLEPROC _glTexImage2DMultisample = NULL;
PFNGLTEXIMAGE3DPROC _glTexImage3D = NULL;
PFNGLTEXIMAGE3DMULTISAMPLEPROC _glTexImage3DMultisample = NULL;
PFNGLTEXPARAMETERIIVPROC _glTexParameterIiv = NULL;
PFNGLTEXPARAMETERIUIVPROC _glTexParameterIuiv = NULL;
PFNGLTEXPARAMETERFPROC _glTexParameterf = NULL;
PFNGLTEXPARAMETERFVPROC _glTexParameterfv = NULL;
PFNGLTEXPARAMETERIPROC _glTexParameteri = NULL;
PFNGLTEXPARAMETERIVPROC _glTexParameteriv = NULL;
PFNGLTEXSTORAGE1DPROC _glTexStorage1D = NULL;
PFNGLTEXSTORAGE2DPROC _glTexStorage2D = NULL;
PFNGLTEXSTORAGE2DMULTISAMPLEPROC _glTexStorage2DMultisample = NULL;
PFNGLTEXSTORAGE3DPROC _glTexStorage3D = NULL;
PFNGLTEXSTORAGE3DMULTISAMPLEPROC _glTexStorage3DMultisample = NULL;
PFNGLTEXSUBIMAGE1DPROC _glTexSubImage1D = NULL;
PFNGLTEXSUBIMAGE2DPROC _glTexSubImage2D = NULL;
PFNGLTEXSUBIMAGE3DPROC _glTexSubImage3D = NULL;
PFNGLTEXTUREVIEWPROC _glTextureView = NULL;
PFNGLTRANSFORMFEEDBACKVARYINGSPROC _glTransformFeedbackVaryings = NULL;
PFNGLTRANSLATEDPROC _glTranslated = NULL;
PFNGLTRANSLATEFPROC _glTranslatef = NULL;
PFNGLUNIFORM1DPROC _glUniform1d = NULL;
PFNGLUNIFORM1DVPROC _glUniform1dv = NULL;
PFNGLUNIFORM1FPROC _glUniform1f = NULL;
PFNGLUNIFORM1FVPROC _glUniform1fv = NULL;
PFNGLUNIFORM1IPROC _glUniform1i = NULL;
PFNGLUNIFORM1IVPROC _glUniform1iv = NULL;
PFNGLUNIFORM1UIPROC _glUniform1ui = NULL;
PFNGLUNIFORM1UIVPROC _glUniform1uiv = NULL;
PFNGLUNIFORM2DPROC _glUniform2d = NULL;
PFNGLUNIFORM2DVPROC _glUniform2dv = NULL;
PFNGLUNIFORM2FPROC _glUniform2f = NULL;
PFNGLUNIFORM2FVPROC _glUniform2fv = NULL;
PFNGLUNIFORM2IPROC _glUniform2i = NULL;
PFNGLUNIFORM2IVPROC _glUniform2iv = NULL;
PFNGLUNIFORM2UIPROC _glUniform2ui = NULL;
PFNGLUNIFORM2UIVPROC _glUniform2uiv = NULL;
PFNGLUNIFORM3DPROC _glUniform3d = NULL;
PFNGLUNIFORM3DVPROC _glUniform3dv = NULL;
PFNGLUNIFORM3FPROC _glUniform3f = NULL;
PFNGLUNIFORM3FVPROC _glUniform3fv = NULL;
PFNGLUNIFORM3IPROC _glUniform3i = NULL;
PFNGLUNIFORM3IVPROC _glUniform3iv = NULL;
PFNGLUNIFORM3UIPROC _glUniform3ui = NULL;
PFNGLUNIFORM3UIVPROC _glUniform3uiv = NULL;
PFNGLUNIFORM4DPROC _glUniform4d = NULL;
PFNGLUNIFORM4DVPROC _glUniform4dv = NULL;
PFNGLUNIFORM4FPROC _glUniform4f = NULL;
PFNGLUNIFORM4FVPROC _glUniform4fv = NULL;
PFNGLUNIFORM4IPROC _glUniform4i = NULL;
PFNGLUNIFORM4IVPROC _glUniform4iv = NULL;
PFNGLUNIFORM4UIPROC _glUniform4ui = NULL;
PFNGLUNIFORM4UIVPROC _glUniform4uiv = NULL;
PFNGLUNIFORMBLOCKBINDINGPROC _glUniformBlockBinding = NULL;
PFNGLUNIFORMMATRIX2DVPROC _glUniformMatrix2dv = NULL;
PFNGLUNIFORMMATRIX2FVPROC _glUniformMatrix2fv = NULL;
PFNGLUNIFORMMATRIX2X3DVPROC _glUniformMatrix2x3dv = NULL;
PFNGLUNIFORMMATRIX2X3FVPROC _glUniformMatrix2x3fv = NULL;
PFNGLUNIFORMMATRIX2X4DVPROC _glUniformMatrix2x4dv = NULL;
PFNGLUNIFORMMATRIX2X4FVPROC _glUniformMatrix2x4fv = NULL;
PFNGLUNIFORMMATRIX3DVPROC _glUniformMatrix3dv = NULL;
PFNGLUNIFORMMATRIX3FVPROC _glUniformMatrix3fv = NULL;
PFNGLUNIFORMMATRIX3X2DVPROC _glUniformMatrix3x2dv = NULL;
PFNGLUNIFORMMATRIX3X2FVPROC _glUniformMatrix3x2fv = NULL;
PFNGLUNIFORMMATRIX3X4DVPROC _glUniformMatrix3x4dv = NULL;
PFNGLUNIFORMMATRIX3X4FVPROC _glUniformMatrix3x4fv = NULL;
PFNGLUNIFORMMATRIX4DVPROC _glUniformMatrix4dv = NULL;
PFNGLUNIFORMMATRIX4FVPROC _glUniformMatrix4fv = NULL;
PFNGLUNIFORMMATRIX4X2DVPROC _glUniformMatrix4x2dv = NULL;
PFNGLUNIFORMMATRIX4X2FVPROC _glUniformMatrix4x2fv = NULL;
PFNGLUNIFORMMATRIX4X3DVPROC _glUniformMatrix4x3dv = NULL;
PFNGLUNIFORMMATRIX4X3FVPROC _glUniformMatrix4x3fv = NULL;
PFNGLUNIFORMSUBROUTINESUIVPROC _glUniformSubroutinesuiv = NULL;
PFNGLUNMAPBUFFERPROC _glUnmapBuffer = NULL;
PFNGLUSEPROGRAMPROC _glUseProgram = NULL;
PFNGLUSEPROGRAMSTAGESPROC _glUseProgramStages = NULL;
PFNGLVALIDATEPROGRAMPROC _glValidateProgram = NULL;
PFNGLVALIDATEPROGRAMPIPELINEPROC _glValidateProgramPipeline = NULL;
PFNGLVERTEX2DPROC _glVertex2d = NULL;
PFNGLVERTEX2DVPROC _glVertex2dv = NULL;
PFNGLVERTEX2FPROC _glVertex2f = NULL;
PFNGLVERTEX2FVPROC _glVertex2fv = NULL;
PFNGLVERTEX2IPROC _glVertex2i = NULL;
PFNGLVERTEX2IVPROC _glVertex2iv = NULL;
PFNGLVERTEX2SPROC _glVertex2s = NULL;
PFNGLVERTEX2SVPROC _glVertex2sv = NULL;
PFNGLVERTEX3DPROC _glVertex3d = NULL;
PFNGLVERTEX3DVPROC _glVertex3dv = NULL;
PFNGLVERTEX3FPROC _glVertex3f = NULL;
PFNGLVERTEX3FVPROC _glVertex3fv = NULL;
PFNGLVERTEX3IPROC _glVertex3i = NULL;
PFNGLVERTEX3IVPROC _glVertex3iv = NULL;
PFNGLVERTEX3SPROC _glVertex3s = NULL;
PFNGLVERTEX3SVPROC _glVertex3sv = NULL;
PFNGLVERTEX4DPROC _glVertex4d = NULL;
PFNGLVERTEX4DVPROC _glVertex4dv = NULL;
PFNGLVERTEX4FPROC _glVertex4f = NULL;
PFNGLVERTEX4FVPROC _glVertex4fv = NULL;
PFNGLVERTEX4IPROC _glVertex4i = NULL;
PFNGLVERTEX4IVPROC _glVertex4iv = NULL;
PFNGLVERTEX4SPROC _glVertex4s = NULL;
PFNGLVERTEX4SVPROC _glVertex4sv = NULL;
PFNGLVERTEXATTRIB1DPROC _glVertexAttrib1d = NULL;
PFNGLVERTEXATTRIB1DVPROC _glVertexAttrib1dv = NULL;
PFNGLVERTEXATTRIB1FPROC _glVertexAttrib1f = NULL;
PFNGLVERTEXATTRIB1FVPROC _glVertexAttrib1fv = NULL;
PFNGLVERTEXATTRIB1SPROC _glVertexAttrib1s = NULL;
PFNGLVERTEXATTRIB1SVPROC _glVertexAttrib1sv = NULL;
PFNGLVERTEXATTRIB2DPROC _glVertexAttrib2d = NULL;
PFNGLVERTEXATTRIB2DVPROC _glVertexAttrib2dv = NULL;
PFNGLVERTEXATTRIB2FPROC _glVertexAttrib2f = NULL;
PFNGLVERTEXATTRIB2FVPROC _glVertexAttrib2fv = NULL;
PFNGLVERTEXATTRIB2SPROC _glVertexAttrib2s = NULL;
PFNGLVERTEXATTRIB2SVPROC _glVertexAttrib2sv = NULL;
PFNGLVERTEXATTRIB3DPROC _glVertexAttrib3d = NULL;
PFNGLVERTEXATTRIB3DVPROC _glVertexAttrib3dv = NULL;
PFNGLVERTEXATTRIB3FPROC _glVertexAttrib3f = NULL;
PFNGLVERTEXATTRIB3FVPROC _glVertexAttrib3fv = NULL;
PFNGLVERTEXATTRIB3SPROC _glVertexAttrib3s = NULL;
PFNGLVERTEXATTRIB3SVPROC _glVertexAttrib3sv = NULL;
PFNGLVERTEXATTRIB4NBVPROC _glVertexAttrib4Nbv = NULL;
PFNGLVERTEXATTRIB4NIVPROC _glVertexAttrib4Niv = NULL;
PFNGLVERTEXATTRIB4NSVPROC _glVertexAttrib4Nsv = NULL;
PFNGLVERTEXATTRIB4NUBPROC _glVertexAttrib4Nub = NULL;
PFNGLVERTEXATTRIB4NUBVPROC _glVertexAttrib4Nubv = NULL;
PFNGLVERTEXATTRIB4NUIVPROC _glVertexAttrib4Nuiv = NULL;
PFNGLVERTEXATTRIB4NUSVPROC _glVertexAttrib4Nusv = NULL;
PFNGLVERTEXATTRIB4BVPROC _glVertexAttrib4bv = NULL;
PFNGLVERTEXATTRIB4DPROC _glVertexAttrib4d = NULL;
PFNGLVERTEXATTRIB4DVPROC _glVertexAttrib4dv = NULL;
PFNGLVERTEXATTRIB4FPROC _glVertexAttrib4f = NULL;
PFNGLVERTEXATTRIB4FVPROC _glVertexAttrib4fv = NULL;
PFNGLVERTEXATTRIB4IVPROC _glVertexAttrib4iv = NULL;
PFNGLVERTEXATTRIB4SPROC _glVertexAttrib4s = NULL;
PFNGLVERTEXATTRIB4SVPROC _glVertexAttrib4sv = NULL;
PFNGLVERTEXATTRIB4UBVPROC _glVertexAttrib4ubv = NULL;
PFNGLVERTEXATTRIB4UIVPROC _glVertexAttrib4uiv = NULL;
PFNGLVERTEXATTRIB4USVPROC _glVertexAttrib4usv = NULL;
PFNGLVERTEXATTRIBBINDINGPROC _glVertexAttribBinding = NULL;
PFNGLVERTEXATTRIBDIVISORPROC _glVertexAttribDivisor = NULL;
PFNGLVERTEXATTRIBFORMATPROC _glVertexAttribFormat = NULL;
PFNGLVERTEXATTRIBI1IPROC _glVertexAttribI1i = NULL;
PFNGLVERTEXATTRIBI1IVPROC _glVertexAttribI1iv = NULL;
PFNGLVERTEXATTRIBI1UIPROC _glVertexAttribI1ui = NULL;
PFNGLVERTEXATTRIBI1UIVPROC _glVertexAttribI1uiv = NULL;
PFNGLVERTEXATTRIBI2IPROC _glVertexAttribI2i = NULL;
PFNGLVERTEXATTRIBI2IVPROC _glVertexAttribI2iv = NULL;
PFNGLVERTEXATTRIBI2UIPROC _glVertexAttribI2ui = NULL;
PFNGLVERTEXATTRIBI2UIVPROC _glVertexAttribI2uiv = NULL;
PFNGLVERTEXATTRIBI3IPROC _glVertexAttribI3i = NULL;
PFNGLVERTEXATTRIBI3IVPROC _glVertexAttribI3iv = NULL;
PFNGLVERTEXATTRIBI3UIPROC _glVertexAttribI3ui = NULL;
PFNGLVERTEXATTRIBI3UIVPROC _glVertexAttribI3uiv = NULL;
PFNGLVERTEXATTRIBI4BVPROC _glVertexAttribI4bv = NULL;
PFNGLVERTEXATTRIBI4IPROC _glVertexAttribI4i = NULL;
PFNGLVERTEXATTRIBI4IVPROC _glVertexAttribI4iv = NULL;
PFNGLVERTEXATTRIBI4SVPROC _glVertexAttribI4sv = NULL;
PFNGLVERTEXATTRIBI4UBVPROC _glVertexAttribI4ubv = NULL;
PFNGLVERTEXATTRIBI4UIPROC _glVertexAttribI4ui = NULL;
PFNGLVERTEXATTRIBI4UIVPROC _glVertexAttribI4uiv = NULL;
PFNGLVERTEXATTRIBI4USVPROC _glVertexAttribI4usv = NULL;
PFNGLVERTEXATTRIBIFORMATPROC _glVertexAttribIFormat = NULL;
PFNGLVERTEXATTRIBIPOINTERPROC _glVertexAttribIPointer = NULL;
PFNGLVERTEXATTRIBL1DPROC _glVertexAttribL1d = NULL;
PFNGLVERTEXATTRIBL1DVPROC _glVertexAttribL1dv = NULL;
PFNGLVERTEXATTRIBL2DPROC _glVertexAttribL2d = NULL;
PFNGLVERTEXATTRIBL2DVPROC _glVertexAttribL2dv = NULL;
PFNGLVERTEXATTRIBL3DPROC _glVertexAttribL3d = NULL;
PFNGLVERTEXATTRIBL3DVPROC _glVertexAttribL3dv = NULL;
PFNGLVERTEXATTRIBL4DPROC _glVertexAttribL4d = NULL;
PFNGLVERTEXATTRIBL4DVPROC _glVertexAttribL4dv = NULL;
PFNGLVERTEXATTRIBLFORMATPROC _glVertexAttribLFormat = NULL;
PFNGLVERTEXATTRIBLPOINTERPROC _glVertexAttribLPointer = NULL;
PFNGLVERTEXATTRIBP1UIPROC _glVertexAttribP1ui = NULL;
PFNGLVERTEXATTRIBP1UIVPROC _glVertexAttribP1uiv = NULL;
PFNGLVERTEXATTRIBP2UIPROC _glVertexAttribP2ui = NULL;
PFNGLVERTEXATTRIBP2UIVPROC _glVertexAttribP2uiv = NULL;
PFNGLVERTEXATTRIBP3UIPROC _glVertexAttribP3ui = NULL;
PFNGLVERTEXATTRIBP3UIVPROC _glVertexAttribP3uiv = NULL;
PFNGLVERTEXATTRIBP4UIPROC _glVertexAttribP4ui = NULL;
PFNGLVERTEXATTRIBP4UIVPROC _glVertexAttribP4uiv = NULL;
PFNGLVERTEXATTRIBPOINTERPROC _glVertexAttribPointer = NULL;
PFNGLVERTEXBINDINGDIVISORPROC _glVertexBindingDivisor = NULL;
PFNGLVERTEXP2UIPROC _glVertexP2ui = NULL;
PFNGLVERTEXP2UIVPROC _glVertexP2uiv = NULL;
PFNGLVERTEXP3UIPROC _glVertexP3ui = NULL;
PFNGLVERTEXP3UIVPROC _glVertexP3uiv = NULL;
PFNGLVERTEXP4UIPROC _glVertexP4ui = NULL;
PFNGLVERTEXP4UIVPROC _glVertexP4uiv = NULL;
PFNGLVERTEXPOINTERPROC _glVertexPointer = NULL;
PFNGLVIEWPORTPROC _glViewport = NULL;
PFNGLVIEWPORTARRAYVPROC _glViewportArrayv = NULL;
PFNGLVIEWPORTINDEXEDFPROC _glViewportIndexedf = NULL;
PFNGLVIEWPORTINDEXEDFVPROC _glViewportIndexedfv = NULL;
PFNGLWAITSYNCPROC _glWaitSync = NULL;
PFNGLWINDOWPOS2DPROC _glWindowPos2d = NULL;
PFNGLWINDOWPOS2DVPROC _glWindowPos2dv = NULL;
PFNGLWINDOWPOS2FPROC _glWindowPos2f = NULL;
PFNGLWINDOWPOS2FVPROC _glWindowPos2fv = NULL;
PFNGLWINDOWPOS2IPROC _glWindowPos2i = NULL;
PFNGLWINDOWPOS2IVPROC _glWindowPos2iv = NULL;
PFNGLWINDOWPOS2SPROC _glWindowPos2s = NULL;
PFNGLWINDOWPOS2SVPROC _glWindowPos2sv = NULL;
PFNGLWINDOWPOS3DPROC _glWindowPos3d = NULL;
PFNGLWINDOWPOS3DVPROC _glWindowPos3dv = NULL;
PFNGLWINDOWPOS3FPROC _glWindowPos3f = NULL;
PFNGLWINDOWPOS3FVPROC _glWindowPos3fv = NULL;
PFNGLWINDOWPOS3IPROC _glWindowPos3i = NULL;
PFNGLWINDOWPOS3IVPROC _glWindowPos3iv = NULL;
PFNGLWINDOWPOS3SPROC _glWindowPos3s = NULL;
PFNGLWINDOWPOS3SVPROC _glWindowPos3sv = NULL;


static void load_GL_VERSION_1_0(loadproc load) {
	if (!_GL_VERSION_1_0) return;
	_glCullFace = (PFNGLCULLFACEPROC)load("glCullFace");
	_glFrontFace = (PFNGLFRONTFACEPROC)load("glFrontFace");
	_glHint = (PFNGLHINTPROC)load("glHint");
	_glLineWidth = (PFNGLLINEWIDTHPROC)load("glLineWidth");
	_glPointSize = (PFNGLPOINTSIZEPROC)load("glPointSize");
	_glPolygonMode = (PFNGLPOLYGONMODEPROC)load("glPolygonMode");
	_glScissor = (PFNGLSCISSORPROC)load("glScissor");
	_glTexParameterf = (PFNGLTEXPARAMETERFPROC)load("glTexParameterf");
	_glTexParameterfv = (PFNGLTEXPARAMETERFVPROC)load("glTexParameterfv");
	_glTexParameteri = (PFNGLTEXPARAMETERIPROC)load("glTexParameteri");
	_glTexParameteriv = (PFNGLTEXPARAMETERIVPROC)load("glTexParameteriv");
	_glTexImage1D = (PFNGLTEXIMAGE1DPROC)load("glTexImage1D");
	_glTexImage2D = (PFNGLTEXIMAGE2DPROC)load("glTexImage2D");
	_glDrawBuffer = (PFNGLDRAWBUFFERPROC)load("glDrawBuffer");
	_glClear = (PFNGLCLEARPROC)load("glClear");
	_glClearColor = (PFNGLCLEARCOLORPROC)load("glClearColor");
	_glClearStencil = (PFNGLCLEARSTENCILPROC)load("glClearStencil");
	_glClearDepth = (PFNGLCLEARDEPTHPROC)load("glClearDepth");
	_glStencilMask = (PFNGLSTENCILMASKPROC)load("glStencilMask");
	_glColorMask = (PFNGLCOLORMASKPROC)load("glColorMask");
	_glDepthMask = (PFNGLDEPTHMASKPROC)load("glDepthMask");
	_glDisable = (PFNGLDISABLEPROC)load("glDisable");
	_glEnable = (PFNGLENABLEPROC)load("glEnable");
	_glFinish = (PFNGLFINISHPROC)load("glFinish");
	_glFlush = (PFNGLFLUSHPROC)load("glFlush");
	_glBlendFunc = (PFNGLBLENDFUNCPROC)load("glBlendFunc");
	_glLogicOp = (PFNGLLOGICOPPROC)load("glLogicOp");
	_glStencilFunc = (PFNGLSTENCILFUNCPROC)load("glStencilFunc");
	_glStencilOp = (PFNGLSTENCILOPPROC)load("glStencilOp");
	_glDepthFunc = (PFNGLDEPTHFUNCPROC)load("glDepthFunc");
	_glPixelStoref = (PFNGLPIXELSTOREFPROC)load("glPixelStoref");
	_glPixelStorei = (PFNGLPIXELSTOREIPROC)load("glPixelStorei");
	_glReadBuffer = (PFNGLREADBUFFERPROC)load("glReadBuffer");
	_glReadPixels = (PFNGLREADPIXELSPROC)load("glReadPixels");
	_glGetBooleanv = (PFNGLGETBOOLEANVPROC)load("glGetBooleanv");
	_glGetDoublev = (PFNGLGETDOUBLEVPROC)load("glGetDoublev");
	_glGetError = (PFNGLGETERRORPROC)load("glGetError");
	_glGetFloatv = (PFNGLGETFLOATVPROC)load("glGetFloatv");
	_glGetIntegerv = (PFNGLGETINTEGERVPROC)load("glGetIntegerv");
	_glGetString = (PFNGLGETSTRINGPROC)load("glGetString");
	_glGetTexImage = (PFNGLGETTEXIMAGEPROC)load("glGetTexImage");
	_glGetTexParameterfv = (PFNGLGETTEXPARAMETERFVPROC)load("glGetTexParameterfv");
	_glGetTexParameteriv = (PFNGLGETTEXPARAMETERIVPROC)load("glGetTexParameteriv");
	_glGetTexLevelParameterfv = (PFNGLGETTEXLEVELPARAMETERFVPROC)load("glGetTexLevelParameterfv");
	_glGetTexLevelParameteriv = (PFNGLGETTEXLEVELPARAMETERIVPROC)load("glGetTexLevelParameteriv");
	_glIsEnabled = (PFNGLISENABLEDPROC)load("glIsEnabled");
	_glDepthRange = (PFNGLDEPTHRANGEPROC)load("glDepthRange");
	_glViewport = (PFNGLVIEWPORTPROC)load("glViewport");
	_glNewList = (PFNGLNEWLISTPROC)load("glNewList");
	_glEndList = (PFNGLENDLISTPROC)load("glEndList");
	_glCallList = (PFNGLCALLLISTPROC)load("glCallList");
	_glCallLists = (PFNGLCALLLISTSPROC)load("glCallLists");
	_glDeleteLists = (PFNGLDELETELISTSPROC)load("glDeleteLists");
	_glGenLists = (PFNGLGENLISTSPROC)load("glGenLists");
	_glListBase = (PFNGLLISTBASEPROC)load("glListBase");
	_glBegin = (PFNGLBEGINPROC)load("glBegin");
	_glBitmap = (PFNGLBITMAPPROC)load("glBitmap");
	_glColor3b = (PFNGLCOLOR3BPROC)load("glColor3b");
	_glColor3bv = (PFNGLCOLOR3BVPROC)load("glColor3bv");
	_glColor3d = (PFNGLCOLOR3DPROC)load("glColor3d");
	_glColor3dv = (PFNGLCOLOR3DVPROC)load("glColor3dv");
	_glColor3f = (PFNGLCOLOR3FPROC)load("glColor3f");
	_glColor3fv = (PFNGLCOLOR3FVPROC)load("glColor3fv");
	_glColor3i = (PFNGLCOLOR3IPROC)load("glColor3i");
	_glColor3iv = (PFNGLCOLOR3IVPROC)load("glColor3iv");
	_glColor3s = (PFNGLCOLOR3SPROC)load("glColor3s");
	_glColor3sv = (PFNGLCOLOR3SVPROC)load("glColor3sv");
	_glColor3ub = (PFNGLCOLOR3UBPROC)load("glColor3ub");
	_glColor3ubv = (PFNGLCOLOR3UBVPROC)load("glColor3ubv");
	_glColor3ui = (PFNGLCOLOR3UIPROC)load("glColor3ui");
	_glColor3uiv = (PFNGLCOLOR3UIVPROC)load("glColor3uiv");
	_glColor3us = (PFNGLCOLOR3USPROC)load("glColor3us");
	_glColor3usv = (PFNGLCOLOR3USVPROC)load("glColor3usv");
	_glColor4b = (PFNGLCOLOR4BPROC)load("glColor4b");
	_glColor4bv = (PFNGLCOLOR4BVPROC)load("glColor4bv");
	_glColor4d = (PFNGLCOLOR4DPROC)load("glColor4d");
	_glColor4dv = (PFNGLCOLOR4DVPROC)load("glColor4dv");
	_glColor4f = (PFNGLCOLOR4FPROC)load("glColor4f");
	_glColor4fv = (PFNGLCOLOR4FVPROC)load("glColor4fv");
	_glColor4i = (PFNGLCOLOR4IPROC)load("glColor4i");
	_glColor4iv = (PFNGLCOLOR4IVPROC)load("glColor4iv");
	_glColor4s = (PFNGLCOLOR4SPROC)load("glColor4s");
	_glColor4sv = (PFNGLCOLOR4SVPROC)load("glColor4sv");
	_glColor4ub = (PFNGLCOLOR4UBPROC)load("glColor4ub");
	_glColor4ubv = (PFNGLCOLOR4UBVPROC)load("glColor4ubv");
	_glColor4ui = (PFNGLCOLOR4UIPROC)load("glColor4ui");
	_glColor4uiv = (PFNGLCOLOR4UIVPROC)load("glColor4uiv");
	_glColor4us = (PFNGLCOLOR4USPROC)load("glColor4us");
	_glColor4usv = (PFNGLCOLOR4USVPROC)load("glColor4usv");
	_glEdgeFlag = (PFNGLEDGEFLAGPROC)load("glEdgeFlag");
	_glEdgeFlagv = (PFNGLEDGEFLAGVPROC)load("glEdgeFlagv");
	_glEnd = (PFNGLENDPROC)load("glEnd");
	_glIndexd = (PFNGLINDEXDPROC)load("glIndexd");
	_glIndexdv = (PFNGLINDEXDVPROC)load("glIndexdv");
	_glIndexf = (PFNGLINDEXFPROC)load("glIndexf");
	_glIndexfv = (PFNGLINDEXFVPROC)load("glIndexfv");
	_glIndexi = (PFNGLINDEXIPROC)load("glIndexi");
	_glIndexiv = (PFNGLINDEXIVPROC)load("glIndexiv");
	_glIndexs = (PFNGLINDEXSPROC)load("glIndexs");
	_glIndexsv = (PFNGLINDEXSVPROC)load("glIndexsv");
	_glNormal3b = (PFNGLNORMAL3BPROC)load("glNormal3b");
	_glNormal3bv = (PFNGLNORMAL3BVPROC)load("glNormal3bv");
	_glNormal3d = (PFNGLNORMAL3DPROC)load("glNormal3d");
	_glNormal3dv = (PFNGLNORMAL3DVPROC)load("glNormal3dv");
	_glNormal3f = (PFNGLNORMAL3FPROC)load("glNormal3f");
	_glNormal3fv = (PFNGLNORMAL3FVPROC)load("glNormal3fv");
	_glNormal3i = (PFNGLNORMAL3IPROC)load("glNormal3i");
	_glNormal3iv = (PFNGLNORMAL3IVPROC)load("glNormal3iv");
	_glNormal3s = (PFNGLNORMAL3SPROC)load("glNormal3s");
	_glNormal3sv = (PFNGLNORMAL3SVPROC)load("glNormal3sv");
	_glRasterPos2d = (PFNGLRASTERPOS2DPROC)load("glRasterPos2d");
	_glRasterPos2dv = (PFNGLRASTERPOS2DVPROC)load("glRasterPos2dv");
	_glRasterPos2f = (PFNGLRASTERPOS2FPROC)load("glRasterPos2f");
	_glRasterPos2fv = (PFNGLRASTERPOS2FVPROC)load("glRasterPos2fv");
	_glRasterPos2i = (PFNGLRASTERPOS2IPROC)load("glRasterPos2i");
	_glRasterPos2iv = (PFNGLRASTERPOS2IVPROC)load("glRasterPos2iv");
	_glRasterPos2s = (PFNGLRASTERPOS2SPROC)load("glRasterPos2s");
	_glRasterPos2sv = (PFNGLRASTERPOS2SVPROC)load("glRasterPos2sv");
	_glRasterPos3d = (PFNGLRASTERPOS3DPROC)load("glRasterPos3d");
	_glRasterPos3dv = (PFNGLRASTERPOS3DVPROC)load("glRasterPos3dv");
	_glRasterPos3f = (PFNGLRASTERPOS3FPROC)load("glRasterPos3f");
	_glRasterPos3fv = (PFNGLRASTERPOS3FVPROC)load("glRasterPos3fv");
	_glRasterPos3i = (PFNGLRASTERPOS3IPROC)load("glRasterPos3i");
	_glRasterPos3iv = (PFNGLRASTERPOS3IVPROC)load("glRasterPos3iv");
	_glRasterPos3s = (PFNGLRASTERPOS3SPROC)load("glRasterPos3s");
	_glRasterPos3sv = (PFNGLRASTERPOS3SVPROC)load("glRasterPos3sv");
	_glRasterPos4d = (PFNGLRASTERPOS4DPROC)load("glRasterPos4d");
	_glRasterPos4dv = (PFNGLRASTERPOS4DVPROC)load("glRasterPos4dv");
	_glRasterPos4f = (PFNGLRASTERPOS4FPROC)load("glRasterPos4f");
	_glRasterPos4fv = (PFNGLRASTERPOS4FVPROC)load("glRasterPos4fv");
	_glRasterPos4i = (PFNGLRASTERPOS4IPROC)load("glRasterPos4i");
	_glRasterPos4iv = (PFNGLRASTERPOS4IVPROC)load("glRasterPos4iv");
	_glRasterPos4s = (PFNGLRASTERPOS4SPROC)load("glRasterPos4s");
	_glRasterPos4sv = (PFNGLRASTERPOS4SVPROC)load("glRasterPos4sv");
	_glRectd = (PFNGLRECTDPROC)load("glRectd");
	_glRectdv = (PFNGLRECTDVPROC)load("glRectdv");
	_glRectf = (PFNGLRECTFPROC)load("glRectf");
	_glRectfv = (PFNGLRECTFVPROC)load("glRectfv");
	_glRecti = (PFNGLRECTIPROC)load("glRecti");
	_glRectiv = (PFNGLRECTIVPROC)load("glRectiv");
	_glRects = (PFNGLRECTSPROC)load("glRects");
	_glRectsv = (PFNGLRECTSVPROC)load("glRectsv");
	_glTexCoord1d = (PFNGLTEXCOORD1DPROC)load("glTexCoord1d");
	_glTexCoord1dv = (PFNGLTEXCOORD1DVPROC)load("glTexCoord1dv");
	_glTexCoord1f = (PFNGLTEXCOORD1FPROC)load("glTexCoord1f");
	_glTexCoord1fv = (PFNGLTEXCOORD1FVPROC)load("glTexCoord1fv");
	_glTexCoord1i = (PFNGLTEXCOORD1IPROC)load("glTexCoord1i");
	_glTexCoord1iv = (PFNGLTEXCOORD1IVPROC)load("glTexCoord1iv");
	_glTexCoord1s = (PFNGLTEXCOORD1SPROC)load("glTexCoord1s");
	_glTexCoord1sv = (PFNGLTEXCOORD1SVPROC)load("glTexCoord1sv");
	_glTexCoord2d = (PFNGLTEXCOORD2DPROC)load("glTexCoord2d");
	_glTexCoord2dv = (PFNGLTEXCOORD2DVPROC)load("glTexCoord2dv");
	_glTexCoord2f = (PFNGLTEXCOORD2FPROC)load("glTexCoord2f");
	_glTexCoord2fv = (PFNGLTEXCOORD2FVPROC)load("glTexCoord2fv");
	_glTexCoord2i = (PFNGLTEXCOORD2IPROC)load("glTexCoord2i");
	_glTexCoord2iv = (PFNGLTEXCOORD2IVPROC)load("glTexCoord2iv");
	_glTexCoord2s = (PFNGLTEXCOORD2SPROC)load("glTexCoord2s");
	_glTexCoord2sv = (PFNGLTEXCOORD2SVPROC)load("glTexCoord2sv");
	_glTexCoord3d = (PFNGLTEXCOORD3DPROC)load("glTexCoord3d");
	_glTexCoord3dv = (PFNGLTEXCOORD3DVPROC)load("glTexCoord3dv");
	_glTexCoord3f = (PFNGLTEXCOORD3FPROC)load("glTexCoord3f");
	_glTexCoord3fv = (PFNGLTEXCOORD3FVPROC)load("glTexCoord3fv");
	_glTexCoord3i = (PFNGLTEXCOORD3IPROC)load("glTexCoord3i");
	_glTexCoord3iv = (PFNGLTEXCOORD3IVPROC)load("glTexCoord3iv");
	_glTexCoord3s = (PFNGLTEXCOORD3SPROC)load("glTexCoord3s");
	_glTexCoord3sv = (PFNGLTEXCOORD3SVPROC)load("glTexCoord3sv");
	_glTexCoord4d = (PFNGLTEXCOORD4DPROC)load("glTexCoord4d");
	_glTexCoord4dv = (PFNGLTEXCOORD4DVPROC)load("glTexCoord4dv");
	_glTexCoord4f = (PFNGLTEXCOORD4FPROC)load("glTexCoord4f");
	_glTexCoord4fv = (PFNGLTEXCOORD4FVPROC)load("glTexCoord4fv");
	_glTexCoord4i = (PFNGLTEXCOORD4IPROC)load("glTexCoord4i");
	_glTexCoord4iv = (PFNGLTEXCOORD4IVPROC)load("glTexCoord4iv");
	_glTexCoord4s = (PFNGLTEXCOORD4SPROC)load("glTexCoord4s");
	_glTexCoord4sv = (PFNGLTEXCOORD4SVPROC)load("glTexCoord4sv");
	_glVertex2d = (PFNGLVERTEX2DPROC)load("glVertex2d");
	_glVertex2dv = (PFNGLVERTEX2DVPROC)load("glVertex2dv");
	_glVertex2f = (PFNGLVERTEX2FPROC)load("glVertex2f");
	_glVertex2fv = (PFNGLVERTEX2FVPROC)load("glVertex2fv");
	_glVertex2i = (PFNGLVERTEX2IPROC)load("glVertex2i");
	_glVertex2iv = (PFNGLVERTEX2IVPROC)load("glVertex2iv");
	_glVertex2s = (PFNGLVERTEX2SPROC)load("glVertex2s");
	_glVertex2sv = (PFNGLVERTEX2SVPROC)load("glVertex2sv");
	_glVertex3d = (PFNGLVERTEX3DPROC)load("glVertex3d");
	_glVertex3dv = (PFNGLVERTEX3DVPROC)load("glVertex3dv");
	_glVertex3f = (PFNGLVERTEX3FPROC)load("glVertex3f");
	_glVertex3fv = (PFNGLVERTEX3FVPROC)load("glVertex3fv");
	_glVertex3i = (PFNGLVERTEX3IPROC)load("glVertex3i");
	_glVertex3iv = (PFNGLVERTEX3IVPROC)load("glVertex3iv");
	_glVertex3s = (PFNGLVERTEX3SPROC)load("glVertex3s");
	_glVertex3sv = (PFNGLVERTEX3SVPROC)load("glVertex3sv");
	_glVertex4d = (PFNGLVERTEX4DPROC)load("glVertex4d");
	_glVertex4dv = (PFNGLVERTEX4DVPROC)load("glVertex4dv");
	_glVertex4f = (PFNGLVERTEX4FPROC)load("glVertex4f");
	_glVertex4fv = (PFNGLVERTEX4FVPROC)load("glVertex4fv");
	_glVertex4i = (PFNGLVERTEX4IPROC)load("glVertex4i");
	_glVertex4iv = (PFNGLVERTEX4IVPROC)load("glVertex4iv");
	_glVertex4s = (PFNGLVERTEX4SPROC)load("glVertex4s");
	_glVertex4sv = (PFNGLVERTEX4SVPROC)load("glVertex4sv");
	_glClipPlane = (PFNGLCLIPPLANEPROC)load("glClipPlane");
	_glColorMaterial = (PFNGLCOLORMATERIALPROC)load("glColorMaterial");
	_glFogf = (PFNGLFOGFPROC)load("glFogf");
	_glFogfv = (PFNGLFOGFVPROC)load("glFogfv");
	_glFogi = (PFNGLFOGIPROC)load("glFogi");
	_glFogiv = (PFNGLFOGIVPROC)load("glFogiv");
	_glLightf = (PFNGLLIGHTFPROC)load("glLightf");
	_glLightfv = (PFNGLLIGHTFVPROC)load("glLightfv");
	_glLighti = (PFNGLLIGHTIPROC)load("glLighti");
	_glLightiv = (PFNGLLIGHTIVPROC)load("glLightiv");
	_glLightModelf = (PFNGLLIGHTMODELFPROC)load("glLightModelf");
	_glLightModelfv = (PFNGLLIGHTMODELFVPROC)load("glLightModelfv");
	_glLightModeli = (PFNGLLIGHTMODELIPROC)load("glLightModeli");
	_glLightModeliv = (PFNGLLIGHTMODELIVPROC)load("glLightModeliv");
	_glLineStipple = (PFNGLLINESTIPPLEPROC)load("glLineStipple");
	_glMaterialf = (PFNGLMATERIALFPROC)load("glMaterialf");
	_glMaterialfv = (PFNGLMATERIALFVPROC)load("glMaterialfv");
	_glMateriali = (PFNGLMATERIALIPROC)load("glMateriali");
	_glMaterialiv = (PFNGLMATERIALIVPROC)load("glMaterialiv");
	_glPolygonStipple = (PFNGLPOLYGONSTIPPLEPROC)load("glPolygonStipple");
	_glShadeModel = (PFNGLSHADEMODELPROC)load("glShadeModel");
	_glTexEnvf = (PFNGLTEXENVFPROC)load("glTexEnvf");
	_glTexEnvfv = (PFNGLTEXENVFVPROC)load("glTexEnvfv");
	_glTexEnvi = (PFNGLTEXENVIPROC)load("glTexEnvi");
	_glTexEnviv = (PFNGLTEXENVIVPROC)load("glTexEnviv");
	_glTexGend = (PFNGLTEXGENDPROC)load("glTexGend");
	_glTexGendv = (PFNGLTEXGENDVPROC)load("glTexGendv");
	_glTexGenf = (PFNGLTEXGENFPROC)load("glTexGenf");
	_glTexGenfv = (PFNGLTEXGENFVPROC)load("glTexGenfv");
	_glTexGeni = (PFNGLTEXGENIPROC)load("glTexGeni");
	_glTexGeniv = (PFNGLTEXGENIVPROC)load("glTexGeniv");
	_glFeedbackBuffer = (PFNGLFEEDBACKBUFFERPROC)load("glFeedbackBuffer");
	_glSelectBuffer = (PFNGLSELECTBUFFERPROC)load("glSelectBuffer");
	_glRenderMode = (PFNGLRENDERMODEPROC)load("glRenderMode");
	_glInitNames = (PFNGLINITNAMESPROC)load("glInitNames");
	_glLoadName = (PFNGLLOADNAMEPROC)load("glLoadName");
	_glPassThrough = (PFNGLPASSTHROUGHPROC)load("glPassThrough");
	_glPopName = (PFNGLPOPNAMEPROC)load("glPopName");
	_glPushName = (PFNGLPUSHNAMEPROC)load("glPushName");
	_glClearAccum = (PFNGLCLEARACCUMPROC)load("glClearAccum");
	_glClearIndex = (PFNGLCLEARINDEXPROC)load("glClearIndex");
	_glIndexMask = (PFNGLINDEXMASKPROC)load("glIndexMask");
	_glAccum = (PFNGLACCUMPROC)load("glAccum");
	_glPopAttrib = (PFNGLPOPATTRIBPROC)load("glPopAttrib");
	_glPushAttrib = (PFNGLPUSHATTRIBPROC)load("glPushAttrib");
	_glMap1d = (PFNGLMAP1DPROC)load("glMap1d");
	_glMap1f = (PFNGLMAP1FPROC)load("glMap1f");
	_glMap2d = (PFNGLMAP2DPROC)load("glMap2d");
	_glMap2f = (PFNGLMAP2FPROC)load("glMap2f");
	_glMapGrid1d = (PFNGLMAPGRID1DPROC)load("glMapGrid1d");
	_glMapGrid1f = (PFNGLMAPGRID1FPROC)load("glMapGrid1f");
	_glMapGrid2d = (PFNGLMAPGRID2DPROC)load("glMapGrid2d");
	_glMapGrid2f = (PFNGLMAPGRID2FPROC)load("glMapGrid2f");
	_glEvalCoord1d = (PFNGLEVALCOORD1DPROC)load("glEvalCoord1d");
	_glEvalCoord1dv = (PFNGLEVALCOORD1DVPROC)load("glEvalCoord1dv");
	_glEvalCoord1f = (PFNGLEVALCOORD1FPROC)load("glEvalCoord1f");
	_glEvalCoord1fv = (PFNGLEVALCOORD1FVPROC)load("glEvalCoord1fv");
	_glEvalCoord2d = (PFNGLEVALCOORD2DPROC)load("glEvalCoord2d");
	_glEvalCoord2dv = (PFNGLEVALCOORD2DVPROC)load("glEvalCoord2dv");
	_glEvalCoord2f = (PFNGLEVALCOORD2FPROC)load("glEvalCoord2f");
	_glEvalCoord2fv = (PFNGLEVALCOORD2FVPROC)load("glEvalCoord2fv");
	_glEvalMesh1 = (PFNGLEVALMESH1PROC)load("glEvalMesh1");
	_glEvalPoint1 = (PFNGLEVALPOINT1PROC)load("glEvalPoint1");
	_glEvalMesh2 = (PFNGLEVALMESH2PROC)load("glEvalMesh2");
	_glEvalPoint2 = (PFNGLEVALPOINT2PROC)load("glEvalPoint2");
	_glAlphaFunc = (PFNGLALPHAFUNCPROC)load("glAlphaFunc");
	_glPixelZoom = (PFNGLPIXELZOOMPROC)load("glPixelZoom");
	_glPixelTransferf = (PFNGLPIXELTRANSFERFPROC)load("glPixelTransferf");
	_glPixelTransferi = (PFNGLPIXELTRANSFERIPROC)load("glPixelTransferi");
	_glPixelMapfv = (PFNGLPIXELMAPFVPROC)load("glPixelMapfv");
	_glPixelMapuiv = (PFNGLPIXELMAPUIVPROC)load("glPixelMapuiv");
	_glPixelMapusv = (PFNGLPIXELMAPUSVPROC)load("glPixelMapusv");
	_glCopyPixels = (PFNGLCOPYPIXELSPROC)load("glCopyPixels");
	_glDrawPixels = (PFNGLDRAWPIXELSPROC)load("glDrawPixels");
	_glGetClipPlane = (PFNGLGETCLIPPLANEPROC)load("glGetClipPlane");
	_glGetLightfv = (PFNGLGETLIGHTFVPROC)load("glGetLightfv");
	_glGetLightiv = (PFNGLGETLIGHTIVPROC)load("glGetLightiv");
	_glGetMapdv = (PFNGLGETMAPDVPROC)load("glGetMapdv");
	_glGetMapfv = (PFNGLGETMAPFVPROC)load("glGetMapfv");
	_glGetMapiv = (PFNGLGETMAPIVPROC)load("glGetMapiv");
	_glGetMaterialfv = (PFNGLGETMATERIALFVPROC)load("glGetMaterialfv");
	_glGetMaterialiv = (PFNGLGETMATERIALIVPROC)load("glGetMaterialiv");
	_glGetPixelMapfv = (PFNGLGETPIXELMAPFVPROC)load("glGetPixelMapfv");
	_glGetPixelMapuiv = (PFNGLGETPIXELMAPUIVPROC)load("glGetPixelMapuiv");
	_glGetPixelMapusv = (PFNGLGETPIXELMAPUSVPROC)load("glGetPixelMapusv");
	_glGetPolygonStipple = (PFNGLGETPOLYGONSTIPPLEPROC)load("glGetPolygonStipple");
	_glGetTexEnvfv = (PFNGLGETTEXENVFVPROC)load("glGetTexEnvfv");
	_glGetTexEnviv = (PFNGLGETTEXENVIVPROC)load("glGetTexEnviv");
	_glGetTexGendv = (PFNGLGETTEXGENDVPROC)load("glGetTexGendv");
	_glGetTexGenfv = (PFNGLGETTEXGENFVPROC)load("glGetTexGenfv");
	_glGetTexGeniv = (PFNGLGETTEXGENIVPROC)load("glGetTexGeniv");
	_glIsList = (PFNGLISLISTPROC)load("glIsList");
	_glFrustum = (PFNGLFRUSTUMPROC)load("glFrustum");
	_glLoadIdentity = (PFNGLLOADIDENTITYPROC)load("glLoadIdentity");
	_glLoadMatrixf = (PFNGLLOADMATRIXFPROC)load("glLoadMatrixf");
	_glLoadMatrixd = (PFNGLLOADMATRIXDPROC)load("glLoadMatrixd");
	_glMatrixMode = (PFNGLMATRIXMODEPROC)load("glMatrixMode");
	_glMultMatrixf = (PFNGLMULTMATRIXFPROC)load("glMultMatrixf");
	_glMultMatrixd = (PFNGLMULTMATRIXDPROC)load("glMultMatrixd");
	_glOrtho = (PFNGLORTHOPROC)load("glOrtho");
	_glPopMatrix = (PFNGLPOPMATRIXPROC)load("glPopMatrix");
	_glPushMatrix = (PFNGLPUSHMATRIXPROC)load("glPushMatrix");
	_glRotated = (PFNGLROTATEDPROC)load("glRotated");
	_glRotatef = (PFNGLROTATEFPROC)load("glRotatef");
	_glScaled = (PFNGLSCALEDPROC)load("glScaled");
	_glScalef = (PFNGLSCALEFPROC)load("glScalef");
	_glTranslated = (PFNGLTRANSLATEDPROC)load("glTranslated");
	_glTranslatef = (PFNGLTRANSLATEFPROC)load("glTranslatef");
}
static void load_GL_VERSION_1_1(loadproc load) {
	if (!_GL_VERSION_1_1) return;
	_glDrawArrays = (PFNGLDRAWARRAYSPROC)load("glDrawArrays");
	_glDrawElements = (PFNGLDRAWELEMENTSPROC)load("glDrawElements");
	_glGetPointerv = (PFNGLGETPOINTERVPROC)load("glGetPointerv");
	_glPolygonOffset = (PFNGLPOLYGONOFFSETPROC)load("glPolygonOffset");
	_glCopyTexImage1D = (PFNGLCOPYTEXIMAGE1DPROC)load("glCopyTexImage1D");
	_glCopyTexImage2D = (PFNGLCOPYTEXIMAGE2DPROC)load("glCopyTexImage2D");
	_glCopyTexSubImage1D = (PFNGLCOPYTEXSUBIMAGE1DPROC)load("glCopyTexSubImage1D");
	_glCopyTexSubImage2D = (PFNGLCOPYTEXSUBIMAGE2DPROC)load("glCopyTexSubImage2D");
	_glTexSubImage1D = (PFNGLTEXSUBIMAGE1DPROC)load("glTexSubImage1D");
	_glTexSubImage2D = (PFNGLTEXSUBIMAGE2DPROC)load("glTexSubImage2D");
	_glBindTexture = (PFNGLBINDTEXTUREPROC)load("glBindTexture");
	_glDeleteTextures = (PFNGLDELETETEXTURESPROC)load("glDeleteTextures");
	_glGenTextures = (PFNGLGENTEXTURESPROC)load("glGenTextures");
	_glIsTexture = (PFNGLISTEXTUREPROC)load("glIsTexture");
	_glArrayElement = (PFNGLARRAYELEMENTPROC)load("glArrayElement");
	_glColorPointer = (PFNGLCOLORPOINTERPROC)load("glColorPointer");
	_glDisableClientState = (PFNGLDISABLECLIENTSTATEPROC)load("glDisableClientState");
	_glEdgeFlagPointer = (PFNGLEDGEFLAGPOINTERPROC)load("glEdgeFlagPointer");
	_glEnableClientState = (PFNGLENABLECLIENTSTATEPROC)load("glEnableClientState");
	_glIndexPointer = (PFNGLINDEXPOINTERPROC)load("glIndexPointer");
	_glInterleavedArrays = (PFNGLINTERLEAVEDARRAYSPROC)load("glInterleavedArrays");
	_glNormalPointer = (PFNGLNORMALPOINTERPROC)load("glNormalPointer");
	_glTexCoordPointer = (PFNGLTEXCOORDPOINTERPROC)load("glTexCoordPointer");
	_glVertexPointer = (PFNGLVERTEXPOINTERPROC)load("glVertexPointer");
	_glAreTexturesResident = (PFNGLARETEXTURESRESIDENTPROC)load("glAreTexturesResident");
	_glPrioritizeTextures = (PFNGLPRIORITIZETEXTURESPROC)load("glPrioritizeTextures");
	_glIndexub = (PFNGLINDEXUBPROC)load("glIndexub");
	_glIndexubv = (PFNGLINDEXUBVPROC)load("glIndexubv");
	_glPopClientAttrib = (PFNGLPOPCLIENTATTRIBPROC)load("glPopClientAttrib");
	_glPushClientAttrib = (PFNGLPUSHCLIENTATTRIBPROC)load("glPushClientAttrib");
}
static void load_GL_VERSION_1_2(loadproc load) {
	if (!_GL_VERSION_1_2) return;
	_glDrawRangeElements = (PFNGLDRAWRANGEELEMENTSPROC)load("glDrawRangeElements");
	_glTexImage3D = (PFNGLTEXIMAGE3DPROC)load("glTexImage3D");
	_glTexSubImage3D = (PFNGLTEXSUBIMAGE3DPROC)load("glTexSubImage3D");
	_glCopyTexSubImage3D = (PFNGLCOPYTEXSUBIMAGE3DPROC)load("glCopyTexSubImage3D");
}
static void load_GL_VERSION_1_3(loadproc load) {
	if (!_GL_VERSION_1_3) return;
	_glActiveTexture = (PFNGLACTIVETEXTUREPROC)load("glActiveTexture");
	_glSampleCoverage = (PFNGLSAMPLECOVERAGEPROC)load("glSampleCoverage");
	_glCompressedTexImage3D = (PFNGLCOMPRESSEDTEXIMAGE3DPROC)load("glCompressedTexImage3D");
	_glCompressedTexImage2D = (PFNGLCOMPRESSEDTEXIMAGE2DPROC)load("glCompressedTexImage2D");
	_glCompressedTexImage1D = (PFNGLCOMPRESSEDTEXIMAGE1DPROC)load("glCompressedTexImage1D");
	_glCompressedTexSubImage3D = (PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)load("glCompressedTexSubImage3D");
	_glCompressedTexSubImage2D = (PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)load("glCompressedTexSubImage2D");
	_glCompressedTexSubImage1D = (PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC)load("glCompressedTexSubImage1D");
	_glGetCompressedTexImage = (PFNGLGETCOMPRESSEDTEXIMAGEPROC)load("glGetCompressedTexImage");
	_glClientActiveTexture = (PFNGLCLIENTACTIVETEXTUREPROC)load("glClientActiveTexture");
	_glMultiTexCoord1d = (PFNGLMULTITEXCOORD1DPROC)load("glMultiTexCoord1d");
	_glMultiTexCoord1dv = (PFNGLMULTITEXCOORD1DVPROC)load("glMultiTexCoord1dv");
	_glMultiTexCoord1f = (PFNGLMULTITEXCOORD1FPROC)load("glMultiTexCoord1f");
	_glMultiTexCoord1fv = (PFNGLMULTITEXCOORD1FVPROC)load("glMultiTexCoord1fv");
	_glMultiTexCoord1i = (PFNGLMULTITEXCOORD1IPROC)load("glMultiTexCoord1i");
	_glMultiTexCoord1iv = (PFNGLMULTITEXCOORD1IVPROC)load("glMultiTexCoord1iv");
	_glMultiTexCoord1s = (PFNGLMULTITEXCOORD1SPROC)load("glMultiTexCoord1s");
	_glMultiTexCoord1sv = (PFNGLMULTITEXCOORD1SVPROC)load("glMultiTexCoord1sv");
	_glMultiTexCoord2d = (PFNGLMULTITEXCOORD2DPROC)load("glMultiTexCoord2d");
	_glMultiTexCoord2dv = (PFNGLMULTITEXCOORD2DVPROC)load("glMultiTexCoord2dv");
	_glMultiTexCoord2f = (PFNGLMULTITEXCOORD2FPROC)load("glMultiTexCoord2f");
	_glMultiTexCoord2fv = (PFNGLMULTITEXCOORD2FVPROC)load("glMultiTexCoord2fv");
	_glMultiTexCoord2i = (PFNGLMULTITEXCOORD2IPROC)load("glMultiTexCoord2i");
	_glMultiTexCoord2iv = (PFNGLMULTITEXCOORD2IVPROC)load("glMultiTexCoord2iv");
	_glMultiTexCoord2s = (PFNGLMULTITEXCOORD2SPROC)load("glMultiTexCoord2s");
	_glMultiTexCoord2sv = (PFNGLMULTITEXCOORD2SVPROC)load("glMultiTexCoord2sv");
	_glMultiTexCoord3d = (PFNGLMULTITEXCOORD3DPROC)load("glMultiTexCoord3d");
	_glMultiTexCoord3dv = (PFNGLMULTITEXCOORD3DVPROC)load("glMultiTexCoord3dv");
	_glMultiTexCoord3f = (PFNGLMULTITEXCOORD3FPROC)load("glMultiTexCoord3f");
	_glMultiTexCoord3fv = (PFNGLMULTITEXCOORD3FVPROC)load("glMultiTexCoord3fv");
	_glMultiTexCoord3i = (PFNGLMULTITEXCOORD3IPROC)load("glMultiTexCoord3i");
	_glMultiTexCoord3iv = (PFNGLMULTITEXCOORD3IVPROC)load("glMultiTexCoord3iv");
	_glMultiTexCoord3s = (PFNGLMULTITEXCOORD3SPROC)load("glMultiTexCoord3s");
	_glMultiTexCoord3sv = (PFNGLMULTITEXCOORD3SVPROC)load("glMultiTexCoord3sv");
	_glMultiTexCoord4d = (PFNGLMULTITEXCOORD4DPROC)load("glMultiTexCoord4d");
	_glMultiTexCoord4dv = (PFNGLMULTITEXCOORD4DVPROC)load("glMultiTexCoord4dv");
	_glMultiTexCoord4f = (PFNGLMULTITEXCOORD4FPROC)load("glMultiTexCoord4f");
	_glMultiTexCoord4fv = (PFNGLMULTITEXCOORD4FVPROC)load("glMultiTexCoord4fv");
	_glMultiTexCoord4i = (PFNGLMULTITEXCOORD4IPROC)load("glMultiTexCoord4i");
	_glMultiTexCoord4iv = (PFNGLMULTITEXCOORD4IVPROC)load("glMultiTexCoord4iv");
	_glMultiTexCoord4s = (PFNGLMULTITEXCOORD4SPROC)load("glMultiTexCoord4s");
	_glMultiTexCoord4sv = (PFNGLMULTITEXCOORD4SVPROC)load("glMultiTexCoord4sv");
	_glLoadTransposeMatrixf = (PFNGLLOADTRANSPOSEMATRIXFPROC)load("glLoadTransposeMatrixf");
	_glLoadTransposeMatrixd = (PFNGLLOADTRANSPOSEMATRIXDPROC)load("glLoadTransposeMatrixd");
	_glMultTransposeMatrixf = (PFNGLMULTTRANSPOSEMATRIXFPROC)load("glMultTransposeMatrixf");
	_glMultTransposeMatrixd = (PFNGLMULTTRANSPOSEMATRIXDPROC)load("glMultTransposeMatrixd");
}
static void load_GL_VERSION_1_4(loadproc load) {
	if (!_GL_VERSION_1_4) return;
	_glBlendFuncSeparate = (PFNGLBLENDFUNCSEPARATEPROC)load("glBlendFuncSeparate");
	_glMultiDrawArrays = (PFNGLMULTIDRAWARRAYSPROC)load("glMultiDrawArrays");
	_glMultiDrawElements = (PFNGLMULTIDRAWELEMENTSPROC)load("glMultiDrawElements");
	_glPointParameterf = (PFNGLPOINTPARAMETERFPROC)load("glPointParameterf");
	_glPointParameterfv = (PFNGLPOINTPARAMETERFVPROC)load("glPointParameterfv");
	_glPointParameteri = (PFNGLPOINTPARAMETERIPROC)load("glPointParameteri");
	_glPointParameteriv = (PFNGLPOINTPARAMETERIVPROC)load("glPointParameteriv");
	_glFogCoordf = (PFNGLFOGCOORDFPROC)load("glFogCoordf");
	_glFogCoordfv = (PFNGLFOGCOORDFVPROC)load("glFogCoordfv");
	_glFogCoordd = (PFNGLFOGCOORDDPROC)load("glFogCoordd");
	_glFogCoorddv = (PFNGLFOGCOORDDVPROC)load("glFogCoorddv");
	_glFogCoordPointer = (PFNGLFOGCOORDPOINTERPROC)load("glFogCoordPointer");
	_glSecondaryColor3b = (PFNGLSECONDARYCOLOR3BPROC)load("glSecondaryColor3b");
	_glSecondaryColor3bv = (PFNGLSECONDARYCOLOR3BVPROC)load("glSecondaryColor3bv");
	_glSecondaryColor3d = (PFNGLSECONDARYCOLOR3DPROC)load("glSecondaryColor3d");
	_glSecondaryColor3dv = (PFNGLSECONDARYCOLOR3DVPROC)load("glSecondaryColor3dv");
	_glSecondaryColor3f = (PFNGLSECONDARYCOLOR3FPROC)load("glSecondaryColor3f");
	_glSecondaryColor3fv = (PFNGLSECONDARYCOLOR3FVPROC)load("glSecondaryColor3fv");
	_glSecondaryColor3i = (PFNGLSECONDARYCOLOR3IPROC)load("glSecondaryColor3i");
	_glSecondaryColor3iv = (PFNGLSECONDARYCOLOR3IVPROC)load("glSecondaryColor3iv");
	_glSecondaryColor3s = (PFNGLSECONDARYCOLOR3SPROC)load("glSecondaryColor3s");
	_glSecondaryColor3sv = (PFNGLSECONDARYCOLOR3SVPROC)load("glSecondaryColor3sv");
	_glSecondaryColor3ub = (PFNGLSECONDARYCOLOR3UBPROC)load("glSecondaryColor3ub");
	_glSecondaryColor3ubv = (PFNGLSECONDARYCOLOR3UBVPROC)load("glSecondaryColor3ubv");
	_glSecondaryColor3ui = (PFNGLSECONDARYCOLOR3UIPROC)load("glSecondaryColor3ui");
	_glSecondaryColor3uiv = (PFNGLSECONDARYCOLOR3UIVPROC)load("glSecondaryColor3uiv");
	_glSecondaryColor3us = (PFNGLSECONDARYCOLOR3USPROC)load("glSecondaryColor3us");
	_glSecondaryColor3usv = (PFNGLSECONDARYCOLOR3USVPROC)load("glSecondaryColor3usv");
	_glSecondaryColorPointer = (PFNGLSECONDARYCOLORPOINTERPROC)load("glSecondaryColorPointer");
	_glWindowPos2d = (PFNGLWINDOWPOS2DPROC)load("glWindowPos2d");
	_glWindowPos2dv = (PFNGLWINDOWPOS2DVPROC)load("glWindowPos2dv");
	_glWindowPos2f = (PFNGLWINDOWPOS2FPROC)load("glWindowPos2f");
	_glWindowPos2fv = (PFNGLWINDOWPOS2FVPROC)load("glWindowPos2fv");
	_glWindowPos2i = (PFNGLWINDOWPOS2IPROC)load("glWindowPos2i");
	_glWindowPos2iv = (PFNGLWINDOWPOS2IVPROC)load("glWindowPos2iv");
	_glWindowPos2s = (PFNGLWINDOWPOS2SPROC)load("glWindowPos2s");
	_glWindowPos2sv = (PFNGLWINDOWPOS2SVPROC)load("glWindowPos2sv");
	_glWindowPos3d = (PFNGLWINDOWPOS3DPROC)load("glWindowPos3d");
	_glWindowPos3dv = (PFNGLWINDOWPOS3DVPROC)load("glWindowPos3dv");
	_glWindowPos3f = (PFNGLWINDOWPOS3FPROC)load("glWindowPos3f");
	_glWindowPos3fv = (PFNGLWINDOWPOS3FVPROC)load("glWindowPos3fv");
	_glWindowPos3i = (PFNGLWINDOWPOS3IPROC)load("glWindowPos3i");
	_glWindowPos3iv = (PFNGLWINDOWPOS3IVPROC)load("glWindowPos3iv");
	_glWindowPos3s = (PFNGLWINDOWPOS3SPROC)load("glWindowPos3s");
	_glWindowPos3sv = (PFNGLWINDOWPOS3SVPROC)load("glWindowPos3sv");
	_glBlendColor = (PFNGLBLENDCOLORPROC)load("glBlendColor");
	_glBlendEquation = (PFNGLBLENDEQUATIONPROC)load("glBlendEquation");
}
static void load_GL_VERSION_1_5(loadproc load) {
	if (!_GL_VERSION_1_5) return;
	_glGenQueries = (PFNGLGENQUERIESPROC)load("glGenQueries");
	_glDeleteQueries = (PFNGLDELETEQUERIESPROC)load("glDeleteQueries");
	_glIsQuery = (PFNGLISQUERYPROC)load("glIsQuery");
	_glBeginQuery = (PFNGLBEGINQUERYPROC)load("glBeginQuery");
	_glEndQuery = (PFNGLENDQUERYPROC)load("glEndQuery");
	_glGetQueryiv = (PFNGLGETQUERYIVPROC)load("glGetQueryiv");
	_glGetQueryObjectiv = (PFNGLGETQUERYOBJECTIVPROC)load("glGetQueryObjectiv");
	_glGetQueryObjectuiv = (PFNGLGETQUERYOBJECTUIVPROC)load("glGetQueryObjectuiv");
	_glBindBuffer = (PFNGLBINDBUFFERPROC)load("glBindBuffer");
	_glDeleteBuffers = (PFNGLDELETEBUFFERSPROC)load("glDeleteBuffers");
	_glGenBuffers = (PFNGLGENBUFFERSPROC)load("glGenBuffers");
	_glIsBuffer = (PFNGLISBUFFERPROC)load("glIsBuffer");
	_glBufferData = (PFNGLBUFFERDATAPROC)load("glBufferData");
	_glBufferSubData = (PFNGLBUFFERSUBDATAPROC)load("glBufferSubData");
	_glGetBufferSubData = (PFNGLGETBUFFERSUBDATAPROC)load("glGetBufferSubData");
	_glMapBuffer = (PFNGLMAPBUFFERPROC)load("glMapBuffer");
	_glUnmapBuffer = (PFNGLUNMAPBUFFERPROC)load("glUnmapBuffer");
	_glGetBufferParameteriv = (PFNGLGETBUFFERPARAMETERIVPROC)load("glGetBufferParameteriv");
	_glGetBufferPointerv = (PFNGLGETBUFFERPOINTERVPROC)load("glGetBufferPointerv");
}
static void load_GL_VERSION_2_0(loadproc load) {
	if (!_GL_VERSION_2_0) return;
	_glBlendEquationSeparate = (PFNGLBLENDEQUATIONSEPARATEPROC)load("glBlendEquationSeparate");
	_glDrawBuffers = (PFNGLDRAWBUFFERSPROC)load("glDrawBuffers");
	_glStencilOpSeparate = (PFNGLSTENCILOPSEPARATEPROC)load("glStencilOpSeparate");
	_glStencilFuncSeparate = (PFNGLSTENCILFUNCSEPARATEPROC)load("glStencilFuncSeparate");
	_glStencilMaskSeparate = (PFNGLSTENCILMASKSEPARATEPROC)load("glStencilMaskSeparate");
	_glAttachShader = (PFNGLATTACHSHADERPROC)load("glAttachShader");
	_glBindAttribLocation = (PFNGLBINDATTRIBLOCATIONPROC)load("glBindAttribLocation");
	_glCompileShader = (PFNGLCOMPILESHADERPROC)load("glCompileShader");
	_glCreateProgram = (PFNGLCREATEPROGRAMPROC)load("glCreateProgram");
	_glCreateShader = (PFNGLCREATESHADERPROC)load("glCreateShader");
	_glDeleteProgram = (PFNGLDELETEPROGRAMPROC)load("glDeleteProgram");
	_glDeleteShader = (PFNGLDELETESHADERPROC)load("glDeleteShader");
	_glDetachShader = (PFNGLDETACHSHADERPROC)load("glDetachShader");
	_glDisableVertexAttribArray = (PFNGLDISABLEVERTEXATTRIBARRAYPROC)load("glDisableVertexAttribArray");
	_glEnableVertexAttribArray = (PFNGLENABLEVERTEXATTRIBARRAYPROC)load("glEnableVertexAttribArray");
	_glGetActiveAttrib = (PFNGLGETACTIVEATTRIBPROC)load("glGetActiveAttrib");
	_glGetActiveUniform = (PFNGLGETACTIVEUNIFORMPROC)load("glGetActiveUniform");
	_glGetAttachedShaders = (PFNGLGETATTACHEDSHADERSPROC)load("glGetAttachedShaders");
	_glGetAttribLocation = (PFNGLGETATTRIBLOCATIONPROC)load("glGetAttribLocation");
	_glGetProgramiv = (PFNGLGETPROGRAMIVPROC)load("glGetProgramiv");
	_glGetProgramInfoLog = (PFNGLGETPROGRAMINFOLOGPROC)load("glGetProgramInfoLog");
	_glGetShaderiv = (PFNGLGETSHADERIVPROC)load("glGetShaderiv");
	_glGetShaderInfoLog = (PFNGLGETSHADERINFOLOGPROC)load("glGetShaderInfoLog");
	_glGetShaderSource = (PFNGLGETSHADERSOURCEPROC)load("glGetShaderSource");
	_glGetUniformLocation = (PFNGLGETUNIFORMLOCATIONPROC)load("glGetUniformLocation");
	_glGetUniformfv = (PFNGLGETUNIFORMFVPROC)load("glGetUniformfv");
	_glGetUniformiv = (PFNGLGETUNIFORMIVPROC)load("glGetUniformiv");
	_glGetVertexAttribdv = (PFNGLGETVERTEXATTRIBDVPROC)load("glGetVertexAttribdv");
	_glGetVertexAttribfv = (PFNGLGETVERTEXATTRIBFVPROC)load("glGetVertexAttribfv");
	_glGetVertexAttribiv = (PFNGLGETVERTEXATTRIBIVPROC)load("glGetVertexAttribiv");
	_glGetVertexAttribPointerv = (PFNGLGETVERTEXATTRIBPOINTERVPROC)load("glGetVertexAttribPointerv");
	_glIsProgram = (PFNGLISPROGRAMPROC)load("glIsProgram");
	_glIsShader = (PFNGLISSHADERPROC)load("glIsShader");
	_glLinkProgram = (PFNGLLINKPROGRAMPROC)load("glLinkProgram");
	_glShaderSource = (PFNGLSHADERSOURCEPROC)load("glShaderSource");
	_glUseProgram = (PFNGLUSEPROGRAMPROC)load("glUseProgram");
	_glUniform1f = (PFNGLUNIFORM1FPROC)load("glUniform1f");
	_glUniform2f = (PFNGLUNIFORM2FPROC)load("glUniform2f");
	_glUniform3f = (PFNGLUNIFORM3FPROC)load("glUniform3f");
	_glUniform4f = (PFNGLUNIFORM4FPROC)load("glUniform4f");
	_glUniform1i = (PFNGLUNIFORM1IPROC)load("glUniform1i");
	_glUniform2i = (PFNGLUNIFORM2IPROC)load("glUniform2i");
	_glUniform3i = (PFNGLUNIFORM3IPROC)load("glUniform3i");
	_glUniform4i = (PFNGLUNIFORM4IPROC)load("glUniform4i");
	_glUniform1fv = (PFNGLUNIFORM1FVPROC)load("glUniform1fv");
	_glUniform2fv = (PFNGLUNIFORM2FVPROC)load("glUniform2fv");
	_glUniform3fv = (PFNGLUNIFORM3FVPROC)load("glUniform3fv");
	_glUniform4fv = (PFNGLUNIFORM4FVPROC)load("glUniform4fv");
	_glUniform1iv = (PFNGLUNIFORM1IVPROC)load("glUniform1iv");
	_glUniform2iv = (PFNGLUNIFORM2IVPROC)load("glUniform2iv");
	_glUniform3iv = (PFNGLUNIFORM3IVPROC)load("glUniform3iv");
	_glUniform4iv = (PFNGLUNIFORM4IVPROC)load("glUniform4iv");
	_glUniformMatrix2fv = (PFNGLUNIFORMMATRIX2FVPROC)load("glUniformMatrix2fv");
	_glUniformMatrix3fv = (PFNGLUNIFORMMATRIX3FVPROC)load("glUniformMatrix3fv");
	_glUniformMatrix4fv = (PFNGLUNIFORMMATRIX4FVPROC)load("glUniformMatrix4fv");
	_glValidateProgram = (PFNGLVALIDATEPROGRAMPROC)load("glValidateProgram");
	_glVertexAttrib1d = (PFNGLVERTEXATTRIB1DPROC)load("glVertexAttrib1d");
	_glVertexAttrib1dv = (PFNGLVERTEXATTRIB1DVPROC)load("glVertexAttrib1dv");
	_glVertexAttrib1f = (PFNGLVERTEXATTRIB1FPROC)load("glVertexAttrib1f");
	_glVertexAttrib1fv = (PFNGLVERTEXATTRIB1FVPROC)load("glVertexAttrib1fv");
	_glVertexAttrib1s = (PFNGLVERTEXATTRIB1SPROC)load("glVertexAttrib1s");
	_glVertexAttrib1sv = (PFNGLVERTEXATTRIB1SVPROC)load("glVertexAttrib1sv");
	_glVertexAttrib2d = (PFNGLVERTEXATTRIB2DPROC)load("glVertexAttrib2d");
	_glVertexAttrib2dv = (PFNGLVERTEXATTRIB2DVPROC)load("glVertexAttrib2dv");
	_glVertexAttrib2f = (PFNGLVERTEXATTRIB2FPROC)load("glVertexAttrib2f");
	_glVertexAttrib2fv = (PFNGLVERTEXATTRIB2FVPROC)load("glVertexAttrib2fv");
	_glVertexAttrib2s = (PFNGLVERTEXATTRIB2SPROC)load("glVertexAttrib2s");
	_glVertexAttrib2sv = (PFNGLVERTEXATTRIB2SVPROC)load("glVertexAttrib2sv");
	_glVertexAttrib3d = (PFNGLVERTEXATTRIB3DPROC)load("glVertexAttrib3d");
	_glVertexAttrib3dv = (PFNGLVERTEXATTRIB3DVPROC)load("glVertexAttrib3dv");
	_glVertexAttrib3f = (PFNGLVERTEXATTRIB3FPROC)load("glVertexAttrib3f");
	_glVertexAttrib3fv = (PFNGLVERTEXATTRIB3FVPROC)load("glVertexAttrib3fv");
	_glVertexAttrib3s = (PFNGLVERTEXATTRIB3SPROC)load("glVertexAttrib3s");
	_glVertexAttrib3sv = (PFNGLVERTEXATTRIB3SVPROC)load("glVertexAttrib3sv");
	_glVertexAttrib4Nbv = (PFNGLVERTEXATTRIB4NBVPROC)load("glVertexAttrib4Nbv");
	_glVertexAttrib4Niv = (PFNGLVERTEXATTRIB4NIVPROC)load("glVertexAttrib4Niv");
	_glVertexAttrib4Nsv = (PFNGLVERTEXATTRIB4NSVPROC)load("glVertexAttrib4Nsv");
	_glVertexAttrib4Nub = (PFNGLVERTEXATTRIB4NUBPROC)load("glVertexAttrib4Nub");
	_glVertexAttrib4Nubv = (PFNGLVERTEXATTRIB4NUBVPROC)load("glVertexAttrib4Nubv");
	_glVertexAttrib4Nuiv = (PFNGLVERTEXATTRIB4NUIVPROC)load("glVertexAttrib4Nuiv");
	_glVertexAttrib4Nusv = (PFNGLVERTEXATTRIB4NUSVPROC)load("glVertexAttrib4Nusv");
	_glVertexAttrib4bv = (PFNGLVERTEXATTRIB4BVPROC)load("glVertexAttrib4bv");
	_glVertexAttrib4d = (PFNGLVERTEXATTRIB4DPROC)load("glVertexAttrib4d");
	_glVertexAttrib4dv = (PFNGLVERTEXATTRIB4DVPROC)load("glVertexAttrib4dv");
	_glVertexAttrib4f = (PFNGLVERTEXATTRIB4FPROC)load("glVertexAttrib4f");
	_glVertexAttrib4fv = (PFNGLVERTEXATTRIB4FVPROC)load("glVertexAttrib4fv");
	_glVertexAttrib4iv = (PFNGLVERTEXATTRIB4IVPROC)load("glVertexAttrib4iv");
	_glVertexAttrib4s = (PFNGLVERTEXATTRIB4SPROC)load("glVertexAttrib4s");
	_glVertexAttrib4sv = (PFNGLVERTEXATTRIB4SVPROC)load("glVertexAttrib4sv");
	_glVertexAttrib4ubv = (PFNGLVERTEXATTRIB4UBVPROC)load("glVertexAttrib4ubv");
	_glVertexAttrib4uiv = (PFNGLVERTEXATTRIB4UIVPROC)load("glVertexAttrib4uiv");
	_glVertexAttrib4usv = (PFNGLVERTEXATTRIB4USVPROC)load("glVertexAttrib4usv");
	_glVertexAttribPointer = (PFNGLVERTEXATTRIBPOINTERPROC)load("glVertexAttribPointer");
}
static void load_GL_VERSION_2_1(loadproc load) {
	if (!_GL_VERSION_2_1) return;
	_glUniformMatrix2x3fv = (PFNGLUNIFORMMATRIX2X3FVPROC)load("glUniformMatrix2x3fv");
	_glUniformMatrix3x2fv = (PFNGLUNIFORMMATRIX3X2FVPROC)load("glUniformMatrix3x2fv");
	_glUniformMatrix2x4fv = (PFNGLUNIFORMMATRIX2X4FVPROC)load("glUniformMatrix2x4fv");
	_glUniformMatrix4x2fv = (PFNGLUNIFORMMATRIX4X2FVPROC)load("glUniformMatrix4x2fv");
	_glUniformMatrix3x4fv = (PFNGLUNIFORMMATRIX3X4FVPROC)load("glUniformMatrix3x4fv");
	_glUniformMatrix4x3fv = (PFNGLUNIFORMMATRIX4X3FVPROC)load("glUniformMatrix4x3fv");
}
static void load_GL_VERSION_3_0(loadproc load) {
	if (!_GL_VERSION_3_0) return;
	_glColorMaski = (PFNGLCOLORMASKIPROC)load("glColorMaski");
	_glGetBooleani_v = (PFNGLGETBOOLEANI_VPROC)load("glGetBooleani_v");
	_glGetIntegeri_v = (PFNGLGETINTEGERI_VPROC)load("glGetIntegeri_v");
	_glEnablei = (PFNGLENABLEIPROC)load("glEnablei");
	_glDisablei = (PFNGLDISABLEIPROC)load("glDisablei");
	_glIsEnabledi = (PFNGLISENABLEDIPROC)load("glIsEnabledi");
	_glBeginTransformFeedback = (PFNGLBEGINTRANSFORMFEEDBACKPROC)load("glBeginTransformFeedback");
	_glEndTransformFeedback = (PFNGLENDTRANSFORMFEEDBACKPROC)load("glEndTransformFeedback");
	_glBindBufferRange = (PFNGLBINDBUFFERRANGEPROC)load("glBindBufferRange");
	_glBindBufferBase = (PFNGLBINDBUFFERBASEPROC)load("glBindBufferBase");
	_glTransformFeedbackVaryings = (PFNGLTRANSFORMFEEDBACKVARYINGSPROC)load("glTransformFeedbackVaryings");
	_glGetTransformFeedbackVarying = (PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)load("glGetTransformFeedbackVarying");
	_glClampColor = (PFNGLCLAMPCOLORPROC)load("glClampColor");
	_glBeginConditionalRender = (PFNGLBEGINCONDITIONALRENDERPROC)load("glBeginConditionalRender");
	_glEndConditionalRender = (PFNGLENDCONDITIONALRENDERPROC)load("glEndConditionalRender");
	_glVertexAttribIPointer = (PFNGLVERTEXATTRIBIPOINTERPROC)load("glVertexAttribIPointer");
	_glGetVertexAttribIiv = (PFNGLGETVERTEXATTRIBIIVPROC)load("glGetVertexAttribIiv");
	_glGetVertexAttribIuiv = (PFNGLGETVERTEXATTRIBIUIVPROC)load("glGetVertexAttribIuiv");
	_glVertexAttribI1i = (PFNGLVERTEXATTRIBI1IPROC)load("glVertexAttribI1i");
	_glVertexAttribI2i = (PFNGLVERTEXATTRIBI2IPROC)load("glVertexAttribI2i");
	_glVertexAttribI3i = (PFNGLVERTEXATTRIBI3IPROC)load("glVertexAttribI3i");
	_glVertexAttribI4i = (PFNGLVERTEXATTRIBI4IPROC)load("glVertexAttribI4i");
	_glVertexAttribI1ui = (PFNGLVERTEXATTRIBI1UIPROC)load("glVertexAttribI1ui");
	_glVertexAttribI2ui = (PFNGLVERTEXATTRIBI2UIPROC)load("glVertexAttribI2ui");
	_glVertexAttribI3ui = (PFNGLVERTEXATTRIBI3UIPROC)load("glVertexAttribI3ui");
	_glVertexAttribI4ui = (PFNGLVERTEXATTRIBI4UIPROC)load("glVertexAttribI4ui");
	_glVertexAttribI1iv = (PFNGLVERTEXATTRIBI1IVPROC)load("glVertexAttribI1iv");
	_glVertexAttribI2iv = (PFNGLVERTEXATTRIBI2IVPROC)load("glVertexAttribI2iv");
	_glVertexAttribI3iv = (PFNGLVERTEXATTRIBI3IVPROC)load("glVertexAttribI3iv");
	_glVertexAttribI4iv = (PFNGLVERTEXATTRIBI4IVPROC)load("glVertexAttribI4iv");
	_glVertexAttribI1uiv = (PFNGLVERTEXATTRIBI1UIVPROC)load("glVertexAttribI1uiv");
	_glVertexAttribI2uiv = (PFNGLVERTEXATTRIBI2UIVPROC)load("glVertexAttribI2uiv");
	_glVertexAttribI3uiv = (PFNGLVERTEXATTRIBI3UIVPROC)load("glVertexAttribI3uiv");
	_glVertexAttribI4uiv = (PFNGLVERTEXATTRIBI4UIVPROC)load("glVertexAttribI4uiv");
	_glVertexAttribI4bv = (PFNGLVERTEXATTRIBI4BVPROC)load("glVertexAttribI4bv");
	_glVertexAttribI4sv = (PFNGLVERTEXATTRIBI4SVPROC)load("glVertexAttribI4sv");
	_glVertexAttribI4ubv = (PFNGLVERTEXATTRIBI4UBVPROC)load("glVertexAttribI4ubv");
	_glVertexAttribI4usv = (PFNGLVERTEXATTRIBI4USVPROC)load("glVertexAttribI4usv");
	_glGetUniformuiv = (PFNGLGETUNIFORMUIVPROC)load("glGetUniformuiv");
	_glBindFragDataLocation = (PFNGLBINDFRAGDATALOCATIONPROC)load("glBindFragDataLocation");
	_glGetFragDataLocation = (PFNGLGETFRAGDATALOCATIONPROC)load("glGetFragDataLocation");
	_glUniform1ui = (PFNGLUNIFORM1UIPROC)load("glUniform1ui");
	_glUniform2ui = (PFNGLUNIFORM2UIPROC)load("glUniform2ui");
	_glUniform3ui = (PFNGLUNIFORM3UIPROC)load("glUniform3ui");
	_glUniform4ui = (PFNGLUNIFORM4UIPROC)load("glUniform4ui");
	_glUniform1uiv = (PFNGLUNIFORM1UIVPROC)load("glUniform1uiv");
	_glUniform2uiv = (PFNGLUNIFORM2UIVPROC)load("glUniform2uiv");
	_glUniform3uiv = (PFNGLUNIFORM3UIVPROC)load("glUniform3uiv");
	_glUniform4uiv = (PFNGLUNIFORM4UIVPROC)load("glUniform4uiv");
	_glTexParameterIiv = (PFNGLTEXPARAMETERIIVPROC)load("glTexParameterIiv");
	_glTexParameterIuiv = (PFNGLTEXPARAMETERIUIVPROC)load("glTexParameterIuiv");
	_glGetTexParameterIiv = (PFNGLGETTEXPARAMETERIIVPROC)load("glGetTexParameterIiv");
	_glGetTexParameterIuiv = (PFNGLGETTEXPARAMETERIUIVPROC)load("glGetTexParameterIuiv");
	_glClearBufferiv = (PFNGLCLEARBUFFERIVPROC)load("glClearBufferiv");
	_glClearBufferuiv = (PFNGLCLEARBUFFERUIVPROC)load("glClearBufferuiv");
	_glClearBufferfv = (PFNGLCLEARBUFFERFVPROC)load("glClearBufferfv");
	_glClearBufferfi = (PFNGLCLEARBUFFERFIPROC)load("glClearBufferfi");
	_glGetStringi = (PFNGLGETSTRINGIPROC)load("glGetStringi");
	_glIsRenderbuffer = (PFNGLISRENDERBUFFERPROC)load("glIsRenderbuffer");
	_glBindRenderbuffer = (PFNGLBINDRENDERBUFFERPROC)load("glBindRenderbuffer");
	_glDeleteRenderbuffers = (PFNGLDELETERENDERBUFFERSPROC)load("glDeleteRenderbuffers");
	_glGenRenderbuffers = (PFNGLGENRENDERBUFFERSPROC)load("glGenRenderbuffers");
	_glRenderbufferStorage = (PFNGLRENDERBUFFERSTORAGEPROC)load("glRenderbufferStorage");
	_glGetRenderbufferParameteriv = (PFNGLGETRENDERBUFFERPARAMETERIVPROC)load("glGetRenderbufferParameteriv");
	_glIsFramebuffer = (PFNGLISFRAMEBUFFERPROC)load("glIsFramebuffer");
	_glBindFramebuffer = (PFNGLBINDFRAMEBUFFERPROC)load("glBindFramebuffer");
	_glDeleteFramebuffers = (PFNGLDELETEFRAMEBUFFERSPROC)load("glDeleteFramebuffers");
	_glGenFramebuffers = (PFNGLGENFRAMEBUFFERSPROC)load("glGenFramebuffers");
	_glCheckFramebufferStatus = (PFNGLCHECKFRAMEBUFFERSTATUSPROC)load("glCheckFramebufferStatus");
	_glFramebufferTexture1D = (PFNGLFRAMEBUFFERTEXTURE1DPROC)load("glFramebufferTexture1D");
	_glFramebufferTexture2D = (PFNGLFRAMEBUFFERTEXTURE2DPROC)load("glFramebufferTexture2D");
	_glFramebufferTexture3D = (PFNGLFRAMEBUFFERTEXTURE3DPROC)load("glFramebufferTexture3D");
	_glFramebufferRenderbuffer = (PFNGLFRAMEBUFFERRENDERBUFFERPROC)load("glFramebufferRenderbuffer");
	_glGetFramebufferAttachmentParameteriv = (PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)load("glGetFramebufferAttachmentParameteriv");
	_glGenerateMipmap = (PFNGLGENERATEMIPMAPPROC)load("glGenerateMipmap");
	_glBlitFramebuffer = (PFNGLBLITFRAMEBUFFERPROC)load("glBlitFramebuffer");
	_glRenderbufferStorageMultisample = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)load("glRenderbufferStorageMultisample");
	_glFramebufferTextureLayer = (PFNGLFRAMEBUFFERTEXTURELAYERPROC)load("glFramebufferTextureLayer");
	_glMapBufferRange = (PFNGLMAPBUFFERRANGEPROC)load("glMapBufferRange");
	_glFlushMappedBufferRange = (PFNGLFLUSHMAPPEDBUFFERRANGEPROC)load("glFlushMappedBufferRange");
	_glBindVertexArray = (PFNGLBINDVERTEXARRAYPROC)load("glBindVertexArray");
	_glDeleteVertexArrays = (PFNGLDELETEVERTEXARRAYSPROC)load("glDeleteVertexArrays");
	_glGenVertexArrays = (PFNGLGENVERTEXARRAYSPROC)load("glGenVertexArrays");
	_glIsVertexArray = (PFNGLISVERTEXARRAYPROC)load("glIsVertexArray");
}
static void load_GL_VERSION_3_1(loadproc load) {
	if (!_GL_VERSION_3_1) return;
	_glDrawArraysInstanced = (PFNGLDRAWARRAYSINSTANCEDPROC)load("glDrawArraysInstanced");
	_glDrawElementsInstanced = (PFNGLDRAWELEMENTSINSTANCEDPROC)load("glDrawElementsInstanced");
	_glTexBuffer = (PFNGLTEXBUFFERPROC)load("glTexBuffer");
	_glPrimitiveRestartIndex = (PFNGLPRIMITIVERESTARTINDEXPROC)load("glPrimitiveRestartIndex");
	_glCopyBufferSubData = (PFNGLCOPYBUFFERSUBDATAPROC)load("glCopyBufferSubData");
	_glGetUniformIndices = (PFNGLGETUNIFORMINDICESPROC)load("glGetUniformIndices");
	_glGetActiveUniformsiv = (PFNGLGETACTIVEUNIFORMSIVPROC)load("glGetActiveUniformsiv");
	_glGetActiveUniformName = (PFNGLGETACTIVEUNIFORMNAMEPROC)load("glGetActiveUniformName");
	_glGetUniformBlockIndex = (PFNGLGETUNIFORMBLOCKINDEXPROC)load("glGetUniformBlockIndex");
	_glGetActiveUniformBlockiv = (PFNGLGETACTIVEUNIFORMBLOCKIVPROC)load("glGetActiveUniformBlockiv");
	_glGetActiveUniformBlockName = (PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)load("glGetActiveUniformBlockName");
	_glUniformBlockBinding = (PFNGLUNIFORMBLOCKBINDINGPROC)load("glUniformBlockBinding");
	_glBindBufferRange = (PFNGLBINDBUFFERRANGEPROC)load("glBindBufferRange");
	_glBindBufferBase = (PFNGLBINDBUFFERBASEPROC)load("glBindBufferBase");
	_glGetIntegeri_v = (PFNGLGETINTEGERI_VPROC)load("glGetIntegeri_v");
}
static void load_GL_VERSION_3_2(loadproc load) {
	if (!_GL_VERSION_3_2) return;
	_glDrawElementsBaseVertex = (PFNGLDRAWELEMENTSBASEVERTEXPROC)load("glDrawElementsBaseVertex");
	_glDrawRangeElementsBaseVertex = (PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)load("glDrawRangeElementsBaseVertex");
	_glDrawElementsInstancedBaseVertex = (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)load("glDrawElementsInstancedBaseVertex");
	_glMultiDrawElementsBaseVertex = (PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)load("glMultiDrawElementsBaseVertex");
	_glProvokingVertex = (PFNGLPROVOKINGVERTEXPROC)load("glProvokingVertex");
	_glFenceSync = (PFNGLFENCESYNCPROC)load("glFenceSync");
	_glIsSync = (PFNGLISSYNCPROC)load("glIsSync");
	_glDeleteSync = (PFNGLDELETESYNCPROC)load("glDeleteSync");
	_glClientWaitSync = (PFNGLCLIENTWAITSYNCPROC)load("glClientWaitSync");
	_glWaitSync = (PFNGLWAITSYNCPROC)load("glWaitSync");
	_glGetInteger64v = (PFNGLGETINTEGER64VPROC)load("glGetInteger64v");
	_glGetSynciv = (PFNGLGETSYNCIVPROC)load("glGetSynciv");
	_glGetInteger64i_v = (PFNGLGETINTEGER64I_VPROC)load("glGetInteger64i_v");
	_glGetBufferParameteri64v = (PFNGLGETBUFFERPARAMETERI64VPROC)load("glGetBufferParameteri64v");
	_glFramebufferTexture = (PFNGLFRAMEBUFFERTEXTUREPROC)load("glFramebufferTexture");
	_glTexImage2DMultisample = (PFNGLTEXIMAGE2DMULTISAMPLEPROC)load("glTexImage2DMultisample");
	_glTexImage3DMultisample = (PFNGLTEXIMAGE3DMULTISAMPLEPROC)load("glTexImage3DMultisample");
	_glGetMultisamplefv = (PFNGLGETMULTISAMPLEFVPROC)load("glGetMultisamplefv");
	_glSampleMaski = (PFNGLSAMPLEMASKIPROC)load("glSampleMaski");
}
static void load_GL_VERSION_3_3(loadproc load) {
	if (!_GL_VERSION_3_3) return;
	_glBindFragDataLocationIndexed = (PFNGLBINDFRAGDATALOCATIONINDEXEDPROC)load("glBindFragDataLocationIndexed");
	_glGetFragDataIndex = (PFNGLGETFRAGDATAINDEXPROC)load("glGetFragDataIndex");
	_glGenSamplers = (PFNGLGENSAMPLERSPROC)load("glGenSamplers");
	_glDeleteSamplers = (PFNGLDELETESAMPLERSPROC)load("glDeleteSamplers");
	_glIsSampler = (PFNGLISSAMPLERPROC)load("glIsSampler");
	_glBindSampler = (PFNGLBINDSAMPLERPROC)load("glBindSampler");
	_glSamplerParameteri = (PFNGLSAMPLERPARAMETERIPROC)load("glSamplerParameteri");
	_glSamplerParameteriv = (PFNGLSAMPLERPARAMETERIVPROC)load("glSamplerParameteriv");
	_glSamplerParameterf = (PFNGLSAMPLERPARAMETERFPROC)load("glSamplerParameterf");
	_glSamplerParameterfv = (PFNGLSAMPLERPARAMETERFVPROC)load("glSamplerParameterfv");
	_glSamplerParameterIiv = (PFNGLSAMPLERPARAMETERIIVPROC)load("glSamplerParameterIiv");
	_glSamplerParameterIuiv = (PFNGLSAMPLERPARAMETERIUIVPROC)load("glSamplerParameterIuiv");
	_glGetSamplerParameteriv = (PFNGLGETSAMPLERPARAMETERIVPROC)load("glGetSamplerParameteriv");
	_glGetSamplerParameterIiv = (PFNGLGETSAMPLERPARAMETERIIVPROC)load("glGetSamplerParameterIiv");
	_glGetSamplerParameterfv = (PFNGLGETSAMPLERPARAMETERFVPROC)load("glGetSamplerParameterfv");
	_glGetSamplerParameterIuiv = (PFNGLGETSAMPLERPARAMETERIUIVPROC)load("glGetSamplerParameterIuiv");
	_glQueryCounter = (PFNGLQUERYCOUNTERPROC)load("glQueryCounter");
	_glGetQueryObjecti64v = (PFNGLGETQUERYOBJECTI64VPROC)load("glGetQueryObjecti64v");
	_glGetQueryObjectui64v = (PFNGLGETQUERYOBJECTUI64VPROC)load("glGetQueryObjectui64v");
	_glVertexAttribDivisor = (PFNGLVERTEXATTRIBDIVISORPROC)load("glVertexAttribDivisor");
	_glVertexAttribP1ui = (PFNGLVERTEXATTRIBP1UIPROC)load("glVertexAttribP1ui");
	_glVertexAttribP1uiv = (PFNGLVERTEXATTRIBP1UIVPROC)load("glVertexAttribP1uiv");
	_glVertexAttribP2ui = (PFNGLVERTEXATTRIBP2UIPROC)load("glVertexAttribP2ui");
	_glVertexAttribP2uiv = (PFNGLVERTEXATTRIBP2UIVPROC)load("glVertexAttribP2uiv");
	_glVertexAttribP3ui = (PFNGLVERTEXATTRIBP3UIPROC)load("glVertexAttribP3ui");
	_glVertexAttribP3uiv = (PFNGLVERTEXATTRIBP3UIVPROC)load("glVertexAttribP3uiv");
	_glVertexAttribP4ui = (PFNGLVERTEXATTRIBP4UIPROC)load("glVertexAttribP4ui");
	_glVertexAttribP4uiv = (PFNGLVERTEXATTRIBP4UIVPROC)load("glVertexAttribP4uiv");
	_glVertexP2ui = (PFNGLVERTEXP2UIPROC)load("glVertexP2ui");
	_glVertexP2uiv = (PFNGLVERTEXP2UIVPROC)load("glVertexP2uiv");
	_glVertexP3ui = (PFNGLVERTEXP3UIPROC)load("glVertexP3ui");
	_glVertexP3uiv = (PFNGLVERTEXP3UIVPROC)load("glVertexP3uiv");
	_glVertexP4ui = (PFNGLVERTEXP4UIPROC)load("glVertexP4ui");
	_glVertexP4uiv = (PFNGLVERTEXP4UIVPROC)load("glVertexP4uiv");
	_glTexCoordP1ui = (PFNGLTEXCOORDP1UIPROC)load("glTexCoordP1ui");
	_glTexCoordP1uiv = (PFNGLTEXCOORDP1UIVPROC)load("glTexCoordP1uiv");
	_glTexCoordP2ui = (PFNGLTEXCOORDP2UIPROC)load("glTexCoordP2ui");
	_glTexCoordP2uiv = (PFNGLTEXCOORDP2UIVPROC)load("glTexCoordP2uiv");
	_glTexCoordP3ui = (PFNGLTEXCOORDP3UIPROC)load("glTexCoordP3ui");
	_glTexCoordP3uiv = (PFNGLTEXCOORDP3UIVPROC)load("glTexCoordP3uiv");
	_glTexCoordP4ui = (PFNGLTEXCOORDP4UIPROC)load("glTexCoordP4ui");
	_glTexCoordP4uiv = (PFNGLTEXCOORDP4UIVPROC)load("glTexCoordP4uiv");
	_glMultiTexCoordP1ui = (PFNGLMULTITEXCOORDP1UIPROC)load("glMultiTexCoordP1ui");
	_glMultiTexCoordP1uiv = (PFNGLMULTITEXCOORDP1UIVPROC)load("glMultiTexCoordP1uiv");
	_glMultiTexCoordP2ui = (PFNGLMULTITEXCOORDP2UIPROC)load("glMultiTexCoordP2ui");
	_glMultiTexCoordP2uiv = (PFNGLMULTITEXCOORDP2UIVPROC)load("glMultiTexCoordP2uiv");
	_glMultiTexCoordP3ui = (PFNGLMULTITEXCOORDP3UIPROC)load("glMultiTexCoordP3ui");
	_glMultiTexCoordP3uiv = (PFNGLMULTITEXCOORDP3UIVPROC)load("glMultiTexCoordP3uiv");
	_glMultiTexCoordP4ui = (PFNGLMULTITEXCOORDP4UIPROC)load("glMultiTexCoordP4ui");
	_glMultiTexCoordP4uiv = (PFNGLMULTITEXCOORDP4UIVPROC)load("glMultiTexCoordP4uiv");
	_glNormalP3ui = (PFNGLNORMALP3UIPROC)load("glNormalP3ui");
	_glNormalP3uiv = (PFNGLNORMALP3UIVPROC)load("glNormalP3uiv");
	_glColorP3ui = (PFNGLCOLORP3UIPROC)load("glColorP3ui");
	_glColorP3uiv = (PFNGLCOLORP3UIVPROC)load("glColorP3uiv");
	_glColorP4ui = (PFNGLCOLORP4UIPROC)load("glColorP4ui");
	_glColorP4uiv = (PFNGLCOLORP4UIVPROC)load("glColorP4uiv");
	_glSecondaryColorP3ui = (PFNGLSECONDARYCOLORP3UIPROC)load("glSecondaryColorP3ui");
	_glSecondaryColorP3uiv = (PFNGLSECONDARYCOLORP3UIVPROC)load("glSecondaryColorP3uiv");
}
static void load_GL_VERSION_4_0(loadproc load) {
	if (!_GL_VERSION_4_0) return;
	_glMinSampleShading = (PFNGLMINSAMPLESHADINGPROC)load("glMinSampleShading");
	_glBlendEquationi = (PFNGLBLENDEQUATIONIPROC)load("glBlendEquationi");
	_glBlendEquationSeparatei = (PFNGLBLENDEQUATIONSEPARATEIPROC)load("glBlendEquationSeparatei");
	_glBlendFunci = (PFNGLBLENDFUNCIPROC)load("glBlendFunci");
	_glBlendFuncSeparatei = (PFNGLBLENDFUNCSEPARATEIPROC)load("glBlendFuncSeparatei");
	_glDrawArraysIndirect = (PFNGLDRAWARRAYSINDIRECTPROC)load("glDrawArraysIndirect");
	_glDrawElementsIndirect = (PFNGLDRAWELEMENTSINDIRECTPROC)load("glDrawElementsIndirect");
	_glUniform1d = (PFNGLUNIFORM1DPROC)load("glUniform1d");
	_glUniform2d = (PFNGLUNIFORM2DPROC)load("glUniform2d");
	_glUniform3d = (PFNGLUNIFORM3DPROC)load("glUniform3d");
	_glUniform4d = (PFNGLUNIFORM4DPROC)load("glUniform4d");
	_glUniform1dv = (PFNGLUNIFORM1DVPROC)load("glUniform1dv");
	_glUniform2dv = (PFNGLUNIFORM2DVPROC)load("glUniform2dv");
	_glUniform3dv = (PFNGLUNIFORM3DVPROC)load("glUniform3dv");
	_glUniform4dv = (PFNGLUNIFORM4DVPROC)load("glUniform4dv");
	_glUniformMatrix2dv = (PFNGLUNIFORMMATRIX2DVPROC)load("glUniformMatrix2dv");
	_glUniformMatrix3dv = (PFNGLUNIFORMMATRIX3DVPROC)load("glUniformMatrix3dv");
	_glUniformMatrix4dv = (PFNGLUNIFORMMATRIX4DVPROC)load("glUniformMatrix4dv");
	_glUniformMatrix2x3dv = (PFNGLUNIFORMMATRIX2X3DVPROC)load("glUniformMatrix2x3dv");
	_glUniformMatrix2x4dv = (PFNGLUNIFORMMATRIX2X4DVPROC)load("glUniformMatrix2x4dv");
	_glUniformMatrix3x2dv = (PFNGLUNIFORMMATRIX3X2DVPROC)load("glUniformMatrix3x2dv");
	_glUniformMatrix3x4dv = (PFNGLUNIFORMMATRIX3X4DVPROC)load("glUniformMatrix3x4dv");
	_glUniformMatrix4x2dv = (PFNGLUNIFORMMATRIX4X2DVPROC)load("glUniformMatrix4x2dv");
	_glUniformMatrix4x3dv = (PFNGLUNIFORMMATRIX4X3DVPROC)load("glUniformMatrix4x3dv");
	_glGetUniformdv = (PFNGLGETUNIFORMDVPROC)load("glGetUniformdv");
	_glGetSubroutineUniformLocation = (PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC)load("glGetSubroutineUniformLocation");
	_glGetSubroutineIndex = (PFNGLGETSUBROUTINEINDEXPROC)load("glGetSubroutineIndex");
	_glGetActiveSubroutineUniformiv = (PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC)load("glGetActiveSubroutineUniformiv");
	_glGetActiveSubroutineUniformName = (PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC)load("glGetActiveSubroutineUniformName");
	_glGetActiveSubroutineName = (PFNGLGETACTIVESUBROUTINENAMEPROC)load("glGetActiveSubroutineName");
	_glUniformSubroutinesuiv = (PFNGLUNIFORMSUBROUTINESUIVPROC)load("glUniformSubroutinesuiv");
	_glGetUniformSubroutineuiv = (PFNGLGETUNIFORMSUBROUTINEUIVPROC)load("glGetUniformSubroutineuiv");
	_glGetProgramStageiv = (PFNGLGETPROGRAMSTAGEIVPROC)load("glGetProgramStageiv");
	_glPatchParameteri = (PFNGLPATCHPARAMETERIPROC)load("glPatchParameteri");
	_glPatchParameterfv = (PFNGLPATCHPARAMETERFVPROC)load("glPatchParameterfv");
	_glBindTransformFeedback = (PFNGLBINDTRANSFORMFEEDBACKPROC)load("glBindTransformFeedback");
	_glDeleteTransformFeedbacks = (PFNGLDELETETRANSFORMFEEDBACKSPROC)load("glDeleteTransformFeedbacks");
	_glGenTransformFeedbacks = (PFNGLGENTRANSFORMFEEDBACKSPROC)load("glGenTransformFeedbacks");
	_glIsTransformFeedback = (PFNGLISTRANSFORMFEEDBACKPROC)load("glIsTransformFeedback");
	_glPauseTransformFeedback = (PFNGLPAUSETRANSFORMFEEDBACKPROC)load("glPauseTransformFeedback");
	_glResumeTransformFeedback = (PFNGLRESUMETRANSFORMFEEDBACKPROC)load("glResumeTransformFeedback");
	_glDrawTransformFeedback = (PFNGLDRAWTRANSFORMFEEDBACKPROC)load("glDrawTransformFeedback");
	_glDrawTransformFeedbackStream = (PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC)load("glDrawTransformFeedbackStream");
	_glBeginQueryIndexed = (PFNGLBEGINQUERYINDEXEDPROC)load("glBeginQueryIndexed");
	_glEndQueryIndexed = (PFNGLENDQUERYINDEXEDPROC)load("glEndQueryIndexed");
	_glGetQueryIndexediv = (PFNGLGETQUERYINDEXEDIVPROC)load("glGetQueryIndexediv");
}
static void load_GL_VERSION_4_1(loadproc load) {
	if (!_GL_VERSION_4_1) return;
	_glReleaseShaderCompiler = (PFNGLRELEASESHADERCOMPILERPROC)load("glReleaseShaderCompiler");
	_glShaderBinary = (PFNGLSHADERBINARYPROC)load("glShaderBinary");
	_glGetShaderPrecisionFormat = (PFNGLGETSHADERPRECISIONFORMATPROC)load("glGetShaderPrecisionFormat");
	_glDepthRangef = (PFNGLDEPTHRANGEFPROC)load("glDepthRangef");
	_glClearDepthf = (PFNGLCLEARDEPTHFPROC)load("glClearDepthf");
	_glGetProgramBinary = (PFNGLGETPROGRAMBINARYPROC)load("glGetProgramBinary");
	_glProgramBinary = (PFNGLPROGRAMBINARYPROC)load("glProgramBinary");
	_glProgramParameteri = (PFNGLPROGRAMPARAMETERIPROC)load("glProgramParameteri");
	_glUseProgramStages = (PFNGLUSEPROGRAMSTAGESPROC)load("glUseProgramStages");
	_glActiveShaderProgram = (PFNGLACTIVESHADERPROGRAMPROC)load("glActiveShaderProgram");
	_glCreateShaderProgramv = (PFNGLCREATESHADERPROGRAMVPROC)load("glCreateShaderProgramv");
	_glBindProgramPipeline = (PFNGLBINDPROGRAMPIPELINEPROC)load("glBindProgramPipeline");
	_glDeleteProgramPipelines = (PFNGLDELETEPROGRAMPIPELINESPROC)load("glDeleteProgramPipelines");
	_glGenProgramPipelines = (PFNGLGENPROGRAMPIPELINESPROC)load("glGenProgramPipelines");
	_glIsProgramPipeline = (PFNGLISPROGRAMPIPELINEPROC)load("glIsProgramPipeline");
	_glGetProgramPipelineiv = (PFNGLGETPROGRAMPIPELINEIVPROC)load("glGetProgramPipelineiv");
	_glProgramParameteri = (PFNGLPROGRAMPARAMETERIPROC)load("glProgramParameteri");
	_glProgramUniform1i = (PFNGLPROGRAMUNIFORM1IPROC)load("glProgramUniform1i");
	_glProgramUniform1iv = (PFNGLPROGRAMUNIFORM1IVPROC)load("glProgramUniform1iv");
	_glProgramUniform1f = (PFNGLPROGRAMUNIFORM1FPROC)load("glProgramUniform1f");
	_glProgramUniform1fv = (PFNGLPROGRAMUNIFORM1FVPROC)load("glProgramUniform1fv");
	_glProgramUniform1d = (PFNGLPROGRAMUNIFORM1DPROC)load("glProgramUniform1d");
	_glProgramUniform1dv = (PFNGLPROGRAMUNIFORM1DVPROC)load("glProgramUniform1dv");
	_glProgramUniform1ui = (PFNGLPROGRAMUNIFORM1UIPROC)load("glProgramUniform1ui");
	_glProgramUniform1uiv = (PFNGLPROGRAMUNIFORM1UIVPROC)load("glProgramUniform1uiv");
	_glProgramUniform2i = (PFNGLPROGRAMUNIFORM2IPROC)load("glProgramUniform2i");
	_glProgramUniform2iv = (PFNGLPROGRAMUNIFORM2IVPROC)load("glProgramUniform2iv");
	_glProgramUniform2f = (PFNGLPROGRAMUNIFORM2FPROC)load("glProgramUniform2f");
	_glProgramUniform2fv = (PFNGLPROGRAMUNIFORM2FVPROC)load("glProgramUniform2fv");
	_glProgramUniform2d = (PFNGLPROGRAMUNIFORM2DPROC)load("glProgramUniform2d");
	_glProgramUniform2dv = (PFNGLPROGRAMUNIFORM2DVPROC)load("glProgramUniform2dv");
	_glProgramUniform2ui = (PFNGLPROGRAMUNIFORM2UIPROC)load("glProgramUniform2ui");
	_glProgramUniform2uiv = (PFNGLPROGRAMUNIFORM2UIVPROC)load("glProgramUniform2uiv");
	_glProgramUniform3i = (PFNGLPROGRAMUNIFORM3IPROC)load("glProgramUniform3i");
	_glProgramUniform3iv = (PFNGLPROGRAMUNIFORM3IVPROC)load("glProgramUniform3iv");
	_glProgramUniform3f = (PFNGLPROGRAMUNIFORM3FPROC)load("glProgramUniform3f");
	_glProgramUniform3fv = (PFNGLPROGRAMUNIFORM3FVPROC)load("glProgramUniform3fv");
	_glProgramUniform3d = (PFNGLPROGRAMUNIFORM3DPROC)load("glProgramUniform3d");
	_glProgramUniform3dv = (PFNGLPROGRAMUNIFORM3DVPROC)load("glProgramUniform3dv");
	_glProgramUniform3ui = (PFNGLPROGRAMUNIFORM3UIPROC)load("glProgramUniform3ui");
	_glProgramUniform3uiv = (PFNGLPROGRAMUNIFORM3UIVPROC)load("glProgramUniform3uiv");
	_glProgramUniform4i = (PFNGLPROGRAMUNIFORM4IPROC)load("glProgramUniform4i");
	_glProgramUniform4iv = (PFNGLPROGRAMUNIFORM4IVPROC)load("glProgramUniform4iv");
	_glProgramUniform4f = (PFNGLPROGRAMUNIFORM4FPROC)load("glProgramUniform4f");
	_glProgramUniform4fv = (PFNGLPROGRAMUNIFORM4FVPROC)load("glProgramUniform4fv");
	_glProgramUniform4d = (PFNGLPROGRAMUNIFORM4DPROC)load("glProgramUniform4d");
	_glProgramUniform4dv = (PFNGLPROGRAMUNIFORM4DVPROC)load("glProgramUniform4dv");
	_glProgramUniform4ui = (PFNGLPROGRAMUNIFORM4UIPROC)load("glProgramUniform4ui");
	_glProgramUniform4uiv = (PFNGLPROGRAMUNIFORM4UIVPROC)load("glProgramUniform4uiv");
	_glProgramUniformMatrix2fv = (PFNGLPROGRAMUNIFORMMATRIX2FVPROC)load("glProgramUniformMatrix2fv");
	_glProgramUniformMatrix3fv = (PFNGLPROGRAMUNIFORMMATRIX3FVPROC)load("glProgramUniformMatrix3fv");
	_glProgramUniformMatrix4fv = (PFNGLPROGRAMUNIFORMMATRIX4FVPROC)load("glProgramUniformMatrix4fv");
	_glProgramUniformMatrix2dv = (PFNGLPROGRAMUNIFORMMATRIX2DVPROC)load("glProgramUniformMatrix2dv");
	_glProgramUniformMatrix3dv = (PFNGLPROGRAMUNIFORMMATRIX3DVPROC)load("glProgramUniformMatrix3dv");
	_glProgramUniformMatrix4dv = (PFNGLPROGRAMUNIFORMMATRIX4DVPROC)load("glProgramUniformMatrix4dv");
	_glProgramUniformMatrix2x3fv = (PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC)load("glProgramUniformMatrix2x3fv");
	_glProgramUniformMatrix3x2fv = (PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC)load("glProgramUniformMatrix3x2fv");
	_glProgramUniformMatrix2x4fv = (PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC)load("glProgramUniformMatrix2x4fv");
	_glProgramUniformMatrix4x2fv = (PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC)load("glProgramUniformMatrix4x2fv");
	_glProgramUniformMatrix3x4fv = (PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC)load("glProgramUniformMatrix3x4fv");
	_glProgramUniformMatrix4x3fv = (PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC)load("glProgramUniformMatrix4x3fv");
	_glProgramUniformMatrix2x3dv = (PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC)load("glProgramUniformMatrix2x3dv");
	_glProgramUniformMatrix3x2dv = (PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC)load("glProgramUniformMatrix3x2dv");
	_glProgramUniformMatrix2x4dv = (PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC)load("glProgramUniformMatrix2x4dv");
	_glProgramUniformMatrix4x2dv = (PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC)load("glProgramUniformMatrix4x2dv");
	_glProgramUniformMatrix3x4dv = (PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC)load("glProgramUniformMatrix3x4dv");
	_glProgramUniformMatrix4x3dv = (PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC)load("glProgramUniformMatrix4x3dv");
	_glValidateProgramPipeline = (PFNGLVALIDATEPROGRAMPIPELINEPROC)load("glValidateProgramPipeline");
	_glGetProgramPipelineInfoLog = (PFNGLGETPROGRAMPIPELINEINFOLOGPROC)load("glGetProgramPipelineInfoLog");
	_glVertexAttribL1d = (PFNGLVERTEXATTRIBL1DPROC)load("glVertexAttribL1d");
	_glVertexAttribL2d = (PFNGLVERTEXATTRIBL2DPROC)load("glVertexAttribL2d");
	_glVertexAttribL3d = (PFNGLVERTEXATTRIBL3DPROC)load("glVertexAttribL3d");
	_glVertexAttribL4d = (PFNGLVERTEXATTRIBL4DPROC)load("glVertexAttribL4d");
	_glVertexAttribL1dv = (PFNGLVERTEXATTRIBL1DVPROC)load("glVertexAttribL1dv");
	_glVertexAttribL2dv = (PFNGLVERTEXATTRIBL2DVPROC)load("glVertexAttribL2dv");
	_glVertexAttribL3dv = (PFNGLVERTEXATTRIBL3DVPROC)load("glVertexAttribL3dv");
	_glVertexAttribL4dv = (PFNGLVERTEXATTRIBL4DVPROC)load("glVertexAttribL4dv");
	_glVertexAttribLPointer = (PFNGLVERTEXATTRIBLPOINTERPROC)load("glVertexAttribLPointer");
	_glGetVertexAttribLdv = (PFNGLGETVERTEXATTRIBLDVPROC)load("glGetVertexAttribLdv");
	_glViewportArrayv = (PFNGLVIEWPORTARRAYVPROC)load("glViewportArrayv");
	_glViewportIndexedf = (PFNGLVIEWPORTINDEXEDFPROC)load("glViewportIndexedf");
	_glViewportIndexedfv = (PFNGLVIEWPORTINDEXEDFVPROC)load("glViewportIndexedfv");
	_glScissorArrayv = (PFNGLSCISSORARRAYVPROC)load("glScissorArrayv");
	_glScissorIndexed = (PFNGLSCISSORINDEXEDPROC)load("glScissorIndexed");
	_glScissorIndexedv = (PFNGLSCISSORINDEXEDVPROC)load("glScissorIndexedv");
	_glDepthRangeArrayv = (PFNGLDEPTHRANGEARRAYVPROC)load("glDepthRangeArrayv");
	_glDepthRangeIndexed = (PFNGLDEPTHRANGEINDEXEDPROC)load("glDepthRangeIndexed");
	_glGetFloati_v = (PFNGLGETFLOATI_VPROC)load("glGetFloati_v");
	_glGetDoublei_v = (PFNGLGETDOUBLEI_VPROC)load("glGetDoublei_v");
}
static void load_GL_VERSION_4_2(loadproc load) {
	if (!_GL_VERSION_4_2) return;
	_glDrawArraysInstancedBaseInstance = (PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC)load("glDrawArraysInstancedBaseInstance");
	_glDrawElementsInstancedBaseInstance = (PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC)load("glDrawElementsInstancedBaseInstance");
	_glDrawElementsInstancedBaseVertexBaseInstance = (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC)load("glDrawElementsInstancedBaseVertexBaseInstance");
	_glGetInternalformativ = (PFNGLGETINTERNALFORMATIVPROC)load("glGetInternalformativ");
	_glGetActiveAtomicCounterBufferiv = (PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC)load("glGetActiveAtomicCounterBufferiv");
	_glBindImageTexture = (PFNGLBINDIMAGETEXTUREPROC)load("glBindImageTexture");
	_glMemoryBarrier = (PFNGLMEMORYBARRIERPROC)load("glMemoryBarrier");
	_glTexStorage1D = (PFNGLTEXSTORAGE1DPROC)load("glTexStorage1D");
	_glTexStorage2D = (PFNGLTEXSTORAGE2DPROC)load("glTexStorage2D");
	_glTexStorage3D = (PFNGLTEXSTORAGE3DPROC)load("glTexStorage3D");
	_glDrawTransformFeedbackInstanced = (PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC)load("glDrawTransformFeedbackInstanced");
	_glDrawTransformFeedbackStreamInstanced = (PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC)load("glDrawTransformFeedbackStreamInstanced");
}
static void load_GL_VERSION_4_3(loadproc load) {
	if (!_GL_VERSION_4_3) return;
	_glClearBufferData = (PFNGLCLEARBUFFERDATAPROC)load("glClearBufferData");
	_glClearBufferSubData = (PFNGLCLEARBUFFERSUBDATAPROC)load("glClearBufferSubData");
	_glDispatchCompute = (PFNGLDISPATCHCOMPUTEPROC)load("glDispatchCompute");
	_glDispatchComputeIndirect = (PFNGLDISPATCHCOMPUTEINDIRECTPROC)load("glDispatchComputeIndirect");
	_glCopyImageSubData = (PFNGLCOPYIMAGESUBDATAPROC)load("glCopyImageSubData");
	_glFramebufferParameteri = (PFNGLFRAMEBUFFERPARAMETERIPROC)load("glFramebufferParameteri");
	_glGetFramebufferParameteriv = (PFNGLGETFRAMEBUFFERPARAMETERIVPROC)load("glGetFramebufferParameteriv");
	_glGetInternalformati64v = (PFNGLGETINTERNALFORMATI64VPROC)load("glGetInternalformati64v");
	_glInvalidateTexSubImage = (PFNGLINVALIDATETEXSUBIMAGEPROC)load("glInvalidateTexSubImage");
	_glInvalidateTexImage = (PFNGLINVALIDATETEXIMAGEPROC)load("glInvalidateTexImage");
	_glInvalidateBufferSubData = (PFNGLINVALIDATEBUFFERSUBDATAPROC)load("glInvalidateBufferSubData");
	_glInvalidateBufferData = (PFNGLINVALIDATEBUFFERDATAPROC)load("glInvalidateBufferData");
	_glInvalidateFramebuffer = (PFNGLINVALIDATEFRAMEBUFFERPROC)load("glInvalidateFramebuffer");
	_glInvalidateSubFramebuffer = (PFNGLINVALIDATESUBFRAMEBUFFERPROC)load("glInvalidateSubFramebuffer");
	_glMultiDrawArraysIndirect = (PFNGLMULTIDRAWARRAYSINDIRECTPROC)load("glMultiDrawArraysIndirect");
	_glMultiDrawElementsIndirect = (PFNGLMULTIDRAWELEMENTSINDIRECTPROC)load("glMultiDrawElementsIndirect");
	_glGetProgramInterfaceiv = (PFNGLGETPROGRAMINTERFACEIVPROC)load("glGetProgramInterfaceiv");
	_glGetProgramResourceIndex = (PFNGLGETPROGRAMRESOURCEINDEXPROC)load("glGetProgramResourceIndex");
	_glGetProgramResourceName = (PFNGLGETPROGRAMRESOURCENAMEPROC)load("glGetProgramResourceName");
	_glGetProgramResourceiv = (PFNGLGETPROGRAMRESOURCEIVPROC)load("glGetProgramResourceiv");
	_glGetProgramResourceLocation = (PFNGLGETPROGRAMRESOURCELOCATIONPROC)load("glGetProgramResourceLocation");
	_glGetProgramResourceLocationIndex = (PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC)load("glGetProgramResourceLocationIndex");
	_glShaderStorageBlockBinding = (PFNGLSHADERSTORAGEBLOCKBINDINGPROC)load("glShaderStorageBlockBinding");
	_glTexBufferRange = (PFNGLTEXBUFFERRANGEPROC)load("glTexBufferRange");
	_glTexStorage2DMultisample = (PFNGLTEXSTORAGE2DMULTISAMPLEPROC)load("glTexStorage2DMultisample");
	_glTexStorage3DMultisample = (PFNGLTEXSTORAGE3DMULTISAMPLEPROC)load("glTexStorage3DMultisample");
	_glTextureView = (PFNGLTEXTUREVIEWPROC)load("glTextureView");
	_glBindVertexBuffer = (PFNGLBINDVERTEXBUFFERPROC)load("glBindVertexBuffer");
	_glVertexAttribFormat = (PFNGLVERTEXATTRIBFORMATPROC)load("glVertexAttribFormat");
	_glVertexAttribIFormat = (PFNGLVERTEXATTRIBIFORMATPROC)load("glVertexAttribIFormat");
	_glVertexAttribLFormat = (PFNGLVERTEXATTRIBLFORMATPROC)load("glVertexAttribLFormat");
	_glVertexAttribBinding = (PFNGLVERTEXATTRIBBINDINGPROC)load("glVertexAttribBinding");
	_glVertexBindingDivisor = (PFNGLVERTEXBINDINGDIVISORPROC)load("glVertexBindingDivisor");
	_glDebugMessageControl = (PFNGLDEBUGMESSAGECONTROLPROC)load("glDebugMessageControl");
	_glDebugMessageInsert = (PFNGLDEBUGMESSAGEINSERTPROC)load("glDebugMessageInsert");
	_glDebugMessageCallback = (PFNGLDEBUGMESSAGECALLBACKPROC)load("glDebugMessageCallback");
	_glGetDebugMessageLog = (PFNGLGETDEBUGMESSAGELOGPROC)load("glGetDebugMessageLog");
	_glPushDebugGroup = (PFNGLPUSHDEBUGGROUPPROC)load("glPushDebugGroup");
	_glPopDebugGroup = (PFNGLPOPDEBUGGROUPPROC)load("glPopDebugGroup");
	_glObjectLabel = (PFNGLOBJECTLABELPROC)load("glObjectLabel");
	_glGetObjectLabel = (PFNGLGETOBJECTLABELPROC)load("glGetObjectLabel");
	_glObjectPtrLabel = (PFNGLOBJECTPTRLABELPROC)load("glObjectPtrLabel");
	_glGetObjectPtrLabel = (PFNGLGETOBJECTPTRLABELPROC)load("glGetObjectPtrLabel");
	_glGetPointerv = (PFNGLGETPOINTERVPROC)load("glGetPointerv");
}
static void load_GL_VERSION_4_4(loadproc load) {
	if (!_GL_VERSION_4_4) return;
	_glBufferStorage = (PFNGLBUFFERSTORAGEPROC)load("glBufferStorage");
	_glClearTexImage = (PFNGLCLEARTEXIMAGEPROC)load("glClearTexImage");
	_glClearTexSubImage = (PFNGLCLEARTEXSUBIMAGEPROC)load("glClearTexSubImage");
	_glBindBuffersBase = (PFNGLBINDBUFFERSBASEPROC)load("glBindBuffersBase");
	_glBindBuffersRange = (PFNGLBINDBUFFERSRANGEPROC)load("glBindBuffersRange");
	_glBindTextures = (PFNGLBINDTEXTURESPROC)load("glBindTextures");
	_glBindSamplers = (PFNGLBINDSAMPLERSPROC)load("glBindSamplers");
	_glBindImageTextures = (PFNGLBINDIMAGETEXTURESPROC)load("glBindImageTextures");
	_glBindVertexBuffers = (PFNGLBINDVERTEXBUFFERSPROC)load("glBindVertexBuffers");
}
static int find_extensionsGL(void) {
	if (!get_exts()) return 0;
	(void)&has_ext;
	free_exts();
	return 1;
}

static void find_coreGL(void) {

	/* Thank you @elmindreda
	 * https://github.com/elmindreda/greg/blob/master/templates/greg.c.in#L176
	 * https://github.com/glfw/glfw/blob/master/src/context.c#L36
	 */
	int i, major, minor;

	const char* version;
	const char* prefixes[] = {
		"OpenGL ES-CM ",
		"OpenGL ES-CL ",
		"OpenGL ES ",
		NULL
	};

	version = (const char*)glGetString(GL_VERSION);
	if (!version) return;

	for (i = 0; prefixes[i]; i++) {
		const size_t length = strlen(prefixes[i]);
		if (strncmp(version, prefixes[i], length) == 0) {
			version += length;
			break;
		}
	}

#ifdef _MSC_VER
	sscanf_s(version, "%d.%d", &major, &minor);
#else
	sscanf(version, "%d.%d", &major, &minor);
#endif
	GLVersion.major = major; GLVersion.minor = minor;
	max_loaded_major = major; max_loaded_minor = minor;
	_GL_VERSION_1_0 = (major == 1 && minor >= 0) || major > 1;
	_GL_VERSION_1_1 = (major == 1 && minor >= 1) || major > 1;
	_GL_VERSION_1_2 = (major == 1 && minor >= 2) || major > 1;
	_GL_VERSION_1_3 = (major == 1 && minor >= 3) || major > 1;
	_GL_VERSION_1_4 = (major == 1 && minor >= 4) || major > 1;
	_GL_VERSION_1_5 = (major == 1 && minor >= 5) || major > 1;
	_GL_VERSION_2_0 = (major == 2 && minor >= 0) || major > 2;
	_GL_VERSION_2_1 = (major == 2 && minor >= 1) || major > 2;
	_GL_VERSION_3_0 = (major == 3 && minor >= 0) || major > 3;
	_GL_VERSION_3_1 = (major == 3 && minor >= 1) || major > 3;
	_GL_VERSION_3_2 = (major == 3 && minor >= 2) || major > 3;
	_GL_VERSION_3_3 = (major == 3 && minor >= 3) || major > 3;
	_GL_VERSION_4_0 = (major == 4 && minor >= 0) || major > 4;
	_GL_VERSION_4_1 = (major == 4 && minor >= 1) || major > 4;
	_GL_VERSION_4_2 = (major == 4 && minor >= 2) || major > 4;
	_GL_VERSION_4_3 = (major == 4 && minor >= 3) || major > 4;
	_GL_VERSION_4_4 = (major == 4 && minor >= 4) || major > 4;
	if (GLVersion.major > 4 || (GLVersion.major >= 4 && GLVersion.minor >= 4)) {
		max_loaded_major = 4;
		max_loaded_minor = 4;
	}
}

inline void* LoadExtension(const char* name)
{
#if defined( OS_WINDOWS )
	return wglGetProcAddress(name);
#elif defined( OS_LINUX )
	return (void*)glXGetProcAddress((const GLubyte*)name);
#endif
}

int LoadGLLoader(loadproc load) {
	if (extensionsLoaded) return 0;
	extensionsLoaded = true;

#if defined( OS_WINDOWS )
	wglCreateContextAttribsARB = (WGLCREATECONTEXTATTRIBSARB)LoadExtension("wglCreateContextAttribsARB");
	wglChoosePixelFormatARB = (WGLCHOOSEPIXELFORMATARB)LoadExtension("wglChoosePixelFormatARB");
	wglSwapIntervalEXT = (WGLSWAPINTERVALEXT)LoadExtension("wglSwapIntervalEXT");
#elif defined( OS_LINUX )
	glXCreateContextAttribsARB = (GLXCREATECONTEXTATTRIBSARB)LoadExtension("glXCreateContextAttribsARB");
	glXSwapIntervalSGI = (GLXSWAPINTERVALSGI)LoadExtension("glXSwapIntervalSGI");
#endif
	glGetString = (PFNGLGETSTRINGPROC)load("glGetString");
	if (glGetString == NULL) return 0;
	if (glGetString(GL_VERSION) == NULL) return 0;
	GLVersion.major = 0; GLVersion.minor = 0;
	find_coreGL();
	load_GL_VERSION_1_0(load);
	load_GL_VERSION_1_1(load);
	load_GL_VERSION_1_2(load);
	load_GL_VERSION_1_3(load);
	load_GL_VERSION_1_4(load);
	load_GL_VERSION_1_5(load);
	load_GL_VERSION_2_0(load);
	load_GL_VERSION_2_1(load);
	load_GL_VERSION_3_0(load);
	load_GL_VERSION_3_1(load);
	load_GL_VERSION_3_2(load);
	load_GL_VERSION_3_3(load);
	load_GL_VERSION_4_0(load);
	load_GL_VERSION_4_1(load);
	load_GL_VERSION_4_2(load);
	load_GL_VERSION_4_3(load);
	load_GL_VERSION_4_4(load);

	if (!find_extensionsGL()) return 0;
	return GLVersion.major != 0 || GLVersion.minor != 0;
}


/***
-->>>DONT WORK
int LoadExtensions() {
	if (extensionsLoaded) return 0;
	extensionsLoaded = true;

#if defined( OS_WINDOWS )
	wglCreateContextAttribsARB = (WGLCREATECONTEXTATTRIBSARB)LoadExtension("wglCreateContextAttribsARB");
	wglChoosePixelFormatARB = (WGLCHOOSEPIXELFORMATARB)LoadExtension("wglChoosePixelFormatARB");
	wglSwapIntervalEXT = (WGLSWAPINTERVALEXT)LoadExtension("wglSwapIntervalEXT");
#elif defined( OS_LINUX )
	glXCreateContextAttribsARB = (GLXCREATECONTEXTATTRIBSARB)LoadExtension("glXCreateContextAttribsARB");
	glXSwapIntervalSGI = (GLXSWAPINTERVALSGI)LoadExtension("glXSwapIntervalSGI");
#endif
	_glGetString = (PFNGLGETSTRINGPROC)LoadExtension("glGetString");
	if (_glGetString == NULL) return 0;
	if (_glGetString(GL_VERSION) == NULL) return 0;
	GLVersion.major = 0; GLVersion.minor = 0;
	find_coreGL();
	load_GL_VERSION_1_0(LoadExtension);
	load_GL_VERSION_1_1(LoadExtension);
	load_GL_VERSION_1_2(LoadExtension);
	load_GL_VERSION_1_3(LoadExtension);
	load_GL_VERSION_1_4(LoadExtension);
	load_GL_VERSION_1_5(LoadExtension);
	load_GL_VERSION_2_0(LoadExtension);
	load_GL_VERSION_2_1(LoadExtension);
	load_GL_VERSION_3_0(LoadExtension);
	load_GL_VERSION_3_1(LoadExtension);
	load_GL_VERSION_3_2(LoadExtension);
	load_GL_VERSION_3_3(LoadExtension);
	load_GL_VERSION_4_0(LoadExtension);
	load_GL_VERSION_4_1(LoadExtension);
	load_GL_VERSION_4_2(LoadExtension);
	load_GL_VERSION_4_3(LoadExtension);
	load_GL_VERSION_4_4(LoadExtension);

	if (!find_extensionsGL()) return 0;
	return GLVersion.major != 0 || GLVersion.minor != 0;
}

***/

/*

inline void* LoadExtension(const char* name)
{
#if defined( OS_WINDOWS )
	return wglGetProcAddress(name);
#elif defined( OS_LINUX )
	return (void*)glXGetProcAddress((const GLubyte*)name);
#endif
}

void LoadExtensions()
{
	if (extensionsLoaded) return;
	extensionsLoaded = true;

#if defined( OS_WINDOWS )
	wglCreateContextAttribsARB = (WGLCREATECONTEXTATTRIBSARB)LoadExtension("wglCreateContextAttribsARB");
	wglChoosePixelFormatARB = (WGLCHOOSEPIXELFORMATARB)LoadExtension("wglChoosePixelFormatARB");
	wglSwapIntervalEXT = (WGLSWAPINTERVALEXT)LoadExtension("wglSwapIntervalEXT");
#elif defined( OS_LINUX )
	glXCreateContextAttribsARB = (GLXCREATECONTEXTATTRIBSARB)LoadExtension("glXCreateContextAttribsARB");
	glXSwapIntervalSGI = (GLXSWAPINTERVALSGI)LoadExtension("glXSwapIntervalSGI");
#endif

	glCompileShader = (GLCOMPILESHADER)LoadExtension("glCompileShader");
	glCreateShader = (GLCREATESHADER)LoadExtension("glCreateShader");
	glDeleteShader = (GLDELETESHADER)LoadExtension("glDeleteShader");
	glGetShaderiv = (GLGETSHADERIV)LoadExtension("glGetShaderiv");
	glGetShaderInfoLog = (GLGETSHADERINFOLOG)LoadExtension("glGetShaderInfoLog");
	glShaderSource = (GLSHADERSOURCE)LoadExtension("glShaderSource");

	glCreateProgram = (GLCREATEPROGRAM)LoadExtension("glCreateProgram");
	glDeleteProgram = (GLDELETEPROGRAM)LoadExtension("glDeleteProgram");
	glUseProgram = (GLUSEPROGRAM)LoadExtension("glUseProgram");
	glAttachShader = (GLATTACHSHADER)LoadExtension("glAttachShader");
	glLinkProgram = (GLLINKPROGRAM)LoadExtension("glLinkProgram");
	glGetProgramiv = (GLGETPROGRAMIV)LoadExtension("glGetProgramiv");
	glGetProgramInfoLog = (GLGETPROGRAMINFOLOG)LoadExtension("glGetProgramInfoLog");
	glGetAttribLocation = (GLGETATTRIBLOCATION)LoadExtension("glGetAttribLocation");
	glGetUniformLocation = (GLGETUNIFORMLOCATION)LoadExtension("glGetUniformLocation");

	glUniform1f = (GLUNIFORM1F)LoadExtension("glUniform1f");
	glUniform2f = (GLUNIFORM2F)LoadExtension("glUniform2f");
	glUniform3f = (GLUNIFORM3F)LoadExtension("glUniform3f");
	glUniform4f = (GLUNIFORM4F)LoadExtension("glUniform4f");
	glUniform1i = (GLUNIFORM1I)LoadExtension("glUniform1i");
	glUniform2i = (GLUNIFORM2I)LoadExtension("glUniform2i");
	glUniform3i = (GLUNIFORM3I)LoadExtension("glUniform3i");
	glUniform4i = (GLUNIFORM4I)LoadExtension("glUniform4i");
	glUniform1ui = (GLUNIFORM1UI)LoadExtension("glUniform1ui");
	glUniform2ui = (GLUNIFORM2UI)LoadExtension("glUniform2ui");
	glUniform3ui = (GLUNIFORM3UI)LoadExtension("glUniform3ui");
	glUniform4ui = (GLUNIFORM4UI)LoadExtension("glUniform4ui");
	glUniform1fv = (GLUNIFORM1FV)LoadExtension("glUniform1fv");
	glUniform2fv = (GLUNIFORM2FV)LoadExtension("glUniform2fv");
	glUniform3fv = (GLUNIFORM3FV)LoadExtension("glUniform3fv");
	glUniform4fv = (GLUNIFORM4FV)LoadExtension("glUniform4fv");
	glUniform1iv = (GLUNIFORM1IV)LoadExtension("glUniform1iv");
	glUniform2iv = (GLUNIFORM2IV)LoadExtension("glUniform2iv");
	glUniform3iv = (GLUNIFORM3IV)LoadExtension("glUniform3iv");
	glUniform4iv = (GLUNIFORM4IV)LoadExtension("glUniform4iv");
	glUniform1uiv = (GLUNIFORM1UIV)LoadExtension("glUniform1uiv");
	glUniform2uiv = (GLUNIFORM2UIV)LoadExtension("glUniform2uiv");
	glUniform3uiv = (GLUNIFORM3UIV)LoadExtension("glUniform3uiv");
	glUniform4uiv = (GLUNIFORM4UIV)LoadExtension("glUniform4uiv");
	glUniformMatrix2fv = (GLUNIFORMMATRIX2FV)LoadExtension("glUniformMatrix2fv");
	glUniformMatrix3fv = (GLUNIFORMMATRIX3FV)LoadExtension("glUniformMatrix3fv");
	glUniformMatrix4fv = (GLUNIFORMMATRIX4FV)LoadExtension("glUniformMatrix4fv");
	glUniformMatrix2x3fv = (GLUNIFORMMATRIX2X3FV)LoadExtension("glUniformMatrix2x3fv");
	glUniformMatrix3x2fv = (GLUNIFORMMATRIX3X2FV)LoadExtension("glUniformMatrix3x2fv");
	glUniformMatrix2x4fv = (GLUNIFORMMATRIX2X4FV)LoadExtension("glUniformMatrix2x4fv");
	glUniformMatrix4x2fv = (GLUNIFORMMATRIX4X2FV)LoadExtension("glUniformMatrix4x2fv");
	glUniformMatrix3x4fv = (GLUNIFORMMATRIX3X4FV)LoadExtension("glUniformMatrix3x4fv");
	glUniformMatrix4x3fv = (GLUNIFORMMATRIX4X3FV)LoadExtension("glUniformMatrix4x3fv");

	glGenBuffers = (GLGENBUFFERS)LoadExtension("glGenBuffers");
	glDeleteBuffers = (GLDELETEBUFFERS)LoadExtension("glDeleteBuffers");
	glBindBuffer = (GLBINDBUFFER)LoadExtension("glBindBuffer");
	glBufferData = (GLBUFFERDATA)LoadExtension("glBufferData");
	glBufferSubData = (GLBUFFERSUBDATA)LoadExtension("glBufferSubData");
	glGetBufferSubData = (GLGETBUFFERSUBDATA)LoadExtension("glGetBufferSubData");

	glGenVertexArrays = (GLGENVERTEXARRAYS)LoadExtension("glGenVertexArrays");
	glDeleteVertexArrays = (GLDELETEVERTEXARRAYS)LoadExtension("glDeleteVertexArrays");
	glBindVertexArray = (GLBINDVERTEXARRAY)LoadExtension("glBindVertexArray");

	glEnableVertexAttribArray = (GLENABLEVERTEXATTRIBARRAY)LoadExtension("glEnableVertexAttribArray");
	glVertexAttribPointer = (GLVERTEXATTRIBPOINTER)LoadExtension("glVertexAttribPointer");

	glGenerateMipmap = (GLGENERATEMIPMAP)LoadExtension("glGenerateMipmap");

#ifndef GL_VERSION_1_3
	glActiveTexture = (GLACTIVETEXTURE)LoadExtension("glActiveTexture");
#endif

	glGenFramebuffers = (GLGENFRAMEBUFFERS)LoadExtension("glGenFramebuffers");
	glDeleteFramebuffers = (GLDELETEFRAMEBUFFERS)LoadExtension("glDeleteFramebuffers");
	glFramebufferTexture2D = (GLFRAMEBUFFERTEXTURE2D)LoadExtension("glFramebufferTexture2D");
	glFramebufferRenderbuffer = (GLFRAMEBUFFERRENDERBUFFER)LoadExtension("glFramebufferRenderbuffer");
	glBindFramebuffer = (GLBINDFRAMEBUFFER)LoadExtension("glBindFramebuffer");
	glGetFramebufferAttachmentParameteriv = (GLGETFRAMEBUFFERATTACHMENTPARAMETERIV)LoadExtension("glGetFramebufferAttachmentParameteriv");
	glCheckFramebufferStatus = (GLCHECKFRAMEBUFFERSTATUS)LoadExtension("glCheckFramebufferStatus");

	glGenRenderbuffers = (GLGENRENDERBUFFERS)LoadExtension("glGenRenderbuffers");
	glDeleteRenderbuffers = (GLDELETERENDERBUFFERS)LoadExtension("glDeleteRenderbuffers");
	glRenderbufferStorage = (GLRENDERBUFFERSTORAGE)LoadExtension("glRenderbufferStorage");
	glBindRenderbuffer = (GLBINDRENDERBUFFER)LoadExtension("glBindRenderbuffer");

	glTransformFeedbackVaryings = (GLTRANSFORMFEEDBACKVARYINGS)LoadExtension("glTransformFeedbackVaryings");
	glBindBufferBase = (GLBINDBUFFERBASE)LoadExtension("glBindBufferBase");
	glBeginTransformFeedback = (GLBEGINTRANSFORMFEEDBACK)LoadExtension("glBeginTransformFeedback");
	glEndTransformFeedback = (GLENDTRANSFORMFEEDBACK)LoadExtension("glEndTransformFeedback");
}
*/

/*GLCOMPILESHADER glCompileShader;
GLCREATESHADER glCreateShader;
GLDELETESHADER glDeleteShader;
GLGETSHADERIV glGetShaderiv;
GLGETSHADERINFOLOG glGetShaderInfoLog;
GLSHADERSOURCE glShaderSource;

GLCREATEPROGRAM glCreateProgram;
GLDELETEPROGRAM glDeleteProgram;
GLUSEPROGRAM glUseProgram;
GLATTACHSHADER glAttachShader;
GLLINKPROGRAM glLinkProgram;
GLGETPROGRAMIV glGetProgramiv;
GLGETPROGRAMINFOLOG glGetProgramInfoLog;
GLGETATTRIBLOCATION glGetAttribLocation;
GLGETUNIFORMLOCATION glGetUniformLocation;

GLUNIFORM1F glUniform1f;
GLUNIFORM2F glUniform2f;
GLUNIFORM3F glUniform3f;
GLUNIFORM4F glUniform4f;
GLUNIFORM1I glUniform1i;
GLUNIFORM2I glUniform2i;
GLUNIFORM3I glUniform3i;
GLUNIFORM4I glUniform4i;
GLUNIFORM1UI glUniform1ui;
GLUNIFORM2UI glUniform2ui;
GLUNIFORM3UI glUniform3ui;
GLUNIFORM4UI glUniform4ui;
GLUNIFORM1FV glUniform1fv;
GLUNIFORM2FV glUniform2fv;
GLUNIFORM3FV glUniform3fv;
GLUNIFORM4FV glUniform4fv;
GLUNIFORM1IV glUniform1iv;
GLUNIFORM2IV glUniform2iv;
GLUNIFORM3IV glUniform3iv;
GLUNIFORM4IV glUniform4iv;
GLUNIFORM1UIV glUniform1uiv;
GLUNIFORM2UIV glUniform2uiv;
GLUNIFORM3UIV glUniform3uiv;
GLUNIFORM4UIV glUniform4uiv;
GLUNIFORMMATRIX2FV glUniformMatrix2fv;
GLUNIFORMMATRIX3FV glUniformMatrix3fv;
GLUNIFORMMATRIX4FV glUniformMatrix4fv;
GLUNIFORMMATRIX2X3FV glUniformMatrix2x3fv;
GLUNIFORMMATRIX3X2FV glUniformMatrix3x2fv;
GLUNIFORMMATRIX2X4FV glUniformMatrix2x4fv;
GLUNIFORMMATRIX4X2FV glUniformMatrix4x2fv;
GLUNIFORMMATRIX3X4FV glUniformMatrix3x4fv;
GLUNIFORMMATRIX4X3FV glUniformMatrix4x3fv;

GLGENBUFFERS glGenBuffers;
GLDELETEBUFFERS glDeleteBuffers;
GLBINDBUFFER glBindBuffer;
GLBUFFERDATA glBufferData;
GLBUFFERSUBDATA glBufferSubData;
GLGETBUFFERSUBDATA glGetBufferSubData;

GLGENVERTEXARRAYS glGenVertexArrays;
GLDELETEVERTEXARRAYS glDeleteVertexArrays;
GLBINDVERTEXARRAY glBindVertexArray;

GLENABLEVERTEXATTRIBARRAY glEnableVertexAttribArray;
GLVERTEXATTRIBPOINTER glVertexAttribPointer;

GLGENERATEMIPMAP glGenerateMipmap;

#ifndef GL_VERSION_1_3
GLACTIVETEXTURE glActiveTexture;
#endif

GLGENFRAMEBUFFERS glGenFramebuffers;
GLDELETEFRAMEBUFFERS glDeleteFramebuffers;
GLFRAMEBUFFERTEXTURE2D glFramebufferTexture2D;
GLFRAMEBUFFERRENDERBUFFER glFramebufferRenderbuffer;
GLBINDFRAMEBUFFER glBindFramebuffer;
GLGETFRAMEBUFFERATTACHMENTPARAMETERIV glGetFramebufferAttachmentParameteriv;
GLCHECKFRAMEBUFFERSTATUS glCheckFramebufferStatus;

GLGENRENDERBUFFERS glGenRenderbuffers;
GLDELETERENDERBUFFERS glDeleteRenderbuffers;
GLRENDERBUFFERSTORAGE glRenderbufferStorage;
GLBINDRENDERBUFFER glBindRenderbuffer;

GLTRANSFORMFEEDBACKVARYINGS glTransformFeedbackVaryings;
GLBINDBUFFERBASE glBindBufferBase;
GLBEGINTRANSFORMFEEDBACK glBeginTransformFeedback;
GLENDTRANSFORMFEEDBACK glEndTransformFeedback;*/